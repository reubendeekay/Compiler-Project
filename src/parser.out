Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANDNOTEQUAL
    ELLIPSIS
    FALSE
    INTERFACE
    IOTA
    MAP
    NIL
    NOT
    RANGE
    TRUE

Grammar

Rule 0     S' -> Start
Rule 1     Start -> SourceFile
Rule 2     SourceFile -> RepeatNewline PackageClause ImportClause A RepeatTopLevelDecl
Rule 3     A -> empty
Rule 4     PackageClause -> PACKAGE PackageName StatementEnd
Rule 5     PackageName -> ID
Rule 6     ImportClause -> ImportStmt StatementEnd ImportClause
Rule 7     ImportClause -> empty
Rule 8     ImportStmt -> IMPORT Import
Rule 9     ImportStmt -> IMPORT LPAREN StatementEnd ImportList RPAREN
Rule 10    ImportList -> Import StatementEnd ImportList
Rule 11    ImportList -> Import StatementEnd
Rule 12    ImportList -> Import
Rule 13    Import -> ID STRINGVAL
Rule 14    Import -> STRINGVAL
Rule 15    RepeatTopLevelDecl -> TopLevelDecl StatementEnd RepeatTopLevelDecl
Rule 16    RepeatTopLevelDecl -> TopLevelDecl
Rule 17    RepeatTopLevelDecl -> empty
Rule 18    TopLevelDecl -> Declaration
Rule 19    TopLevelDecl -> FunctionDecl
Rule 20    StatementList -> Statement StatementEnd StatementList
Rule 21    StatementList -> Statement
Rule 22    StatementList -> empty
Rule 23    Statement -> Declaration
Rule 24    Statement -> LabeledStmt
Rule 25    Statement -> SimpleStmt
Rule 26    Statement -> ReturnStmt
Rule 27    Statement -> BreakStmt
Rule 28    Statement -> ContinueStmt
Rule 29    Statement -> FallthroughStmt
Rule 30    Statement -> GotoStmt
Rule 31    Statement -> Block
Rule 32    Statement -> IfStmt
Rule 33    Statement -> SwitchStmt
Rule 34    Statement -> ForStmt
Rule 35    Statement -> DeferStmt
Rule 36    Statement -> PrintStmt
Rule 37    Statement -> ScanIntStmt
Rule 38    Statement -> ScanStrStmt
Rule 39    Declaration -> ConstDecl
Rule 40    Declaration -> TypeDecl
Rule 41    Declaration -> VarDecl
Rule 42    ConstDecl -> CONST ConstSpec
Rule 43    ConstSpec -> IdentifierList Types
Rule 44    ConstSpec -> IdentifierList Types EQUALS ExpressionList
Rule 45    TypeDecl -> TYPE RepeatNewline TypeSpec
Rule 46    TypeSpec -> TypeDef
Rule 47    TypeDef -> ID K Types
Rule 48    K -> empty
Rule 49    VarDecl -> VAR RepeatNewline VarSpec
Rule 50    VarSpec -> IdentifierList Types
Rule 51    VarSpec -> IdentifierList Types EQUALS RepeatNewline ExpressionList
Rule 52    FunctionDecl -> FunctionMarker FunctionBody
Rule 53    FunctionDecl -> FunctionMarker
Rule 54    FunctionMarker -> FUNC RepeatNewline FunctionName Signature
Rule 55    FunctionName -> ID
Rule 56    Signature -> Parameters
Rule 57    Signature -> Parameters Result
Rule 58    Parameters -> LPAREN RepeatNewline RPAREN
Rule 59    Parameters -> LPAREN RepeatNewline ParameterList RPAREN
Rule 60    ParameterList -> ParameterDecl RepeatParameterDecl
Rule 61    RepeatParameterDecl -> COMMA RepeatNewline ParameterDecl RepeatParameterDecl
Rule 62    RepeatParameterDecl -> empty
Rule 63    ParameterDecl -> ID Types
Rule 64    ParameterDecl -> Types
Rule 65    Result -> Types
Rule 66    FunctionBody -> Block
Rule 67    LabeledStmt -> Label COLON RepeatNewline Statement
Rule 68    Label -> ID
Rule 69    SimpleStmt -> Assignment
Rule 70    SimpleStmt -> ShortVarDecl
Rule 71    SimpleStmt -> IncDecStmt
Rule 72    SimpleStmt -> ExpressionStmt
Rule 73    ExpressionStmt -> Expression
Rule 74    IncDecStmt -> Expression INCR
Rule 75    IncDecStmt -> Expression DECR
Rule 76    AssignOp -> TIMESEQUAL
Rule 77    AssignOp -> DIVEQUAL
Rule 78    AssignOp -> MODEQUAL
Rule 79    AssignOp -> PLUSEQUAL
Rule 80    AssignOp -> MINUSEQUAL
Rule 81    AssignOp -> LSHIFTEQUAL
Rule 82    AssignOp -> RSHIFTEQUAL
Rule 83    AssignOp -> ANDEQUAL
Rule 84    AssignOp -> OREQUAL
Rule 85    AssignOp -> XOREQUAL
Rule 86    Assignment -> ExpressionList AssignOp RepeatNewline ExpressionList
Rule 87    Assignment -> ExpressionList EQUALS RepeatNewline ExpressionList
Rule 88    Assignment -> ExpressionList EQUALS MallocExp
Rule 89    Assignment -> ExpressionList EQUALS SinExp
Rule 90    Assignment -> ExpressionList EQUALS CosExp
Rule 91    Assignment -> ExpressionList EQUALS OpenFileExp
Rule 92    Assignment -> ReadFileExp
Rule 93    Assignment -> WriteFileExp
Rule 94    Assignment -> CloseFileExp
Rule 95    Assignment -> ExpressionList EQUALS NULL
Rule 96    ShortVarDecl -> ID AUTOASIGN RepeatNewline Expression
Rule 97    ReturnStmt -> RETURN
Rule 98    ReturnStmt -> RETURN ExpressionList
Rule 99    FallthroughStmt -> FALLTHROUGH
Rule 100   BreakStmt -> BREAK
Rule 101   BreakStmt -> BREAK Label
Rule 102   ContinueStmt -> CONTINUE
Rule 103   ContinueStmt -> CONTINUE Label
Rule 104   GotoStmt -> GOTO Label
Rule 105   Block -> LBRACE RepeatNewline StatementList RBRACE
Rule 106   IfExp -> IfMarker RepeatNewline Expression
Rule 107   IfStmt -> IF IfExp Block
Rule 108   IfStmt -> IF IfExp Block EndIfMarker ELSE ElseMarker Block
Rule 109   IfStmt -> IF IfExp Block EndIfMarker ELSE IfStmt
Rule 110   IfMarker -> empty
Rule 111   EndIfMarker -> empty
Rule 112   ElseMarker -> empty
Rule 113   SwitchStmt -> ExprSwitchStmt
Rule 114   ExprSwitchStmt -> SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE
Rule 115   Exp_Inh -> empty
Rule 116   RepeatExprCaseClause -> ExprCaseClause RepeatExprCaseClause
Rule 117   RepeatExprCaseClause -> empty
Rule 118   ExprCaseClause -> ExprSwitchCase COLON RepeatNewline StatementList
Rule 119   ExprSwitchCase -> CASE CaseMarker RepeatNewline Expression
Rule 120   ExprSwitchCase -> DEFAULT DefaultMarker RepeatNewline
Rule 121   CaseMarker -> empty
Rule 122   DefaultMarker -> empty
Rule 123   ForStmt -> FOR ForMarker RepeatNewline Block
Rule 124   ForStmt -> FOR ForMarker RepeatNewline Condition Block
Rule 125   ForStmt -> FOR ForMarker RepeatNewline ForClause Block
Rule 126   ForMarker -> empty
Rule 127   ForClause -> terminator terminator
Rule 128   ForClause -> InitStmt terminator terminator
Rule 129   ForClause -> terminator Condition terminator
Rule 130   ForClause -> terminator terminator PostStmt
Rule 131   ForClause -> InitStmt terminator Condition terminator
Rule 132   ForClause -> InitStmt terminator terminator PostStmt
Rule 133   ForClause -> terminator Condition terminator PostStmt
Rule 134   ForClause -> InitStmt terminator Condition terminator PostStmt
Rule 135   InitStmt -> SimpleStmt
Rule 136   PostStmt -> SimpleStmt
Rule 137   Condition -> Expression
Rule 138   DeferStmt -> DEFER PrimaryExpr Arguments
Rule 139   PrintStmt -> PrintIntStmt
Rule 140   PrintStmt -> PrintStrStmt
Rule 141   PrintStmt -> PrintFloatStmt
Rule 142   PrintIntStmt -> PRINTINT Expression
Rule 143   PrintFloatStmt -> PRINTFLOAT Expression
Rule 144   PrintStrStmt -> PRINTSTR Expression
Rule 145   ScanIntStmt -> SCANINT Expression
Rule 146   ScanStrStmt -> SCANSTR Expression
Rule 147   ExpressionList -> Expression
Rule 148   ExpressionList -> Expression COMMA RepeatNewline ExpressionList
Rule 149   Expression -> Expression LOR RepeatNewline Term1
Rule 150   Expression -> Term1
Rule 151   Term1 -> Term1 LAND RepeatNewline Term2
Rule 152   Term1 -> Term2
Rule 153   Term2 -> Term2 Relop RepeatNewline Term3
Rule 154   Term2 -> Term3
Rule 155   Relop -> LT
Rule 156   Relop -> GT
Rule 157   Relop -> LE
Rule 158   Relop -> GE
Rule 159   Relop -> EQ
Rule 160   Relop -> NE
Rule 161   Term3 -> Term3 PLUS RepeatNewline Term4
Rule 162   Term3 -> Term3 MINUS RepeatNewline Term4
Rule 163   Term3 -> Term3 OR RepeatNewline Term4
Rule 164   Term3 -> Term3 XOR RepeatNewline Term4
Rule 165   Term3 -> NULL
Rule 166   Term3 -> Term4
Rule 167   Term4 -> Term4 TIMES RepeatNewline Term5
Rule 168   Term4 -> Term4 DIVIDE RepeatNewline Term5
Rule 169   Term4 -> Term4 MODULO RepeatNewline Term5
Rule 170   Term4 -> Term4 LSHIFT RepeatNewline Term5
Rule 171   Term4 -> Term4 RSHIFT RepeatNewline Term5
Rule 172   Term4 -> Term4 AND RepeatNewline Term5
Rule 173   Term4 -> Term4 ANDNOT RepeatNewline Term5
Rule 174   Term4 -> Term5
Rule 175   Term5 -> UnaryExp
Rule 176   UnaryExp -> PrimaryExpr
Rule 177   UnaryExp -> Literal
Rule 178   UnaryExp -> UnaryOp RepeatNewline UnaryExp
Rule 179   UnaryOp -> PLUS
Rule 180   UnaryOp -> MINUS
Rule 181   UnaryOp -> LNOT
Rule 182   UnaryOp -> TIMES
Rule 183   UnaryOp -> AND
Rule 184   PrimaryExpr -> OperandName2
Rule 185   PrimaryExpr -> PrimaryExpr Selector
Rule 186   PrimaryExpr -> PrimaryExpr Index
Rule 187   PrimaryExpr -> PrimaryExpr Arguments
Rule 188   PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN
Rule 189   Literal -> BasicLit
Rule 190   Literal -> CompositeLit
Rule 191   BasicLit -> intLit
Rule 192   BasicLit -> floatLit
Rule 193   BasicLit -> stringLit
Rule 194   intLit -> INTEGER
Rule 195   floatLit -> FLOAT
Rule 196   stringLit -> STRINGVAL
Rule 197   stringLit -> CHARACTER
Rule 198   CompositeLit -> LiteralType LiteralValue
Rule 199   LiteralType -> ArrayType
Rule 200   LiteralType -> StructType
Rule 201   LiteralType -> SliceType
Rule 202   Mytypes -> BOOL
Rule 203   Mytypes -> BYTE
Rule 204   Mytypes -> INT
Rule 205   Mytypes -> UINT8
Rule 206   Mytypes -> UINT16
Rule 207   Mytypes -> UINT32
Rule 208   Mytypes -> UINT64
Rule 209   Mytypes -> INT8
Rule 210   Mytypes -> INT16
Rule 211   Mytypes -> INT32
Rule 212   Mytypes -> INT64
Rule 213   Mytypes -> UINT
Rule 214   Mytypes -> FLOAT32
Rule 215   Mytypes -> FLOAT64
Rule 216   Mytypes -> UINTPTR
Rule 217   Mytypes -> STRING
Rule 218   Mytypes -> ERROR
Rule 219   Types -> Mytypes
Rule 220   Types -> TypeLit
Rule 221   Types -> OperandName
Rule 222   TypeLit -> StructType
Rule 223   TypeLit -> ArrayType
Rule 224   TypeLit -> PointerType
Rule 225   TypeLit -> SliceType
Rule 226   SliceType -> LBRACKET RBRACKET Types
Rule 227   PointerType -> TIMES Types
Rule 228   StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
Rule 229   M -> empty
Rule 230   RepeatFieldDecl -> FieldDecl StatementEnd RepeatFieldDecl
Rule 231   RepeatFieldDecl -> FieldDecl
Rule 232   RepeatFieldDecl -> empty
Rule 233   FieldDecl -> IdentifierList Types
Rule 234   ArrayType -> LBRACKET RepeatNewline ArrayLength RBRACKET Types
Rule 235   ArrayLength -> INTEGER
Rule 236   LiteralValue -> LBRACE RepeatNewline RBRACE
Rule 237   LiteralValue -> LBRACE RepeatNewline ElementList RBRACE
Rule 238   ElementList -> KeyedElement RepeatKeyedElement
Rule 239   RepeatKeyedElement -> COMMA RepeatNewline KeyedElement RepeatKeyedElement
Rule 240   RepeatKeyedElement -> empty
Rule 241   KeyedElement -> Element
Rule 242   Element -> BasicLit
Rule 243   OperandName -> ID
Rule 244   OperandName2 -> ID
Rule 245   Selector -> PERIOD RepeatNewline ID
Rule 246   Index -> LBRACKET RepeatNewline Expression RBRACKET
Rule 247   Arguments -> LPAREN RepeatNewline ExpressionList RPAREN
Rule 248   Arguments -> LPAREN RepeatNewline RPAREN
Rule 249   IdentifierList -> ID
Rule 250   IdentifierList -> IdentifierList COMMA RepeatNewline ID
Rule 251   MallocExp -> MALLOC LPAREN Expression RPAREN
Rule 252   OpenFileExp -> OPENFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
Rule 253   ReadFileExp -> READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
Rule 254   WriteFileExp -> WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
Rule 255   CloseFileExp -> CLOSEFILE LPAREN Expression RPAREN
Rule 256   SinExp -> SIN LPAREN Expression RPAREN
Rule 257   CosExp -> COS LPAREN Expression RPAREN
Rule 258   empty -> <empty>
Rule 259   terminator -> SEMI
Rule 260   StatementEnd -> terminator StatementEnd
Rule 261   StatementEnd -> newline StatementEnd
Rule 262   StatementEnd -> terminator
Rule 263   StatementEnd -> newline
Rule 264   RepeatNewline -> newline RepeatNewline
Rule 265   RepeatNewline -> empty

Terminals, with rules where they appear

AND                  : 172 183
ANDEQUAL             : 83
ANDNOT               : 173
ANDNOTEQUAL          : 
AUTOASIGN            : 96
BOOL                 : 202
BREAK                : 100 101
BYTE                 : 203
CASE                 : 119
CHARACTER            : 197
CLOSEFILE            : 255
COLON                : 67 118
COMMA                : 61 148 239 250 252 252 253 253 254 254
CONST                : 42
CONTINUE             : 102 103
COS                  : 257
DECR                 : 75
DEFAULT              : 120
DEFER                : 138
DIVEQUAL             : 77
DIVIDE               : 168
ELLIPSIS             : 
ELSE                 : 108 109
EQ                   : 159
EQUALS               : 44 51 87 88 89 90 91 95
ERROR                : 218
FALLTHROUGH          : 99
FALSE                : 
FLOAT                : 195
FLOAT32              : 214
FLOAT64              : 215
FOR                  : 123 124 125
FUNC                 : 54
GE                   : 158
GOTO                 : 104
GT                   : 156
ID                   : 5 13 47 55 63 68 96 243 244 245 249 250
IF                   : 107 108 109
IMPORT               : 8 9
INCR                 : 74
INT                  : 204
INT16                : 210
INT32                : 211
INT64                : 212
INT8                 : 209
INTEGER              : 194 235
INTERFACE            : 
IOTA                 : 
LAND                 : 151
LBRACE               : 105 114 228 236 237
LBRACKET             : 226 234 246
LE                   : 157
LNOT                 : 181
LOR                  : 149
LPAREN               : 9 58 59 188 247 248 251 252 253 254 255 256 257
LSHIFT               : 170
LSHIFTEQUAL          : 81
LT                   : 155
MALLOC               : 251
MAP                  : 
MINUS                : 162 180
MINUSEQUAL           : 80
MODEQUAL             : 78
MODULO               : 169
NE                   : 160
NIL                  : 
NOT                  : 
NULL                 : 95 165
OPENFILE             : 252
OR                   : 163
OREQUAL              : 84
PACKAGE              : 4
PERIOD               : 245
PLUS                 : 161 179
PLUSEQUAL            : 79
PRINTFLOAT           : 143
PRINTINT             : 142
PRINTSTR             : 144
RANGE                : 
RBRACE               : 105 114 228 236 237
RBRACKET             : 226 234 246
READFILE             : 253
RETURN               : 97 98
RPAREN               : 9 58 59 188 247 248 251 252 253 254 255 256 257
RSHIFT               : 171
RSHIFTEQUAL          : 82
SCANINT              : 145
SCANSTR              : 146
SEMI                 : 259
SIN                  : 256
STRING               : 217
STRINGVAL            : 13 14 196
STRUCT               : 228
SWITCH               : 114
TIMES                : 167 182 227
TIMESEQUAL           : 76
TRUE                 : 
TYPE                 : 45
UINT                 : 213
UINT16               : 206
UINT32               : 207
UINT64               : 208
UINT8                : 205
UINTPTR              : 216
VAR                  : 49
WRITEFILE            : 254
XOR                  : 164
XOREQUAL             : 85
error                : 
newline              : 261 263 264

Nonterminals, with rules where they appear

A                    : 2
Arguments            : 138 187
ArrayLength          : 234
ArrayType            : 199 223
AssignOp             : 86
Assignment           : 69
BasicLit             : 189 242
Block                : 31 66 107 108 108 109 123 124 125
BreakStmt            : 27
CaseMarker           : 119
CloseFileExp         : 94
CompositeLit         : 190
Condition            : 124 129 131 133 134
ConstDecl            : 39
ConstSpec            : 42
ContinueStmt         : 28
CosExp               : 90
Declaration          : 18 23
DefaultMarker        : 120
DeferStmt            : 35
Element              : 241
ElementList          : 237
ElseMarker           : 108
EndIfMarker          : 108 109
Exp_Inh              : 114
ExprCaseClause       : 116
ExprSwitchCase       : 118
ExprSwitchStmt       : 113
Expression           : 73 74 75 96 106 114 119 137 142 143 144 145 146 147 148 149 188 246 251 252 252 252 253 253 253 254 254 254 255 256 257
ExpressionList       : 44 51 86 86 87 87 88 89 90 91 95 98 148 247
ExpressionStmt       : 72
FallthroughStmt      : 29
FieldDecl            : 230 231
ForClause            : 125
ForMarker            : 123 124 125
ForStmt              : 34
FunctionBody         : 52
FunctionDecl         : 19
FunctionMarker       : 52 53
FunctionName         : 54
GotoStmt             : 30
IdentifierList       : 43 44 50 51 233 250
IfExp                : 107 108 109
IfMarker             : 106
IfStmt               : 32 109
Import               : 8 10 11 12
ImportClause         : 2 6
ImportList           : 9 10
ImportStmt           : 6
IncDecStmt           : 71
Index                : 186
InitStmt             : 128 131 132 134
K                    : 47
KeyedElement         : 238 239
Label                : 67 101 103 104
LabeledStmt          : 24
Literal              : 177
LiteralType          : 198
LiteralValue         : 198
M                    : 228
MallocExp            : 88
Mytypes              : 219
OpenFileExp          : 91
OperandName          : 221
OperandName2         : 184
PackageClause        : 2
PackageName          : 4
ParameterDecl        : 60 61
ParameterList        : 59
Parameters           : 56 57
PointerType          : 224
PostStmt             : 130 132 133 134
PrimaryExpr          : 138 176 185 186 187
PrintFloatStmt       : 141
PrintIntStmt         : 139
PrintStmt            : 36
PrintStrStmt         : 140
ReadFileExp          : 92
Relop                : 153
RepeatExprCaseClause : 114 116
RepeatFieldDecl      : 228 230
RepeatKeyedElement   : 238 239
RepeatNewline        : 2 45 49 51 54 58 59 61 67 86 87 96 105 106 114 114 118 119 120 123 124 125 148 149 151 153 161 162 163 164 167 168 169 170 171 172 173 178 188 228 228 234 236 237 239 245 246 247 248 250 264
RepeatParameterDecl  : 60 61
RepeatTopLevelDecl   : 2 15
Result               : 57
ReturnStmt           : 26
ScanIntStmt          : 37
ScanStrStmt          : 38
Selector             : 185
ShortVarDecl         : 70
Signature            : 54
SimpleStmt           : 25 135 136
SinExp               : 89
SliceType            : 201 225
SourceFile           : 1
Start                : 0
Statement            : 20 21 67
StatementEnd         : 4 6 9 10 11 15 20 230 260 261
StatementList        : 20 105 118
StructType           : 200 222
SwitchStmt           : 33
Term1                : 149 150 151
Term2                : 151 152 153
Term3                : 153 154 161 162 163 164
Term4                : 161 162 163 164 166 167 168 169 170 171 172 173
Term5                : 167 168 169 170 171 172 173 174
TopLevelDecl         : 15 16
TypeDecl             : 40
TypeDef              : 46
TypeLit              : 220
TypeSpec             : 45
Types                : 43 44 47 50 51 63 64 65 226 227 233 234
UnaryExp             : 175 178
UnaryOp              : 178
VarDecl              : 41
VarSpec              : 49
WriteFileExp         : 93
empty                : 3 7 17 22 48 62 110 111 112 115 117 121 122 126 229 232 240 265
floatLit             : 192
intLit               : 191
stringLit            : 193
terminator           : 127 127 128 128 129 129 130 130 131 131 132 132 133 133 134 134 260 262

Parsing method: LALR

state 0

    (0) S' -> . Start
    (1) Start -> . SourceFile
    (2) SourceFile -> . RepeatNewline PackageClause ImportClause A RepeatTopLevelDecl
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    PACKAGE         reduce using rule 258 (empty -> .)

    Start                          shift and go to state 1
    SourceFile                     shift and go to state 2
    RepeatNewline                  shift and go to state 3
    empty                          shift and go to state 5

state 1

    (0) S' -> Start .



state 2

    (1) Start -> SourceFile .

    $end            reduce using rule 1 (Start -> SourceFile .)


state 3

    (2) SourceFile -> RepeatNewline . PackageClause ImportClause A RepeatTopLevelDecl
    (4) PackageClause -> . PACKAGE PackageName StatementEnd

    PACKAGE         shift and go to state 7

    PackageClause                  shift and go to state 6

state 4

    (264) RepeatNewline -> newline . RepeatNewline
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    PACKAGE         reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    RETURN          reduce using rule 258 (empty -> .)
    BREAK           reduce using rule 258 (empty -> .)
    CONTINUE        reduce using rule 258 (empty -> .)
    FALLTHROUGH     reduce using rule 258 (empty -> .)
    GOTO            reduce using rule 258 (empty -> .)
    LBRACE          reduce using rule 258 (empty -> .)
    IF              reduce using rule 258 (empty -> .)
    FOR             reduce using rule 258 (empty -> .)
    DEFER           reduce using rule 258 (empty -> .)
    SCANINT         reduce using rule 258 (empty -> .)
    SCANSTR         reduce using rule 258 (empty -> .)
    CONST           reduce using rule 258 (empty -> .)
    TYPE            reduce using rule 258 (empty -> .)
    VAR             reduce using rule 258 (empty -> .)
    SWITCH          reduce using rule 258 (empty -> .)
    PRINTINT        reduce using rule 258 (empty -> .)
    PRINTSTR        reduce using rule 258 (empty -> .)
    PRINTFLOAT      reduce using rule 258 (empty -> .)
    READFILE        reduce using rule 258 (empty -> .)
    WRITEFILE       reduce using rule 258 (empty -> .)
    CLOSEFILE       reduce using rule 258 (empty -> .)
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)
    RBRACE          reduce using rule 258 (empty -> .)
    RPAREN          reduce using rule 258 (empty -> .)
    BOOL            reduce using rule 258 (empty -> .)
    BYTE            reduce using rule 258 (empty -> .)
    INT             reduce using rule 258 (empty -> .)
    UINT8           reduce using rule 258 (empty -> .)
    UINT16          reduce using rule 258 (empty -> .)
    UINT32          reduce using rule 258 (empty -> .)
    UINT64          reduce using rule 258 (empty -> .)
    INT8            reduce using rule 258 (empty -> .)
    INT16           reduce using rule 258 (empty -> .)
    INT32           reduce using rule 258 (empty -> .)
    INT64           reduce using rule 258 (empty -> .)
    UINT            reduce using rule 258 (empty -> .)
    FLOAT32         reduce using rule 258 (empty -> .)
    FLOAT64         reduce using rule 258 (empty -> .)
    UINTPTR         reduce using rule 258 (empty -> .)
    STRING          reduce using rule 258 (empty -> .)
    ERROR           reduce using rule 258 (empty -> .)
    SEMI            reduce using rule 258 (empty -> .)
    CASE            reduce using rule 258 (empty -> .)
    DEFAULT         reduce using rule 258 (empty -> .)
    COLON           reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 8
    empty                          shift and go to state 5

state 5

    (265) RepeatNewline -> empty .

    PACKAGE         reduce using rule 265 (RepeatNewline -> empty .)
    ID              reduce using rule 265 (RepeatNewline -> empty .)
    RETURN          reduce using rule 265 (RepeatNewline -> empty .)
    BREAK           reduce using rule 265 (RepeatNewline -> empty .)
    CONTINUE        reduce using rule 265 (RepeatNewline -> empty .)
    FALLTHROUGH     reduce using rule 265 (RepeatNewline -> empty .)
    GOTO            reduce using rule 265 (RepeatNewline -> empty .)
    LBRACE          reduce using rule 265 (RepeatNewline -> empty .)
    IF              reduce using rule 265 (RepeatNewline -> empty .)
    FOR             reduce using rule 265 (RepeatNewline -> empty .)
    DEFER           reduce using rule 265 (RepeatNewline -> empty .)
    SCANINT         reduce using rule 265 (RepeatNewline -> empty .)
    SCANSTR         reduce using rule 265 (RepeatNewline -> empty .)
    CONST           reduce using rule 265 (RepeatNewline -> empty .)
    TYPE            reduce using rule 265 (RepeatNewline -> empty .)
    VAR             reduce using rule 265 (RepeatNewline -> empty .)
    SWITCH          reduce using rule 265 (RepeatNewline -> empty .)
    PRINTINT        reduce using rule 265 (RepeatNewline -> empty .)
    PRINTSTR        reduce using rule 265 (RepeatNewline -> empty .)
    PRINTFLOAT      reduce using rule 265 (RepeatNewline -> empty .)
    READFILE        reduce using rule 265 (RepeatNewline -> empty .)
    WRITEFILE       reduce using rule 265 (RepeatNewline -> empty .)
    CLOSEFILE       reduce using rule 265 (RepeatNewline -> empty .)
    NULL            reduce using rule 265 (RepeatNewline -> empty .)
    LPAREN          reduce using rule 265 (RepeatNewline -> empty .)
    PLUS            reduce using rule 265 (RepeatNewline -> empty .)
    MINUS           reduce using rule 265 (RepeatNewline -> empty .)
    LNOT            reduce using rule 265 (RepeatNewline -> empty .)
    TIMES           reduce using rule 265 (RepeatNewline -> empty .)
    AND             reduce using rule 265 (RepeatNewline -> empty .)
    INTEGER         reduce using rule 265 (RepeatNewline -> empty .)
    FLOAT           reduce using rule 265 (RepeatNewline -> empty .)
    STRINGVAL       reduce using rule 265 (RepeatNewline -> empty .)
    CHARACTER       reduce using rule 265 (RepeatNewline -> empty .)
    LBRACKET        reduce using rule 265 (RepeatNewline -> empty .)
    STRUCT          reduce using rule 265 (RepeatNewline -> empty .)
    RBRACE          reduce using rule 265 (RepeatNewline -> empty .)
    RPAREN          reduce using rule 265 (RepeatNewline -> empty .)
    BOOL            reduce using rule 265 (RepeatNewline -> empty .)
    BYTE            reduce using rule 265 (RepeatNewline -> empty .)
    INT             reduce using rule 265 (RepeatNewline -> empty .)
    UINT8           reduce using rule 265 (RepeatNewline -> empty .)
    UINT16          reduce using rule 265 (RepeatNewline -> empty .)
    UINT32          reduce using rule 265 (RepeatNewline -> empty .)
    UINT64          reduce using rule 265 (RepeatNewline -> empty .)
    INT8            reduce using rule 265 (RepeatNewline -> empty .)
    INT16           reduce using rule 265 (RepeatNewline -> empty .)
    INT32           reduce using rule 265 (RepeatNewline -> empty .)
    INT64           reduce using rule 265 (RepeatNewline -> empty .)
    UINT            reduce using rule 265 (RepeatNewline -> empty .)
    FLOAT32         reduce using rule 265 (RepeatNewline -> empty .)
    FLOAT64         reduce using rule 265 (RepeatNewline -> empty .)
    UINTPTR         reduce using rule 265 (RepeatNewline -> empty .)
    STRING          reduce using rule 265 (RepeatNewline -> empty .)
    ERROR           reduce using rule 265 (RepeatNewline -> empty .)
    SEMI            reduce using rule 265 (RepeatNewline -> empty .)
    CASE            reduce using rule 265 (RepeatNewline -> empty .)
    DEFAULT         reduce using rule 265 (RepeatNewline -> empty .)
    COLON           reduce using rule 265 (RepeatNewline -> empty .)


state 6

    (2) SourceFile -> RepeatNewline PackageClause . ImportClause A RepeatTopLevelDecl
    (6) ImportClause -> . ImportStmt StatementEnd ImportClause
    (7) ImportClause -> . empty
    (8) ImportStmt -> . IMPORT Import
    (9) ImportStmt -> . IMPORT LPAREN StatementEnd ImportList RPAREN
    (258) empty -> .

    IMPORT          shift and go to state 12
    CONST           reduce using rule 258 (empty -> .)
    TYPE            reduce using rule 258 (empty -> .)
    VAR             reduce using rule 258 (empty -> .)
    FUNC            reduce using rule 258 (empty -> .)
    $end            reduce using rule 258 (empty -> .)

    ImportClause                   shift and go to state 9
    ImportStmt                     shift and go to state 10
    empty                          shift and go to state 11

state 7

    (4) PackageClause -> PACKAGE . PackageName StatementEnd
    (5) PackageName -> . ID

    ID              shift and go to state 14

    PackageName                    shift and go to state 13

state 8

    (264) RepeatNewline -> newline RepeatNewline .

    PACKAGE         reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    ID              reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    RETURN          reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    BREAK           reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    CONTINUE        reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    FALLTHROUGH     reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    GOTO            reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    LBRACE          reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    IF              reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    FOR             reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    DEFER           reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    SCANINT         reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    SCANSTR         reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    CONST           reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    TYPE            reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    VAR             reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    SWITCH          reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    PRINTINT        reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    PRINTSTR        reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    PRINTFLOAT      reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    READFILE        reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    WRITEFILE       reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    CLOSEFILE       reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    NULL            reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    LPAREN          reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    PLUS            reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    MINUS           reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    LNOT            reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    TIMES           reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    AND             reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    INTEGER         reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    FLOAT           reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    STRINGVAL       reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    CHARACTER       reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    LBRACKET        reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    STRUCT          reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    RBRACE          reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    RPAREN          reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    BOOL            reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    BYTE            reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    INT             reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    UINT8           reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    UINT16          reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    UINT32          reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    UINT64          reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    INT8            reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    INT16           reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    INT32           reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    INT64           reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    UINT            reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    FLOAT32         reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    FLOAT64         reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    UINTPTR         reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    STRING          reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    ERROR           reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    SEMI            reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    CASE            reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    DEFAULT         reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)
    COLON           reduce using rule 264 (RepeatNewline -> newline RepeatNewline .)


state 9

    (2) SourceFile -> RepeatNewline PackageClause ImportClause . A RepeatTopLevelDecl
    (3) A -> . empty
    (258) empty -> .

    CONST           reduce using rule 258 (empty -> .)
    TYPE            reduce using rule 258 (empty -> .)
    VAR             reduce using rule 258 (empty -> .)
    FUNC            reduce using rule 258 (empty -> .)
    $end            reduce using rule 258 (empty -> .)

    A                              shift and go to state 15
    empty                          shift and go to state 16

state 10

    (6) ImportClause -> ImportStmt . StatementEnd ImportClause
    (260) StatementEnd -> . terminator StatementEnd
    (261) StatementEnd -> . newline StatementEnd
    (262) StatementEnd -> . terminator
    (263) StatementEnd -> . newline
    (259) terminator -> . SEMI

    newline         shift and go to state 19
    SEMI            shift and go to state 20

    StatementEnd                   shift and go to state 17
    terminator                     shift and go to state 18

state 11

    (7) ImportClause -> empty .

    CONST           reduce using rule 7 (ImportClause -> empty .)
    TYPE            reduce using rule 7 (ImportClause -> empty .)
    VAR             reduce using rule 7 (ImportClause -> empty .)
    FUNC            reduce using rule 7 (ImportClause -> empty .)
    $end            reduce using rule 7 (ImportClause -> empty .)


state 12

    (8) ImportStmt -> IMPORT . Import
    (9) ImportStmt -> IMPORT . LPAREN StatementEnd ImportList RPAREN
    (13) Import -> . ID STRINGVAL
    (14) Import -> . STRINGVAL

    LPAREN          shift and go to state 22
    ID              shift and go to state 23
    STRINGVAL       shift and go to state 24

    Import                         shift and go to state 21

state 13

    (4) PackageClause -> PACKAGE PackageName . StatementEnd
    (260) StatementEnd -> . terminator StatementEnd
    (261) StatementEnd -> . newline StatementEnd
    (262) StatementEnd -> . terminator
    (263) StatementEnd -> . newline
    (259) terminator -> . SEMI

    newline         shift and go to state 19
    SEMI            shift and go to state 20

    StatementEnd                   shift and go to state 25
    terminator                     shift and go to state 18

state 14

    (5) PackageName -> ID .

    newline         reduce using rule 5 (PackageName -> ID .)
    SEMI            reduce using rule 5 (PackageName -> ID .)


state 15

    (2) SourceFile -> RepeatNewline PackageClause ImportClause A . RepeatTopLevelDecl
    (15) RepeatTopLevelDecl -> . TopLevelDecl StatementEnd RepeatTopLevelDecl
    (16) RepeatTopLevelDecl -> . TopLevelDecl
    (17) RepeatTopLevelDecl -> . empty
    (18) TopLevelDecl -> . Declaration
    (19) TopLevelDecl -> . FunctionDecl
    (258) empty -> .
    (39) Declaration -> . ConstDecl
    (40) Declaration -> . TypeDecl
    (41) Declaration -> . VarDecl
    (52) FunctionDecl -> . FunctionMarker FunctionBody
    (53) FunctionDecl -> . FunctionMarker
    (42) ConstDecl -> . CONST ConstSpec
    (45) TypeDecl -> . TYPE RepeatNewline TypeSpec
    (49) VarDecl -> . VAR RepeatNewline VarSpec
    (54) FunctionMarker -> . FUNC RepeatNewline FunctionName Signature

    $end            reduce using rule 258 (empty -> .)
    CONST           shift and go to state 35
    TYPE            shift and go to state 36
    VAR             shift and go to state 37
    FUNC            shift and go to state 38

    RepeatTopLevelDecl             shift and go to state 26
    TopLevelDecl                   shift and go to state 27
    empty                          shift and go to state 28
    Declaration                    shift and go to state 29
    FunctionDecl                   shift and go to state 30
    ConstDecl                      shift and go to state 31
    TypeDecl                       shift and go to state 32
    VarDecl                        shift and go to state 33
    FunctionMarker                 shift and go to state 34

state 16

    (3) A -> empty .

    CONST           reduce using rule 3 (A -> empty .)
    TYPE            reduce using rule 3 (A -> empty .)
    VAR             reduce using rule 3 (A -> empty .)
    FUNC            reduce using rule 3 (A -> empty .)
    $end            reduce using rule 3 (A -> empty .)


state 17

    (6) ImportClause -> ImportStmt StatementEnd . ImportClause
    (6) ImportClause -> . ImportStmt StatementEnd ImportClause
    (7) ImportClause -> . empty
    (8) ImportStmt -> . IMPORT Import
    (9) ImportStmt -> . IMPORT LPAREN StatementEnd ImportList RPAREN
    (258) empty -> .

    IMPORT          shift and go to state 12
    CONST           reduce using rule 258 (empty -> .)
    TYPE            reduce using rule 258 (empty -> .)
    VAR             reduce using rule 258 (empty -> .)
    FUNC            reduce using rule 258 (empty -> .)
    $end            reduce using rule 258 (empty -> .)

    ImportStmt                     shift and go to state 10
    ImportClause                   shift and go to state 39
    empty                          shift and go to state 11

state 18

    (260) StatementEnd -> terminator . StatementEnd
    (262) StatementEnd -> terminator .
    (260) StatementEnd -> . terminator StatementEnd
    (261) StatementEnd -> . newline StatementEnd
    (262) StatementEnd -> . terminator
    (263) StatementEnd -> . newline
    (259) terminator -> . SEMI

    IMPORT          reduce using rule 262 (StatementEnd -> terminator .)
    CONST           reduce using rule 262 (StatementEnd -> terminator .)
    TYPE            reduce using rule 262 (StatementEnd -> terminator .)
    VAR             reduce using rule 262 (StatementEnd -> terminator .)
    FUNC            reduce using rule 262 (StatementEnd -> terminator .)
    $end            reduce using rule 262 (StatementEnd -> terminator .)
    ID              reduce using rule 262 (StatementEnd -> terminator .)
    STRINGVAL       reduce using rule 262 (StatementEnd -> terminator .)
    RPAREN          reduce using rule 262 (StatementEnd -> terminator .)
    RETURN          reduce using rule 262 (StatementEnd -> terminator .)
    BREAK           reduce using rule 262 (StatementEnd -> terminator .)
    CONTINUE        reduce using rule 262 (StatementEnd -> terminator .)
    FALLTHROUGH     reduce using rule 262 (StatementEnd -> terminator .)
    GOTO            reduce using rule 262 (StatementEnd -> terminator .)
    LBRACE          reduce using rule 262 (StatementEnd -> terminator .)
    IF              reduce using rule 262 (StatementEnd -> terminator .)
    FOR             reduce using rule 262 (StatementEnd -> terminator .)
    DEFER           reduce using rule 262 (StatementEnd -> terminator .)
    SCANINT         reduce using rule 262 (StatementEnd -> terminator .)
    SCANSTR         reduce using rule 262 (StatementEnd -> terminator .)
    SWITCH          reduce using rule 262 (StatementEnd -> terminator .)
    PRINTINT        reduce using rule 262 (StatementEnd -> terminator .)
    PRINTSTR        reduce using rule 262 (StatementEnd -> terminator .)
    PRINTFLOAT      reduce using rule 262 (StatementEnd -> terminator .)
    READFILE        reduce using rule 262 (StatementEnd -> terminator .)
    WRITEFILE       reduce using rule 262 (StatementEnd -> terminator .)
    CLOSEFILE       reduce using rule 262 (StatementEnd -> terminator .)
    NULL            reduce using rule 262 (StatementEnd -> terminator .)
    LPAREN          reduce using rule 262 (StatementEnd -> terminator .)
    PLUS            reduce using rule 262 (StatementEnd -> terminator .)
    MINUS           reduce using rule 262 (StatementEnd -> terminator .)
    LNOT            reduce using rule 262 (StatementEnd -> terminator .)
    TIMES           reduce using rule 262 (StatementEnd -> terminator .)
    AND             reduce using rule 262 (StatementEnd -> terminator .)
    INTEGER         reduce using rule 262 (StatementEnd -> terminator .)
    FLOAT           reduce using rule 262 (StatementEnd -> terminator .)
    CHARACTER       reduce using rule 262 (StatementEnd -> terminator .)
    LBRACKET        reduce using rule 262 (StatementEnd -> terminator .)
    STRUCT          reduce using rule 262 (StatementEnd -> terminator .)
    RBRACE          reduce using rule 262 (StatementEnd -> terminator .)
    CASE            reduce using rule 262 (StatementEnd -> terminator .)
    DEFAULT         reduce using rule 262 (StatementEnd -> terminator .)
    newline         shift and go to state 19
    SEMI            shift and go to state 20

    terminator                     shift and go to state 18
    StatementEnd                   shift and go to state 40

state 19

    (261) StatementEnd -> newline . StatementEnd
    (263) StatementEnd -> newline .
    (260) StatementEnd -> . terminator StatementEnd
    (261) StatementEnd -> . newline StatementEnd
    (262) StatementEnd -> . terminator
    (263) StatementEnd -> . newline
    (259) terminator -> . SEMI

    IMPORT          reduce using rule 263 (StatementEnd -> newline .)
    CONST           reduce using rule 263 (StatementEnd -> newline .)
    TYPE            reduce using rule 263 (StatementEnd -> newline .)
    VAR             reduce using rule 263 (StatementEnd -> newline .)
    FUNC            reduce using rule 263 (StatementEnd -> newline .)
    $end            reduce using rule 263 (StatementEnd -> newline .)
    ID              reduce using rule 263 (StatementEnd -> newline .)
    STRINGVAL       reduce using rule 263 (StatementEnd -> newline .)
    RPAREN          reduce using rule 263 (StatementEnd -> newline .)
    RETURN          reduce using rule 263 (StatementEnd -> newline .)
    BREAK           reduce using rule 263 (StatementEnd -> newline .)
    CONTINUE        reduce using rule 263 (StatementEnd -> newline .)
    FALLTHROUGH     reduce using rule 263 (StatementEnd -> newline .)
    GOTO            reduce using rule 263 (StatementEnd -> newline .)
    LBRACE          reduce using rule 263 (StatementEnd -> newline .)
    IF              reduce using rule 263 (StatementEnd -> newline .)
    FOR             reduce using rule 263 (StatementEnd -> newline .)
    DEFER           reduce using rule 263 (StatementEnd -> newline .)
    SCANINT         reduce using rule 263 (StatementEnd -> newline .)
    SCANSTR         reduce using rule 263 (StatementEnd -> newline .)
    SWITCH          reduce using rule 263 (StatementEnd -> newline .)
    PRINTINT        reduce using rule 263 (StatementEnd -> newline .)
    PRINTSTR        reduce using rule 263 (StatementEnd -> newline .)
    PRINTFLOAT      reduce using rule 263 (StatementEnd -> newline .)
    READFILE        reduce using rule 263 (StatementEnd -> newline .)
    WRITEFILE       reduce using rule 263 (StatementEnd -> newline .)
    CLOSEFILE       reduce using rule 263 (StatementEnd -> newline .)
    NULL            reduce using rule 263 (StatementEnd -> newline .)
    LPAREN          reduce using rule 263 (StatementEnd -> newline .)
    PLUS            reduce using rule 263 (StatementEnd -> newline .)
    MINUS           reduce using rule 263 (StatementEnd -> newline .)
    LNOT            reduce using rule 263 (StatementEnd -> newline .)
    TIMES           reduce using rule 263 (StatementEnd -> newline .)
    AND             reduce using rule 263 (StatementEnd -> newline .)
    INTEGER         reduce using rule 263 (StatementEnd -> newline .)
    FLOAT           reduce using rule 263 (StatementEnd -> newline .)
    CHARACTER       reduce using rule 263 (StatementEnd -> newline .)
    LBRACKET        reduce using rule 263 (StatementEnd -> newline .)
    STRUCT          reduce using rule 263 (StatementEnd -> newline .)
    RBRACE          reduce using rule 263 (StatementEnd -> newline .)
    CASE            reduce using rule 263 (StatementEnd -> newline .)
    DEFAULT         reduce using rule 263 (StatementEnd -> newline .)
    newline         shift and go to state 19
    SEMI            shift and go to state 20

    StatementEnd                   shift and go to state 41
    terminator                     shift and go to state 18

state 20

    (259) terminator -> SEMI .

    newline         reduce using rule 259 (terminator -> SEMI .)
    SEMI            reduce using rule 259 (terminator -> SEMI .)
    IMPORT          reduce using rule 259 (terminator -> SEMI .)
    CONST           reduce using rule 259 (terminator -> SEMI .)
    TYPE            reduce using rule 259 (terminator -> SEMI .)
    VAR             reduce using rule 259 (terminator -> SEMI .)
    FUNC            reduce using rule 259 (terminator -> SEMI .)
    $end            reduce using rule 259 (terminator -> SEMI .)
    ID              reduce using rule 259 (terminator -> SEMI .)
    STRINGVAL       reduce using rule 259 (terminator -> SEMI .)
    RPAREN          reduce using rule 259 (terminator -> SEMI .)
    RETURN          reduce using rule 259 (terminator -> SEMI .)
    BREAK           reduce using rule 259 (terminator -> SEMI .)
    CONTINUE        reduce using rule 259 (terminator -> SEMI .)
    FALLTHROUGH     reduce using rule 259 (terminator -> SEMI .)
    GOTO            reduce using rule 259 (terminator -> SEMI .)
    LBRACE          reduce using rule 259 (terminator -> SEMI .)
    IF              reduce using rule 259 (terminator -> SEMI .)
    FOR             reduce using rule 259 (terminator -> SEMI .)
    DEFER           reduce using rule 259 (terminator -> SEMI .)
    SCANINT         reduce using rule 259 (terminator -> SEMI .)
    SCANSTR         reduce using rule 259 (terminator -> SEMI .)
    SWITCH          reduce using rule 259 (terminator -> SEMI .)
    PRINTINT        reduce using rule 259 (terminator -> SEMI .)
    PRINTSTR        reduce using rule 259 (terminator -> SEMI .)
    PRINTFLOAT      reduce using rule 259 (terminator -> SEMI .)
    READFILE        reduce using rule 259 (terminator -> SEMI .)
    WRITEFILE       reduce using rule 259 (terminator -> SEMI .)
    CLOSEFILE       reduce using rule 259 (terminator -> SEMI .)
    NULL            reduce using rule 259 (terminator -> SEMI .)
    LPAREN          reduce using rule 259 (terminator -> SEMI .)
    PLUS            reduce using rule 259 (terminator -> SEMI .)
    MINUS           reduce using rule 259 (terminator -> SEMI .)
    LNOT            reduce using rule 259 (terminator -> SEMI .)
    TIMES           reduce using rule 259 (terminator -> SEMI .)
    AND             reduce using rule 259 (terminator -> SEMI .)
    INTEGER         reduce using rule 259 (terminator -> SEMI .)
    FLOAT           reduce using rule 259 (terminator -> SEMI .)
    CHARACTER       reduce using rule 259 (terminator -> SEMI .)
    LBRACKET        reduce using rule 259 (terminator -> SEMI .)
    STRUCT          reduce using rule 259 (terminator -> SEMI .)
    RBRACE          reduce using rule 259 (terminator -> SEMI .)
    CASE            reduce using rule 259 (terminator -> SEMI .)
    DEFAULT         reduce using rule 259 (terminator -> SEMI .)


state 21

    (8) ImportStmt -> IMPORT Import .

    newline         reduce using rule 8 (ImportStmt -> IMPORT Import .)
    SEMI            reduce using rule 8 (ImportStmt -> IMPORT Import .)


state 22

    (9) ImportStmt -> IMPORT LPAREN . StatementEnd ImportList RPAREN
    (260) StatementEnd -> . terminator StatementEnd
    (261) StatementEnd -> . newline StatementEnd
    (262) StatementEnd -> . terminator
    (263) StatementEnd -> . newline
    (259) terminator -> . SEMI

    newline         shift and go to state 19
    SEMI            shift and go to state 20

    StatementEnd                   shift and go to state 42
    terminator                     shift and go to state 18

state 23

    (13) Import -> ID . STRINGVAL

    STRINGVAL       shift and go to state 43


state 24

    (14) Import -> STRINGVAL .

    newline         reduce using rule 14 (Import -> STRINGVAL .)
    SEMI            reduce using rule 14 (Import -> STRINGVAL .)
    RPAREN          reduce using rule 14 (Import -> STRINGVAL .)


state 25

    (4) PackageClause -> PACKAGE PackageName StatementEnd .

    IMPORT          reduce using rule 4 (PackageClause -> PACKAGE PackageName StatementEnd .)
    CONST           reduce using rule 4 (PackageClause -> PACKAGE PackageName StatementEnd .)
    TYPE            reduce using rule 4 (PackageClause -> PACKAGE PackageName StatementEnd .)
    VAR             reduce using rule 4 (PackageClause -> PACKAGE PackageName StatementEnd .)
    FUNC            reduce using rule 4 (PackageClause -> PACKAGE PackageName StatementEnd .)
    $end            reduce using rule 4 (PackageClause -> PACKAGE PackageName StatementEnd .)


state 26

    (2) SourceFile -> RepeatNewline PackageClause ImportClause A RepeatTopLevelDecl .

    $end            reduce using rule 2 (SourceFile -> RepeatNewline PackageClause ImportClause A RepeatTopLevelDecl .)


state 27

    (15) RepeatTopLevelDecl -> TopLevelDecl . StatementEnd RepeatTopLevelDecl
    (16) RepeatTopLevelDecl -> TopLevelDecl .
    (260) StatementEnd -> . terminator StatementEnd
    (261) StatementEnd -> . newline StatementEnd
    (262) StatementEnd -> . terminator
    (263) StatementEnd -> . newline
    (259) terminator -> . SEMI

    $end            reduce using rule 16 (RepeatTopLevelDecl -> TopLevelDecl .)
    newline         shift and go to state 19
    SEMI            shift and go to state 20

    StatementEnd                   shift and go to state 44
    terminator                     shift and go to state 18

state 28

    (17) RepeatTopLevelDecl -> empty .

    $end            reduce using rule 17 (RepeatTopLevelDecl -> empty .)


state 29

    (18) TopLevelDecl -> Declaration .

    newline         reduce using rule 18 (TopLevelDecl -> Declaration .)
    SEMI            reduce using rule 18 (TopLevelDecl -> Declaration .)
    $end            reduce using rule 18 (TopLevelDecl -> Declaration .)


state 30

    (19) TopLevelDecl -> FunctionDecl .

    newline         reduce using rule 19 (TopLevelDecl -> FunctionDecl .)
    SEMI            reduce using rule 19 (TopLevelDecl -> FunctionDecl .)
    $end            reduce using rule 19 (TopLevelDecl -> FunctionDecl .)


state 31

    (39) Declaration -> ConstDecl .

    newline         reduce using rule 39 (Declaration -> ConstDecl .)
    SEMI            reduce using rule 39 (Declaration -> ConstDecl .)
    $end            reduce using rule 39 (Declaration -> ConstDecl .)
    RBRACE          reduce using rule 39 (Declaration -> ConstDecl .)
    CASE            reduce using rule 39 (Declaration -> ConstDecl .)
    DEFAULT         reduce using rule 39 (Declaration -> ConstDecl .)


state 32

    (40) Declaration -> TypeDecl .

    newline         reduce using rule 40 (Declaration -> TypeDecl .)
    SEMI            reduce using rule 40 (Declaration -> TypeDecl .)
    $end            reduce using rule 40 (Declaration -> TypeDecl .)
    RBRACE          reduce using rule 40 (Declaration -> TypeDecl .)
    CASE            reduce using rule 40 (Declaration -> TypeDecl .)
    DEFAULT         reduce using rule 40 (Declaration -> TypeDecl .)


state 33

    (41) Declaration -> VarDecl .

    newline         reduce using rule 41 (Declaration -> VarDecl .)
    SEMI            reduce using rule 41 (Declaration -> VarDecl .)
    $end            reduce using rule 41 (Declaration -> VarDecl .)
    RBRACE          reduce using rule 41 (Declaration -> VarDecl .)
    CASE            reduce using rule 41 (Declaration -> VarDecl .)
    DEFAULT         reduce using rule 41 (Declaration -> VarDecl .)


state 34

    (52) FunctionDecl -> FunctionMarker . FunctionBody
    (53) FunctionDecl -> FunctionMarker .
    (66) FunctionBody -> . Block
    (105) Block -> . LBRACE RepeatNewline StatementList RBRACE

    newline         reduce using rule 53 (FunctionDecl -> FunctionMarker .)
    SEMI            reduce using rule 53 (FunctionDecl -> FunctionMarker .)
    $end            reduce using rule 53 (FunctionDecl -> FunctionMarker .)
    LBRACE          shift and go to state 47

    FunctionBody                   shift and go to state 45
    Block                          shift and go to state 46

state 35

    (42) ConstDecl -> CONST . ConstSpec
    (43) ConstSpec -> . IdentifierList Types
    (44) ConstSpec -> . IdentifierList Types EQUALS ExpressionList
    (249) IdentifierList -> . ID
    (250) IdentifierList -> . IdentifierList COMMA RepeatNewline ID

    ID              shift and go to state 50

    ConstSpec                      shift and go to state 48
    IdentifierList                 shift and go to state 49

state 36

    (45) TypeDecl -> TYPE . RepeatNewline TypeSpec
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    ID              reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 51
    empty                          shift and go to state 5

state 37

    (49) VarDecl -> VAR . RepeatNewline VarSpec
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    ID              reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 52
    empty                          shift and go to state 5

state 38

    (54) FunctionMarker -> FUNC . RepeatNewline FunctionName Signature
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    ID              reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 53
    empty                          shift and go to state 5

state 39

    (6) ImportClause -> ImportStmt StatementEnd ImportClause .

    CONST           reduce using rule 6 (ImportClause -> ImportStmt StatementEnd ImportClause .)
    TYPE            reduce using rule 6 (ImportClause -> ImportStmt StatementEnd ImportClause .)
    VAR             reduce using rule 6 (ImportClause -> ImportStmt StatementEnd ImportClause .)
    FUNC            reduce using rule 6 (ImportClause -> ImportStmt StatementEnd ImportClause .)
    $end            reduce using rule 6 (ImportClause -> ImportStmt StatementEnd ImportClause .)


state 40

    (260) StatementEnd -> terminator StatementEnd .

    IMPORT          reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    CONST           reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    TYPE            reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    VAR             reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    FUNC            reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    $end            reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    ID              reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    STRINGVAL       reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    RPAREN          reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    RETURN          reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    BREAK           reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    CONTINUE        reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    FALLTHROUGH     reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    GOTO            reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    LBRACE          reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    IF              reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    FOR             reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    DEFER           reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    SCANINT         reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    SCANSTR         reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    SWITCH          reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    PRINTINT        reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    PRINTSTR        reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    PRINTFLOAT      reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    READFILE        reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    WRITEFILE       reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    CLOSEFILE       reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    NULL            reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    LPAREN          reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    PLUS            reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    MINUS           reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    LNOT            reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    TIMES           reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    AND             reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    INTEGER         reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    FLOAT           reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    CHARACTER       reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    LBRACKET        reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    STRUCT          reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    RBRACE          reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    CASE            reduce using rule 260 (StatementEnd -> terminator StatementEnd .)
    DEFAULT         reduce using rule 260 (StatementEnd -> terminator StatementEnd .)


state 41

    (261) StatementEnd -> newline StatementEnd .

    IMPORT          reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    CONST           reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    TYPE            reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    VAR             reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    FUNC            reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    $end            reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    ID              reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    STRINGVAL       reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    RPAREN          reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    RETURN          reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    BREAK           reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    CONTINUE        reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    FALLTHROUGH     reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    GOTO            reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    LBRACE          reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    IF              reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    FOR             reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    DEFER           reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    SCANINT         reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    SCANSTR         reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    SWITCH          reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    PRINTINT        reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    PRINTSTR        reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    PRINTFLOAT      reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    READFILE        reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    WRITEFILE       reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    CLOSEFILE       reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    NULL            reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    LPAREN          reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    PLUS            reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    MINUS           reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    LNOT            reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    TIMES           reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    AND             reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    INTEGER         reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    FLOAT           reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    CHARACTER       reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    LBRACKET        reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    STRUCT          reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    RBRACE          reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    CASE            reduce using rule 261 (StatementEnd -> newline StatementEnd .)
    DEFAULT         reduce using rule 261 (StatementEnd -> newline StatementEnd .)


state 42

    (9) ImportStmt -> IMPORT LPAREN StatementEnd . ImportList RPAREN
    (10) ImportList -> . Import StatementEnd ImportList
    (11) ImportList -> . Import StatementEnd
    (12) ImportList -> . Import
    (13) Import -> . ID STRINGVAL
    (14) Import -> . STRINGVAL

    ID              shift and go to state 23
    STRINGVAL       shift and go to state 24

    ImportList                     shift and go to state 54
    Import                         shift and go to state 55

state 43

    (13) Import -> ID STRINGVAL .

    newline         reduce using rule 13 (Import -> ID STRINGVAL .)
    SEMI            reduce using rule 13 (Import -> ID STRINGVAL .)
    RPAREN          reduce using rule 13 (Import -> ID STRINGVAL .)


state 44

    (15) RepeatTopLevelDecl -> TopLevelDecl StatementEnd . RepeatTopLevelDecl
    (15) RepeatTopLevelDecl -> . TopLevelDecl StatementEnd RepeatTopLevelDecl
    (16) RepeatTopLevelDecl -> . TopLevelDecl
    (17) RepeatTopLevelDecl -> . empty
    (18) TopLevelDecl -> . Declaration
    (19) TopLevelDecl -> . FunctionDecl
    (258) empty -> .
    (39) Declaration -> . ConstDecl
    (40) Declaration -> . TypeDecl
    (41) Declaration -> . VarDecl
    (52) FunctionDecl -> . FunctionMarker FunctionBody
    (53) FunctionDecl -> . FunctionMarker
    (42) ConstDecl -> . CONST ConstSpec
    (45) TypeDecl -> . TYPE RepeatNewline TypeSpec
    (49) VarDecl -> . VAR RepeatNewline VarSpec
    (54) FunctionMarker -> . FUNC RepeatNewline FunctionName Signature

    $end            reduce using rule 258 (empty -> .)
    CONST           shift and go to state 35
    TYPE            shift and go to state 36
    VAR             shift and go to state 37
    FUNC            shift and go to state 38

    TopLevelDecl                   shift and go to state 27
    RepeatTopLevelDecl             shift and go to state 56
    empty                          shift and go to state 28
    Declaration                    shift and go to state 29
    FunctionDecl                   shift and go to state 30
    ConstDecl                      shift and go to state 31
    TypeDecl                       shift and go to state 32
    VarDecl                        shift and go to state 33
    FunctionMarker                 shift and go to state 34

state 45

    (52) FunctionDecl -> FunctionMarker FunctionBody .

    newline         reduce using rule 52 (FunctionDecl -> FunctionMarker FunctionBody .)
    SEMI            reduce using rule 52 (FunctionDecl -> FunctionMarker FunctionBody .)
    $end            reduce using rule 52 (FunctionDecl -> FunctionMarker FunctionBody .)


state 46

    (66) FunctionBody -> Block .

    newline         reduce using rule 66 (FunctionBody -> Block .)
    SEMI            reduce using rule 66 (FunctionBody -> Block .)
    $end            reduce using rule 66 (FunctionBody -> Block .)


state 47

    (105) Block -> LBRACE . RepeatNewline StatementList RBRACE
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    RETURN          reduce using rule 258 (empty -> .)
    BREAK           reduce using rule 258 (empty -> .)
    CONTINUE        reduce using rule 258 (empty -> .)
    FALLTHROUGH     reduce using rule 258 (empty -> .)
    GOTO            reduce using rule 258 (empty -> .)
    LBRACE          reduce using rule 258 (empty -> .)
    IF              reduce using rule 258 (empty -> .)
    FOR             reduce using rule 258 (empty -> .)
    DEFER           reduce using rule 258 (empty -> .)
    SCANINT         reduce using rule 258 (empty -> .)
    SCANSTR         reduce using rule 258 (empty -> .)
    CONST           reduce using rule 258 (empty -> .)
    TYPE            reduce using rule 258 (empty -> .)
    VAR             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    SWITCH          reduce using rule 258 (empty -> .)
    PRINTINT        reduce using rule 258 (empty -> .)
    PRINTSTR        reduce using rule 258 (empty -> .)
    PRINTFLOAT      reduce using rule 258 (empty -> .)
    READFILE        reduce using rule 258 (empty -> .)
    WRITEFILE       reduce using rule 258 (empty -> .)
    CLOSEFILE       reduce using rule 258 (empty -> .)
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)
    RBRACE          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 57
    empty                          shift and go to state 5

state 48

    (42) ConstDecl -> CONST ConstSpec .

    newline         reduce using rule 42 (ConstDecl -> CONST ConstSpec .)
    SEMI            reduce using rule 42 (ConstDecl -> CONST ConstSpec .)
    $end            reduce using rule 42 (ConstDecl -> CONST ConstSpec .)
    RBRACE          reduce using rule 42 (ConstDecl -> CONST ConstSpec .)
    CASE            reduce using rule 42 (ConstDecl -> CONST ConstSpec .)
    DEFAULT         reduce using rule 42 (ConstDecl -> CONST ConstSpec .)


state 49

    (43) ConstSpec -> IdentifierList . Types
    (44) ConstSpec -> IdentifierList . Types EQUALS ExpressionList
    (250) IdentifierList -> IdentifierList . COMMA RepeatNewline ID
    (219) Types -> . Mytypes
    (220) Types -> . TypeLit
    (221) Types -> . OperandName
    (202) Mytypes -> . BOOL
    (203) Mytypes -> . BYTE
    (204) Mytypes -> . INT
    (205) Mytypes -> . UINT8
    (206) Mytypes -> . UINT16
    (207) Mytypes -> . UINT32
    (208) Mytypes -> . UINT64
    (209) Mytypes -> . INT8
    (210) Mytypes -> . INT16
    (211) Mytypes -> . INT32
    (212) Mytypes -> . INT64
    (213) Mytypes -> . UINT
    (214) Mytypes -> . FLOAT32
    (215) Mytypes -> . FLOAT64
    (216) Mytypes -> . UINTPTR
    (217) Mytypes -> . STRING
    (218) Mytypes -> . ERROR
    (222) TypeLit -> . StructType
    (223) TypeLit -> . ArrayType
    (224) TypeLit -> . PointerType
    (225) TypeLit -> . SliceType
    (243) OperandName -> . ID
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (227) PointerType -> . TIMES Types
    (226) SliceType -> . LBRACKET RBRACKET Types

    COMMA           shift and go to state 59
    BOOL            shift and go to state 64
    BYTE            shift and go to state 65
    INT             shift and go to state 66
    UINT8           shift and go to state 67
    UINT16          shift and go to state 68
    UINT32          shift and go to state 69
    UINT64          shift and go to state 70
    INT8            shift and go to state 71
    INT16           shift and go to state 72
    INT32           shift and go to state 73
    INT64           shift and go to state 74
    UINT            shift and go to state 75
    FLOAT32         shift and go to state 76
    FLOAT64         shift and go to state 77
    UINTPTR         shift and go to state 78
    STRING          shift and go to state 79
    ERROR           shift and go to state 80
    ID              shift and go to state 60
    STRUCT          shift and go to state 85
    LBRACKET        shift and go to state 86
    TIMES           shift and go to state 87

    Types                          shift and go to state 58
    Mytypes                        shift and go to state 61
    TypeLit                        shift and go to state 62
    OperandName                    shift and go to state 63
    StructType                     shift and go to state 81
    ArrayType                      shift and go to state 82
    PointerType                    shift and go to state 83
    SliceType                      shift and go to state 84

state 50

    (249) IdentifierList -> ID .

    COMMA           reduce using rule 249 (IdentifierList -> ID .)
    BOOL            reduce using rule 249 (IdentifierList -> ID .)
    BYTE            reduce using rule 249 (IdentifierList -> ID .)
    INT             reduce using rule 249 (IdentifierList -> ID .)
    UINT8           reduce using rule 249 (IdentifierList -> ID .)
    UINT16          reduce using rule 249 (IdentifierList -> ID .)
    UINT32          reduce using rule 249 (IdentifierList -> ID .)
    UINT64          reduce using rule 249 (IdentifierList -> ID .)
    INT8            reduce using rule 249 (IdentifierList -> ID .)
    INT16           reduce using rule 249 (IdentifierList -> ID .)
    INT32           reduce using rule 249 (IdentifierList -> ID .)
    INT64           reduce using rule 249 (IdentifierList -> ID .)
    UINT            reduce using rule 249 (IdentifierList -> ID .)
    FLOAT32         reduce using rule 249 (IdentifierList -> ID .)
    FLOAT64         reduce using rule 249 (IdentifierList -> ID .)
    UINTPTR         reduce using rule 249 (IdentifierList -> ID .)
    STRING          reduce using rule 249 (IdentifierList -> ID .)
    ERROR           reduce using rule 249 (IdentifierList -> ID .)
    ID              reduce using rule 249 (IdentifierList -> ID .)
    STRUCT          reduce using rule 249 (IdentifierList -> ID .)
    LBRACKET        reduce using rule 249 (IdentifierList -> ID .)
    TIMES           reduce using rule 249 (IdentifierList -> ID .)


state 51

    (45) TypeDecl -> TYPE RepeatNewline . TypeSpec
    (46) TypeSpec -> . TypeDef
    (47) TypeDef -> . ID K Types

    ID              shift and go to state 90

    TypeSpec                       shift and go to state 88
    TypeDef                        shift and go to state 89

state 52

    (49) VarDecl -> VAR RepeatNewline . VarSpec
    (50) VarSpec -> . IdentifierList Types
    (51) VarSpec -> . IdentifierList Types EQUALS RepeatNewline ExpressionList
    (249) IdentifierList -> . ID
    (250) IdentifierList -> . IdentifierList COMMA RepeatNewline ID

    ID              shift and go to state 50

    VarSpec                        shift and go to state 91
    IdentifierList                 shift and go to state 92

state 53

    (54) FunctionMarker -> FUNC RepeatNewline . FunctionName Signature
    (55) FunctionName -> . ID

    ID              shift and go to state 94

    FunctionName                   shift and go to state 93

state 54

    (9) ImportStmt -> IMPORT LPAREN StatementEnd ImportList . RPAREN

    RPAREN          shift and go to state 95


state 55

    (10) ImportList -> Import . StatementEnd ImportList
    (11) ImportList -> Import . StatementEnd
    (12) ImportList -> Import .
    (260) StatementEnd -> . terminator StatementEnd
    (261) StatementEnd -> . newline StatementEnd
    (262) StatementEnd -> . terminator
    (263) StatementEnd -> . newline
    (259) terminator -> . SEMI

    RPAREN          reduce using rule 12 (ImportList -> Import .)
    newline         shift and go to state 19
    SEMI            shift and go to state 20

    StatementEnd                   shift and go to state 96
    terminator                     shift and go to state 18

state 56

    (15) RepeatTopLevelDecl -> TopLevelDecl StatementEnd RepeatTopLevelDecl .

    $end            reduce using rule 15 (RepeatTopLevelDecl -> TopLevelDecl StatementEnd RepeatTopLevelDecl .)


state 57

    (105) Block -> LBRACE RepeatNewline . StatementList RBRACE
    (20) StatementList -> . Statement StatementEnd StatementList
    (21) StatementList -> . Statement
    (22) StatementList -> . empty
    (23) Statement -> . Declaration
    (24) Statement -> . LabeledStmt
    (25) Statement -> . SimpleStmt
    (26) Statement -> . ReturnStmt
    (27) Statement -> . BreakStmt
    (28) Statement -> . ContinueStmt
    (29) Statement -> . FallthroughStmt
    (30) Statement -> . GotoStmt
    (31) Statement -> . Block
    (32) Statement -> . IfStmt
    (33) Statement -> . SwitchStmt
    (34) Statement -> . ForStmt
    (35) Statement -> . DeferStmt
    (36) Statement -> . PrintStmt
    (37) Statement -> . ScanIntStmt
    (38) Statement -> . ScanStrStmt
    (258) empty -> .
    (39) Declaration -> . ConstDecl
    (40) Declaration -> . TypeDecl
    (41) Declaration -> . VarDecl
    (67) LabeledStmt -> . Label COLON RepeatNewline Statement
    (69) SimpleStmt -> . Assignment
    (70) SimpleStmt -> . ShortVarDecl
    (71) SimpleStmt -> . IncDecStmt
    (72) SimpleStmt -> . ExpressionStmt
    (97) ReturnStmt -> . RETURN
    (98) ReturnStmt -> . RETURN ExpressionList
    (100) BreakStmt -> . BREAK
    (101) BreakStmt -> . BREAK Label
    (102) ContinueStmt -> . CONTINUE
    (103) ContinueStmt -> . CONTINUE Label
    (99) FallthroughStmt -> . FALLTHROUGH
    (104) GotoStmt -> . GOTO Label
    (105) Block -> . LBRACE RepeatNewline StatementList RBRACE
    (107) IfStmt -> . IF IfExp Block
    (108) IfStmt -> . IF IfExp Block EndIfMarker ELSE ElseMarker Block
    (109) IfStmt -> . IF IfExp Block EndIfMarker ELSE IfStmt
    (113) SwitchStmt -> . ExprSwitchStmt
    (123) ForStmt -> . FOR ForMarker RepeatNewline Block
    (124) ForStmt -> . FOR ForMarker RepeatNewline Condition Block
    (125) ForStmt -> . FOR ForMarker RepeatNewline ForClause Block
    (138) DeferStmt -> . DEFER PrimaryExpr Arguments
    (139) PrintStmt -> . PrintIntStmt
    (140) PrintStmt -> . PrintStrStmt
    (141) PrintStmt -> . PrintFloatStmt
    (145) ScanIntStmt -> . SCANINT Expression
    (146) ScanStrStmt -> . SCANSTR Expression
    (42) ConstDecl -> . CONST ConstSpec
    (45) TypeDecl -> . TYPE RepeatNewline TypeSpec
    (49) VarDecl -> . VAR RepeatNewline VarSpec
    (68) Label -> . ID
    (86) Assignment -> . ExpressionList AssignOp RepeatNewline ExpressionList
    (87) Assignment -> . ExpressionList EQUALS RepeatNewline ExpressionList
    (88) Assignment -> . ExpressionList EQUALS MallocExp
    (89) Assignment -> . ExpressionList EQUALS SinExp
    (90) Assignment -> . ExpressionList EQUALS CosExp
    (91) Assignment -> . ExpressionList EQUALS OpenFileExp
    (92) Assignment -> . ReadFileExp
    (93) Assignment -> . WriteFileExp
    (94) Assignment -> . CloseFileExp
    (95) Assignment -> . ExpressionList EQUALS NULL
    (96) ShortVarDecl -> . ID AUTOASIGN RepeatNewline Expression
    (74) IncDecStmt -> . Expression INCR
    (75) IncDecStmt -> . Expression DECR
    (73) ExpressionStmt -> . Expression
    (114) ExprSwitchStmt -> . SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE
    (142) PrintIntStmt -> . PRINTINT Expression
    (144) PrintStrStmt -> . PRINTSTR Expression
    (143) PrintFloatStmt -> . PRINTFLOAT Expression
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (253) ReadFileExp -> . READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (254) WriteFileExp -> . WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (255) CloseFileExp -> . CLOSEFILE LPAREN Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    RBRACE          reduce using rule 258 (empty -> .)
    RETURN          shift and go to state 121
    BREAK           shift and go to state 123
    CONTINUE        shift and go to state 124
    FALLTHROUGH     shift and go to state 125
    GOTO            shift and go to state 126
    LBRACE          shift and go to state 47
    IF              shift and go to state 127
    FOR             shift and go to state 129
    DEFER           shift and go to state 130
    SCANINT         shift and go to state 135
    SCANSTR         shift and go to state 137
    CONST           shift and go to state 35
    TYPE            shift and go to state 36
    VAR             shift and go to state 37
    ID              shift and go to state 138
    SWITCH          shift and go to state 143
    PRINTINT        shift and go to state 144
    PRINTSTR        shift and go to state 145
    PRINTFLOAT      shift and go to state 146
    READFILE        shift and go to state 147
    WRITEFILE       shift and go to state 149
    CLOSEFILE       shift and go to state 150
    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    StatementList                  shift and go to state 97
    Statement                      shift and go to state 98
    empty                          shift and go to state 99
    Declaration                    shift and go to state 100
    LabeledStmt                    shift and go to state 101
    SimpleStmt                     shift and go to state 102
    ReturnStmt                     shift and go to state 103
    BreakStmt                      shift and go to state 104
    ContinueStmt                   shift and go to state 105
    FallthroughStmt                shift and go to state 106
    GotoStmt                       shift and go to state 107
    Block                          shift and go to state 108
    IfStmt                         shift and go to state 109
    SwitchStmt                     shift and go to state 110
    ForStmt                        shift and go to state 111
    DeferStmt                      shift and go to state 112
    PrintStmt                      shift and go to state 113
    ScanIntStmt                    shift and go to state 114
    ScanStrStmt                    shift and go to state 115
    ConstDecl                      shift and go to state 31
    TypeDecl                       shift and go to state 32
    VarDecl                        shift and go to state 33
    Label                          shift and go to state 116
    Assignment                     shift and go to state 117
    ShortVarDecl                   shift and go to state 118
    IncDecStmt                     shift and go to state 119
    ExpressionStmt                 shift and go to state 120
    ExpressionList                 shift and go to state 122
    ExprSwitchStmt                 shift and go to state 128
    PrimaryExpr                    shift and go to state 131
    PrintIntStmt                   shift and go to state 132
    PrintStrStmt                   shift and go to state 133
    PrintFloatStmt                 shift and go to state 134
    Expression                     shift and go to state 136
    ReadFileExp                    shift and go to state 139
    WriteFileExp                   shift and go to state 140
    CloseFileExp                   shift and go to state 141
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 58

    (43) ConstSpec -> IdentifierList Types .
    (44) ConstSpec -> IdentifierList Types . EQUALS ExpressionList

    newline         reduce using rule 43 (ConstSpec -> IdentifierList Types .)
    SEMI            reduce using rule 43 (ConstSpec -> IdentifierList Types .)
    $end            reduce using rule 43 (ConstSpec -> IdentifierList Types .)
    RBRACE          reduce using rule 43 (ConstSpec -> IdentifierList Types .)
    CASE            reduce using rule 43 (ConstSpec -> IdentifierList Types .)
    DEFAULT         reduce using rule 43 (ConstSpec -> IdentifierList Types .)
    EQUALS          shift and go to state 178


state 59

    (250) IdentifierList -> IdentifierList COMMA . RepeatNewline ID
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    ID              reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 179
    empty                          shift and go to state 5

state 60

    (243) OperandName -> ID .

    EQUALS          reduce using rule 243 (OperandName -> ID .)
    newline         reduce using rule 243 (OperandName -> ID .)
    SEMI            reduce using rule 243 (OperandName -> ID .)
    $end            reduce using rule 243 (OperandName -> ID .)
    RBRACE          reduce using rule 243 (OperandName -> ID .)
    CASE            reduce using rule 243 (OperandName -> ID .)
    DEFAULT         reduce using rule 243 (OperandName -> ID .)
    LBRACE          reduce using rule 243 (OperandName -> ID .)
    COMMA           reduce using rule 243 (OperandName -> ID .)
    RPAREN          reduce using rule 243 (OperandName -> ID .)


state 61

    (219) Types -> Mytypes .

    EQUALS          reduce using rule 219 (Types -> Mytypes .)
    newline         reduce using rule 219 (Types -> Mytypes .)
    SEMI            reduce using rule 219 (Types -> Mytypes .)
    $end            reduce using rule 219 (Types -> Mytypes .)
    RBRACE          reduce using rule 219 (Types -> Mytypes .)
    CASE            reduce using rule 219 (Types -> Mytypes .)
    DEFAULT         reduce using rule 219 (Types -> Mytypes .)
    LBRACE          reduce using rule 219 (Types -> Mytypes .)
    COMMA           reduce using rule 219 (Types -> Mytypes .)
    RPAREN          reduce using rule 219 (Types -> Mytypes .)


state 62

    (220) Types -> TypeLit .

    EQUALS          reduce using rule 220 (Types -> TypeLit .)
    newline         reduce using rule 220 (Types -> TypeLit .)
    SEMI            reduce using rule 220 (Types -> TypeLit .)
    $end            reduce using rule 220 (Types -> TypeLit .)
    RBRACE          reduce using rule 220 (Types -> TypeLit .)
    CASE            reduce using rule 220 (Types -> TypeLit .)
    DEFAULT         reduce using rule 220 (Types -> TypeLit .)
    LBRACE          reduce using rule 220 (Types -> TypeLit .)
    COMMA           reduce using rule 220 (Types -> TypeLit .)
    RPAREN          reduce using rule 220 (Types -> TypeLit .)


state 63

    (221) Types -> OperandName .

    EQUALS          reduce using rule 221 (Types -> OperandName .)
    newline         reduce using rule 221 (Types -> OperandName .)
    SEMI            reduce using rule 221 (Types -> OperandName .)
    $end            reduce using rule 221 (Types -> OperandName .)
    RBRACE          reduce using rule 221 (Types -> OperandName .)
    CASE            reduce using rule 221 (Types -> OperandName .)
    DEFAULT         reduce using rule 221 (Types -> OperandName .)
    LBRACE          reduce using rule 221 (Types -> OperandName .)
    COMMA           reduce using rule 221 (Types -> OperandName .)
    RPAREN          reduce using rule 221 (Types -> OperandName .)


state 64

    (202) Mytypes -> BOOL .

    EQUALS          reduce using rule 202 (Mytypes -> BOOL .)
    newline         reduce using rule 202 (Mytypes -> BOOL .)
    SEMI            reduce using rule 202 (Mytypes -> BOOL .)
    $end            reduce using rule 202 (Mytypes -> BOOL .)
    RBRACE          reduce using rule 202 (Mytypes -> BOOL .)
    CASE            reduce using rule 202 (Mytypes -> BOOL .)
    DEFAULT         reduce using rule 202 (Mytypes -> BOOL .)
    LBRACE          reduce using rule 202 (Mytypes -> BOOL .)
    COMMA           reduce using rule 202 (Mytypes -> BOOL .)
    RPAREN          reduce using rule 202 (Mytypes -> BOOL .)


state 65

    (203) Mytypes -> BYTE .

    EQUALS          reduce using rule 203 (Mytypes -> BYTE .)
    newline         reduce using rule 203 (Mytypes -> BYTE .)
    SEMI            reduce using rule 203 (Mytypes -> BYTE .)
    $end            reduce using rule 203 (Mytypes -> BYTE .)
    RBRACE          reduce using rule 203 (Mytypes -> BYTE .)
    CASE            reduce using rule 203 (Mytypes -> BYTE .)
    DEFAULT         reduce using rule 203 (Mytypes -> BYTE .)
    LBRACE          reduce using rule 203 (Mytypes -> BYTE .)
    COMMA           reduce using rule 203 (Mytypes -> BYTE .)
    RPAREN          reduce using rule 203 (Mytypes -> BYTE .)


state 66

    (204) Mytypes -> INT .

    EQUALS          reduce using rule 204 (Mytypes -> INT .)
    newline         reduce using rule 204 (Mytypes -> INT .)
    SEMI            reduce using rule 204 (Mytypes -> INT .)
    $end            reduce using rule 204 (Mytypes -> INT .)
    RBRACE          reduce using rule 204 (Mytypes -> INT .)
    CASE            reduce using rule 204 (Mytypes -> INT .)
    DEFAULT         reduce using rule 204 (Mytypes -> INT .)
    LBRACE          reduce using rule 204 (Mytypes -> INT .)
    COMMA           reduce using rule 204 (Mytypes -> INT .)
    RPAREN          reduce using rule 204 (Mytypes -> INT .)


state 67

    (205) Mytypes -> UINT8 .

    EQUALS          reduce using rule 205 (Mytypes -> UINT8 .)
    newline         reduce using rule 205 (Mytypes -> UINT8 .)
    SEMI            reduce using rule 205 (Mytypes -> UINT8 .)
    $end            reduce using rule 205 (Mytypes -> UINT8 .)
    RBRACE          reduce using rule 205 (Mytypes -> UINT8 .)
    CASE            reduce using rule 205 (Mytypes -> UINT8 .)
    DEFAULT         reduce using rule 205 (Mytypes -> UINT8 .)
    LBRACE          reduce using rule 205 (Mytypes -> UINT8 .)
    COMMA           reduce using rule 205 (Mytypes -> UINT8 .)
    RPAREN          reduce using rule 205 (Mytypes -> UINT8 .)


state 68

    (206) Mytypes -> UINT16 .

    EQUALS          reduce using rule 206 (Mytypes -> UINT16 .)
    newline         reduce using rule 206 (Mytypes -> UINT16 .)
    SEMI            reduce using rule 206 (Mytypes -> UINT16 .)
    $end            reduce using rule 206 (Mytypes -> UINT16 .)
    RBRACE          reduce using rule 206 (Mytypes -> UINT16 .)
    CASE            reduce using rule 206 (Mytypes -> UINT16 .)
    DEFAULT         reduce using rule 206 (Mytypes -> UINT16 .)
    LBRACE          reduce using rule 206 (Mytypes -> UINT16 .)
    COMMA           reduce using rule 206 (Mytypes -> UINT16 .)
    RPAREN          reduce using rule 206 (Mytypes -> UINT16 .)


state 69

    (207) Mytypes -> UINT32 .

    EQUALS          reduce using rule 207 (Mytypes -> UINT32 .)
    newline         reduce using rule 207 (Mytypes -> UINT32 .)
    SEMI            reduce using rule 207 (Mytypes -> UINT32 .)
    $end            reduce using rule 207 (Mytypes -> UINT32 .)
    RBRACE          reduce using rule 207 (Mytypes -> UINT32 .)
    CASE            reduce using rule 207 (Mytypes -> UINT32 .)
    DEFAULT         reduce using rule 207 (Mytypes -> UINT32 .)
    LBRACE          reduce using rule 207 (Mytypes -> UINT32 .)
    COMMA           reduce using rule 207 (Mytypes -> UINT32 .)
    RPAREN          reduce using rule 207 (Mytypes -> UINT32 .)


state 70

    (208) Mytypes -> UINT64 .

    EQUALS          reduce using rule 208 (Mytypes -> UINT64 .)
    newline         reduce using rule 208 (Mytypes -> UINT64 .)
    SEMI            reduce using rule 208 (Mytypes -> UINT64 .)
    $end            reduce using rule 208 (Mytypes -> UINT64 .)
    RBRACE          reduce using rule 208 (Mytypes -> UINT64 .)
    CASE            reduce using rule 208 (Mytypes -> UINT64 .)
    DEFAULT         reduce using rule 208 (Mytypes -> UINT64 .)
    LBRACE          reduce using rule 208 (Mytypes -> UINT64 .)
    COMMA           reduce using rule 208 (Mytypes -> UINT64 .)
    RPAREN          reduce using rule 208 (Mytypes -> UINT64 .)


state 71

    (209) Mytypes -> INT8 .

    EQUALS          reduce using rule 209 (Mytypes -> INT8 .)
    newline         reduce using rule 209 (Mytypes -> INT8 .)
    SEMI            reduce using rule 209 (Mytypes -> INT8 .)
    $end            reduce using rule 209 (Mytypes -> INT8 .)
    RBRACE          reduce using rule 209 (Mytypes -> INT8 .)
    CASE            reduce using rule 209 (Mytypes -> INT8 .)
    DEFAULT         reduce using rule 209 (Mytypes -> INT8 .)
    LBRACE          reduce using rule 209 (Mytypes -> INT8 .)
    COMMA           reduce using rule 209 (Mytypes -> INT8 .)
    RPAREN          reduce using rule 209 (Mytypes -> INT8 .)


state 72

    (210) Mytypes -> INT16 .

    EQUALS          reduce using rule 210 (Mytypes -> INT16 .)
    newline         reduce using rule 210 (Mytypes -> INT16 .)
    SEMI            reduce using rule 210 (Mytypes -> INT16 .)
    $end            reduce using rule 210 (Mytypes -> INT16 .)
    RBRACE          reduce using rule 210 (Mytypes -> INT16 .)
    CASE            reduce using rule 210 (Mytypes -> INT16 .)
    DEFAULT         reduce using rule 210 (Mytypes -> INT16 .)
    LBRACE          reduce using rule 210 (Mytypes -> INT16 .)
    COMMA           reduce using rule 210 (Mytypes -> INT16 .)
    RPAREN          reduce using rule 210 (Mytypes -> INT16 .)


state 73

    (211) Mytypes -> INT32 .

    EQUALS          reduce using rule 211 (Mytypes -> INT32 .)
    newline         reduce using rule 211 (Mytypes -> INT32 .)
    SEMI            reduce using rule 211 (Mytypes -> INT32 .)
    $end            reduce using rule 211 (Mytypes -> INT32 .)
    RBRACE          reduce using rule 211 (Mytypes -> INT32 .)
    CASE            reduce using rule 211 (Mytypes -> INT32 .)
    DEFAULT         reduce using rule 211 (Mytypes -> INT32 .)
    LBRACE          reduce using rule 211 (Mytypes -> INT32 .)
    COMMA           reduce using rule 211 (Mytypes -> INT32 .)
    RPAREN          reduce using rule 211 (Mytypes -> INT32 .)


state 74

    (212) Mytypes -> INT64 .

    EQUALS          reduce using rule 212 (Mytypes -> INT64 .)
    newline         reduce using rule 212 (Mytypes -> INT64 .)
    SEMI            reduce using rule 212 (Mytypes -> INT64 .)
    $end            reduce using rule 212 (Mytypes -> INT64 .)
    RBRACE          reduce using rule 212 (Mytypes -> INT64 .)
    CASE            reduce using rule 212 (Mytypes -> INT64 .)
    DEFAULT         reduce using rule 212 (Mytypes -> INT64 .)
    LBRACE          reduce using rule 212 (Mytypes -> INT64 .)
    COMMA           reduce using rule 212 (Mytypes -> INT64 .)
    RPAREN          reduce using rule 212 (Mytypes -> INT64 .)


state 75

    (213) Mytypes -> UINT .

    EQUALS          reduce using rule 213 (Mytypes -> UINT .)
    newline         reduce using rule 213 (Mytypes -> UINT .)
    SEMI            reduce using rule 213 (Mytypes -> UINT .)
    $end            reduce using rule 213 (Mytypes -> UINT .)
    RBRACE          reduce using rule 213 (Mytypes -> UINT .)
    CASE            reduce using rule 213 (Mytypes -> UINT .)
    DEFAULT         reduce using rule 213 (Mytypes -> UINT .)
    LBRACE          reduce using rule 213 (Mytypes -> UINT .)
    COMMA           reduce using rule 213 (Mytypes -> UINT .)
    RPAREN          reduce using rule 213 (Mytypes -> UINT .)


state 76

    (214) Mytypes -> FLOAT32 .

    EQUALS          reduce using rule 214 (Mytypes -> FLOAT32 .)
    newline         reduce using rule 214 (Mytypes -> FLOAT32 .)
    SEMI            reduce using rule 214 (Mytypes -> FLOAT32 .)
    $end            reduce using rule 214 (Mytypes -> FLOAT32 .)
    RBRACE          reduce using rule 214 (Mytypes -> FLOAT32 .)
    CASE            reduce using rule 214 (Mytypes -> FLOAT32 .)
    DEFAULT         reduce using rule 214 (Mytypes -> FLOAT32 .)
    LBRACE          reduce using rule 214 (Mytypes -> FLOAT32 .)
    COMMA           reduce using rule 214 (Mytypes -> FLOAT32 .)
    RPAREN          reduce using rule 214 (Mytypes -> FLOAT32 .)


state 77

    (215) Mytypes -> FLOAT64 .

    EQUALS          reduce using rule 215 (Mytypes -> FLOAT64 .)
    newline         reduce using rule 215 (Mytypes -> FLOAT64 .)
    SEMI            reduce using rule 215 (Mytypes -> FLOAT64 .)
    $end            reduce using rule 215 (Mytypes -> FLOAT64 .)
    RBRACE          reduce using rule 215 (Mytypes -> FLOAT64 .)
    CASE            reduce using rule 215 (Mytypes -> FLOAT64 .)
    DEFAULT         reduce using rule 215 (Mytypes -> FLOAT64 .)
    LBRACE          reduce using rule 215 (Mytypes -> FLOAT64 .)
    COMMA           reduce using rule 215 (Mytypes -> FLOAT64 .)
    RPAREN          reduce using rule 215 (Mytypes -> FLOAT64 .)


state 78

    (216) Mytypes -> UINTPTR .

    EQUALS          reduce using rule 216 (Mytypes -> UINTPTR .)
    newline         reduce using rule 216 (Mytypes -> UINTPTR .)
    SEMI            reduce using rule 216 (Mytypes -> UINTPTR .)
    $end            reduce using rule 216 (Mytypes -> UINTPTR .)
    RBRACE          reduce using rule 216 (Mytypes -> UINTPTR .)
    CASE            reduce using rule 216 (Mytypes -> UINTPTR .)
    DEFAULT         reduce using rule 216 (Mytypes -> UINTPTR .)
    LBRACE          reduce using rule 216 (Mytypes -> UINTPTR .)
    COMMA           reduce using rule 216 (Mytypes -> UINTPTR .)
    RPAREN          reduce using rule 216 (Mytypes -> UINTPTR .)


state 79

    (217) Mytypes -> STRING .

    EQUALS          reduce using rule 217 (Mytypes -> STRING .)
    newline         reduce using rule 217 (Mytypes -> STRING .)
    SEMI            reduce using rule 217 (Mytypes -> STRING .)
    $end            reduce using rule 217 (Mytypes -> STRING .)
    RBRACE          reduce using rule 217 (Mytypes -> STRING .)
    CASE            reduce using rule 217 (Mytypes -> STRING .)
    DEFAULT         reduce using rule 217 (Mytypes -> STRING .)
    LBRACE          reduce using rule 217 (Mytypes -> STRING .)
    COMMA           reduce using rule 217 (Mytypes -> STRING .)
    RPAREN          reduce using rule 217 (Mytypes -> STRING .)


state 80

    (218) Mytypes -> ERROR .

    EQUALS          reduce using rule 218 (Mytypes -> ERROR .)
    newline         reduce using rule 218 (Mytypes -> ERROR .)
    SEMI            reduce using rule 218 (Mytypes -> ERROR .)
    $end            reduce using rule 218 (Mytypes -> ERROR .)
    RBRACE          reduce using rule 218 (Mytypes -> ERROR .)
    CASE            reduce using rule 218 (Mytypes -> ERROR .)
    DEFAULT         reduce using rule 218 (Mytypes -> ERROR .)
    LBRACE          reduce using rule 218 (Mytypes -> ERROR .)
    COMMA           reduce using rule 218 (Mytypes -> ERROR .)
    RPAREN          reduce using rule 218 (Mytypes -> ERROR .)


state 81

    (222) TypeLit -> StructType .

    EQUALS          reduce using rule 222 (TypeLit -> StructType .)
    newline         reduce using rule 222 (TypeLit -> StructType .)
    SEMI            reduce using rule 222 (TypeLit -> StructType .)
    $end            reduce using rule 222 (TypeLit -> StructType .)
    RBRACE          reduce using rule 222 (TypeLit -> StructType .)
    CASE            reduce using rule 222 (TypeLit -> StructType .)
    DEFAULT         reduce using rule 222 (TypeLit -> StructType .)
    LBRACE          reduce using rule 222 (TypeLit -> StructType .)
    COMMA           reduce using rule 222 (TypeLit -> StructType .)
    RPAREN          reduce using rule 222 (TypeLit -> StructType .)


state 82

    (223) TypeLit -> ArrayType .

    EQUALS          reduce using rule 223 (TypeLit -> ArrayType .)
    newline         reduce using rule 223 (TypeLit -> ArrayType .)
    SEMI            reduce using rule 223 (TypeLit -> ArrayType .)
    $end            reduce using rule 223 (TypeLit -> ArrayType .)
    RBRACE          reduce using rule 223 (TypeLit -> ArrayType .)
    CASE            reduce using rule 223 (TypeLit -> ArrayType .)
    DEFAULT         reduce using rule 223 (TypeLit -> ArrayType .)
    LBRACE          reduce using rule 223 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 223 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 223 (TypeLit -> ArrayType .)


state 83

    (224) TypeLit -> PointerType .

    EQUALS          reduce using rule 224 (TypeLit -> PointerType .)
    newline         reduce using rule 224 (TypeLit -> PointerType .)
    SEMI            reduce using rule 224 (TypeLit -> PointerType .)
    $end            reduce using rule 224 (TypeLit -> PointerType .)
    RBRACE          reduce using rule 224 (TypeLit -> PointerType .)
    CASE            reduce using rule 224 (TypeLit -> PointerType .)
    DEFAULT         reduce using rule 224 (TypeLit -> PointerType .)
    LBRACE          reduce using rule 224 (TypeLit -> PointerType .)
    COMMA           reduce using rule 224 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 224 (TypeLit -> PointerType .)


state 84

    (225) TypeLit -> SliceType .

    EQUALS          reduce using rule 225 (TypeLit -> SliceType .)
    newline         reduce using rule 225 (TypeLit -> SliceType .)
    SEMI            reduce using rule 225 (TypeLit -> SliceType .)
    $end            reduce using rule 225 (TypeLit -> SliceType .)
    RBRACE          reduce using rule 225 (TypeLit -> SliceType .)
    CASE            reduce using rule 225 (TypeLit -> SliceType .)
    DEFAULT         reduce using rule 225 (TypeLit -> SliceType .)
    LBRACE          reduce using rule 225 (TypeLit -> SliceType .)
    COMMA           reduce using rule 225 (TypeLit -> SliceType .)
    RPAREN          reduce using rule 225 (TypeLit -> SliceType .)


state 85

    (228) StructType -> STRUCT . M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (229) M -> . empty
    (258) empty -> .

    newline         reduce using rule 258 (empty -> .)
    LBRACE          reduce using rule 258 (empty -> .)

    M                              shift and go to state 180
    empty                          shift and go to state 181

state 86

    (234) ArrayType -> LBRACKET . RepeatNewline ArrayLength RBRACKET Types
    (226) SliceType -> LBRACKET . RBRACKET Types
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    RBRACKET        shift and go to state 183
    newline         shift and go to state 4
    INTEGER         reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 182
    empty                          shift and go to state 5

state 87

    (227) PointerType -> TIMES . Types
    (219) Types -> . Mytypes
    (220) Types -> . TypeLit
    (221) Types -> . OperandName
    (202) Mytypes -> . BOOL
    (203) Mytypes -> . BYTE
    (204) Mytypes -> . INT
    (205) Mytypes -> . UINT8
    (206) Mytypes -> . UINT16
    (207) Mytypes -> . UINT32
    (208) Mytypes -> . UINT64
    (209) Mytypes -> . INT8
    (210) Mytypes -> . INT16
    (211) Mytypes -> . INT32
    (212) Mytypes -> . INT64
    (213) Mytypes -> . UINT
    (214) Mytypes -> . FLOAT32
    (215) Mytypes -> . FLOAT64
    (216) Mytypes -> . UINTPTR
    (217) Mytypes -> . STRING
    (218) Mytypes -> . ERROR
    (222) TypeLit -> . StructType
    (223) TypeLit -> . ArrayType
    (224) TypeLit -> . PointerType
    (225) TypeLit -> . SliceType
    (243) OperandName -> . ID
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (227) PointerType -> . TIMES Types
    (226) SliceType -> . LBRACKET RBRACKET Types

    BOOL            shift and go to state 64
    BYTE            shift and go to state 65
    INT             shift and go to state 66
    UINT8           shift and go to state 67
    UINT16          shift and go to state 68
    UINT32          shift and go to state 69
    UINT64          shift and go to state 70
    INT8            shift and go to state 71
    INT16           shift and go to state 72
    INT32           shift and go to state 73
    INT64           shift and go to state 74
    UINT            shift and go to state 75
    FLOAT32         shift and go to state 76
    FLOAT64         shift and go to state 77
    UINTPTR         shift and go to state 78
    STRING          shift and go to state 79
    ERROR           shift and go to state 80
    ID              shift and go to state 60
    STRUCT          shift and go to state 85
    LBRACKET        shift and go to state 86
    TIMES           shift and go to state 87

    Types                          shift and go to state 184
    Mytypes                        shift and go to state 61
    TypeLit                        shift and go to state 62
    OperandName                    shift and go to state 63
    StructType                     shift and go to state 81
    ArrayType                      shift and go to state 82
    PointerType                    shift and go to state 83
    SliceType                      shift and go to state 84

state 88

    (45) TypeDecl -> TYPE RepeatNewline TypeSpec .

    newline         reduce using rule 45 (TypeDecl -> TYPE RepeatNewline TypeSpec .)
    SEMI            reduce using rule 45 (TypeDecl -> TYPE RepeatNewline TypeSpec .)
    $end            reduce using rule 45 (TypeDecl -> TYPE RepeatNewline TypeSpec .)
    RBRACE          reduce using rule 45 (TypeDecl -> TYPE RepeatNewline TypeSpec .)
    CASE            reduce using rule 45 (TypeDecl -> TYPE RepeatNewline TypeSpec .)
    DEFAULT         reduce using rule 45 (TypeDecl -> TYPE RepeatNewline TypeSpec .)


state 89

    (46) TypeSpec -> TypeDef .

    newline         reduce using rule 46 (TypeSpec -> TypeDef .)
    SEMI            reduce using rule 46 (TypeSpec -> TypeDef .)
    $end            reduce using rule 46 (TypeSpec -> TypeDef .)
    RBRACE          reduce using rule 46 (TypeSpec -> TypeDef .)
    CASE            reduce using rule 46 (TypeSpec -> TypeDef .)
    DEFAULT         reduce using rule 46 (TypeSpec -> TypeDef .)


state 90

    (47) TypeDef -> ID . K Types
    (48) K -> . empty
    (258) empty -> .

    BOOL            reduce using rule 258 (empty -> .)
    BYTE            reduce using rule 258 (empty -> .)
    INT             reduce using rule 258 (empty -> .)
    UINT8           reduce using rule 258 (empty -> .)
    UINT16          reduce using rule 258 (empty -> .)
    UINT32          reduce using rule 258 (empty -> .)
    UINT64          reduce using rule 258 (empty -> .)
    INT8            reduce using rule 258 (empty -> .)
    INT16           reduce using rule 258 (empty -> .)
    INT32           reduce using rule 258 (empty -> .)
    INT64           reduce using rule 258 (empty -> .)
    UINT            reduce using rule 258 (empty -> .)
    FLOAT32         reduce using rule 258 (empty -> .)
    FLOAT64         reduce using rule 258 (empty -> .)
    UINTPTR         reduce using rule 258 (empty -> .)
    STRING          reduce using rule 258 (empty -> .)
    ERROR           reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)

    K                              shift and go to state 185
    empty                          shift and go to state 186

state 91

    (49) VarDecl -> VAR RepeatNewline VarSpec .

    newline         reduce using rule 49 (VarDecl -> VAR RepeatNewline VarSpec .)
    SEMI            reduce using rule 49 (VarDecl -> VAR RepeatNewline VarSpec .)
    $end            reduce using rule 49 (VarDecl -> VAR RepeatNewline VarSpec .)
    RBRACE          reduce using rule 49 (VarDecl -> VAR RepeatNewline VarSpec .)
    CASE            reduce using rule 49 (VarDecl -> VAR RepeatNewline VarSpec .)
    DEFAULT         reduce using rule 49 (VarDecl -> VAR RepeatNewline VarSpec .)


state 92

    (50) VarSpec -> IdentifierList . Types
    (51) VarSpec -> IdentifierList . Types EQUALS RepeatNewline ExpressionList
    (250) IdentifierList -> IdentifierList . COMMA RepeatNewline ID
    (219) Types -> . Mytypes
    (220) Types -> . TypeLit
    (221) Types -> . OperandName
    (202) Mytypes -> . BOOL
    (203) Mytypes -> . BYTE
    (204) Mytypes -> . INT
    (205) Mytypes -> . UINT8
    (206) Mytypes -> . UINT16
    (207) Mytypes -> . UINT32
    (208) Mytypes -> . UINT64
    (209) Mytypes -> . INT8
    (210) Mytypes -> . INT16
    (211) Mytypes -> . INT32
    (212) Mytypes -> . INT64
    (213) Mytypes -> . UINT
    (214) Mytypes -> . FLOAT32
    (215) Mytypes -> . FLOAT64
    (216) Mytypes -> . UINTPTR
    (217) Mytypes -> . STRING
    (218) Mytypes -> . ERROR
    (222) TypeLit -> . StructType
    (223) TypeLit -> . ArrayType
    (224) TypeLit -> . PointerType
    (225) TypeLit -> . SliceType
    (243) OperandName -> . ID
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (227) PointerType -> . TIMES Types
    (226) SliceType -> . LBRACKET RBRACKET Types

    COMMA           shift and go to state 59
    BOOL            shift and go to state 64
    BYTE            shift and go to state 65
    INT             shift and go to state 66
    UINT8           shift and go to state 67
    UINT16          shift and go to state 68
    UINT32          shift and go to state 69
    UINT64          shift and go to state 70
    INT8            shift and go to state 71
    INT16           shift and go to state 72
    INT32           shift and go to state 73
    INT64           shift and go to state 74
    UINT            shift and go to state 75
    FLOAT32         shift and go to state 76
    FLOAT64         shift and go to state 77
    UINTPTR         shift and go to state 78
    STRING          shift and go to state 79
    ERROR           shift and go to state 80
    ID              shift and go to state 60
    STRUCT          shift and go to state 85
    LBRACKET        shift and go to state 86
    TIMES           shift and go to state 87

    Types                          shift and go to state 187
    Mytypes                        shift and go to state 61
    TypeLit                        shift and go to state 62
    OperandName                    shift and go to state 63
    StructType                     shift and go to state 81
    ArrayType                      shift and go to state 82
    PointerType                    shift and go to state 83
    SliceType                      shift and go to state 84

state 93

    (54) FunctionMarker -> FUNC RepeatNewline FunctionName . Signature
    (56) Signature -> . Parameters
    (57) Signature -> . Parameters Result
    (58) Parameters -> . LPAREN RepeatNewline RPAREN
    (59) Parameters -> . LPAREN RepeatNewline ParameterList RPAREN

    LPAREN          shift and go to state 190

    Signature                      shift and go to state 188
    Parameters                     shift and go to state 189

state 94

    (55) FunctionName -> ID .

    LPAREN          reduce using rule 55 (FunctionName -> ID .)


state 95

    (9) ImportStmt -> IMPORT LPAREN StatementEnd ImportList RPAREN .

    newline         reduce using rule 9 (ImportStmt -> IMPORT LPAREN StatementEnd ImportList RPAREN .)
    SEMI            reduce using rule 9 (ImportStmt -> IMPORT LPAREN StatementEnd ImportList RPAREN .)


state 96

    (10) ImportList -> Import StatementEnd . ImportList
    (11) ImportList -> Import StatementEnd .
    (10) ImportList -> . Import StatementEnd ImportList
    (11) ImportList -> . Import StatementEnd
    (12) ImportList -> . Import
    (13) Import -> . ID STRINGVAL
    (14) Import -> . STRINGVAL

    RPAREN          reduce using rule 11 (ImportList -> Import StatementEnd .)
    ID              shift and go to state 23
    STRINGVAL       shift and go to state 24

    Import                         shift and go to state 55
    ImportList                     shift and go to state 191

state 97

    (105) Block -> LBRACE RepeatNewline StatementList . RBRACE

    RBRACE          shift and go to state 192


state 98

    (20) StatementList -> Statement . StatementEnd StatementList
    (21) StatementList -> Statement .
    (260) StatementEnd -> . terminator StatementEnd
    (261) StatementEnd -> . newline StatementEnd
    (262) StatementEnd -> . terminator
    (263) StatementEnd -> . newline
    (259) terminator -> . SEMI

    RBRACE          reduce using rule 21 (StatementList -> Statement .)
    CASE            reduce using rule 21 (StatementList -> Statement .)
    DEFAULT         reduce using rule 21 (StatementList -> Statement .)
    newline         shift and go to state 19
    SEMI            shift and go to state 20

    StatementEnd                   shift and go to state 193
    terminator                     shift and go to state 18

state 99

    (22) StatementList -> empty .

    RBRACE          reduce using rule 22 (StatementList -> empty .)
    CASE            reduce using rule 22 (StatementList -> empty .)
    DEFAULT         reduce using rule 22 (StatementList -> empty .)


state 100

    (23) Statement -> Declaration .

    newline         reduce using rule 23 (Statement -> Declaration .)
    SEMI            reduce using rule 23 (Statement -> Declaration .)
    RBRACE          reduce using rule 23 (Statement -> Declaration .)
    CASE            reduce using rule 23 (Statement -> Declaration .)
    DEFAULT         reduce using rule 23 (Statement -> Declaration .)


state 101

    (24) Statement -> LabeledStmt .

    newline         reduce using rule 24 (Statement -> LabeledStmt .)
    SEMI            reduce using rule 24 (Statement -> LabeledStmt .)
    RBRACE          reduce using rule 24 (Statement -> LabeledStmt .)
    CASE            reduce using rule 24 (Statement -> LabeledStmt .)
    DEFAULT         reduce using rule 24 (Statement -> LabeledStmt .)


state 102

    (25) Statement -> SimpleStmt .

    newline         reduce using rule 25 (Statement -> SimpleStmt .)
    SEMI            reduce using rule 25 (Statement -> SimpleStmt .)
    RBRACE          reduce using rule 25 (Statement -> SimpleStmt .)
    CASE            reduce using rule 25 (Statement -> SimpleStmt .)
    DEFAULT         reduce using rule 25 (Statement -> SimpleStmt .)


state 103

    (26) Statement -> ReturnStmt .

    newline         reduce using rule 26 (Statement -> ReturnStmt .)
    SEMI            reduce using rule 26 (Statement -> ReturnStmt .)
    RBRACE          reduce using rule 26 (Statement -> ReturnStmt .)
    CASE            reduce using rule 26 (Statement -> ReturnStmt .)
    DEFAULT         reduce using rule 26 (Statement -> ReturnStmt .)


state 104

    (27) Statement -> BreakStmt .

    newline         reduce using rule 27 (Statement -> BreakStmt .)
    SEMI            reduce using rule 27 (Statement -> BreakStmt .)
    RBRACE          reduce using rule 27 (Statement -> BreakStmt .)
    CASE            reduce using rule 27 (Statement -> BreakStmt .)
    DEFAULT         reduce using rule 27 (Statement -> BreakStmt .)


state 105

    (28) Statement -> ContinueStmt .

    newline         reduce using rule 28 (Statement -> ContinueStmt .)
    SEMI            reduce using rule 28 (Statement -> ContinueStmt .)
    RBRACE          reduce using rule 28 (Statement -> ContinueStmt .)
    CASE            reduce using rule 28 (Statement -> ContinueStmt .)
    DEFAULT         reduce using rule 28 (Statement -> ContinueStmt .)


state 106

    (29) Statement -> FallthroughStmt .

    newline         reduce using rule 29 (Statement -> FallthroughStmt .)
    SEMI            reduce using rule 29 (Statement -> FallthroughStmt .)
    RBRACE          reduce using rule 29 (Statement -> FallthroughStmt .)
    CASE            reduce using rule 29 (Statement -> FallthroughStmt .)
    DEFAULT         reduce using rule 29 (Statement -> FallthroughStmt .)


state 107

    (30) Statement -> GotoStmt .

    newline         reduce using rule 30 (Statement -> GotoStmt .)
    SEMI            reduce using rule 30 (Statement -> GotoStmt .)
    RBRACE          reduce using rule 30 (Statement -> GotoStmt .)
    CASE            reduce using rule 30 (Statement -> GotoStmt .)
    DEFAULT         reduce using rule 30 (Statement -> GotoStmt .)


state 108

    (31) Statement -> Block .

    newline         reduce using rule 31 (Statement -> Block .)
    SEMI            reduce using rule 31 (Statement -> Block .)
    RBRACE          reduce using rule 31 (Statement -> Block .)
    CASE            reduce using rule 31 (Statement -> Block .)
    DEFAULT         reduce using rule 31 (Statement -> Block .)


state 109

    (32) Statement -> IfStmt .

    newline         reduce using rule 32 (Statement -> IfStmt .)
    SEMI            reduce using rule 32 (Statement -> IfStmt .)
    RBRACE          reduce using rule 32 (Statement -> IfStmt .)
    CASE            reduce using rule 32 (Statement -> IfStmt .)
    DEFAULT         reduce using rule 32 (Statement -> IfStmt .)


state 110

    (33) Statement -> SwitchStmt .

    newline         reduce using rule 33 (Statement -> SwitchStmt .)
    SEMI            reduce using rule 33 (Statement -> SwitchStmt .)
    RBRACE          reduce using rule 33 (Statement -> SwitchStmt .)
    CASE            reduce using rule 33 (Statement -> SwitchStmt .)
    DEFAULT         reduce using rule 33 (Statement -> SwitchStmt .)


state 111

    (34) Statement -> ForStmt .

    newline         reduce using rule 34 (Statement -> ForStmt .)
    SEMI            reduce using rule 34 (Statement -> ForStmt .)
    RBRACE          reduce using rule 34 (Statement -> ForStmt .)
    CASE            reduce using rule 34 (Statement -> ForStmt .)
    DEFAULT         reduce using rule 34 (Statement -> ForStmt .)


state 112

    (35) Statement -> DeferStmt .

    newline         reduce using rule 35 (Statement -> DeferStmt .)
    SEMI            reduce using rule 35 (Statement -> DeferStmt .)
    RBRACE          reduce using rule 35 (Statement -> DeferStmt .)
    CASE            reduce using rule 35 (Statement -> DeferStmt .)
    DEFAULT         reduce using rule 35 (Statement -> DeferStmt .)


state 113

    (36) Statement -> PrintStmt .

    newline         reduce using rule 36 (Statement -> PrintStmt .)
    SEMI            reduce using rule 36 (Statement -> PrintStmt .)
    RBRACE          reduce using rule 36 (Statement -> PrintStmt .)
    CASE            reduce using rule 36 (Statement -> PrintStmt .)
    DEFAULT         reduce using rule 36 (Statement -> PrintStmt .)


state 114

    (37) Statement -> ScanIntStmt .

    newline         reduce using rule 37 (Statement -> ScanIntStmt .)
    SEMI            reduce using rule 37 (Statement -> ScanIntStmt .)
    RBRACE          reduce using rule 37 (Statement -> ScanIntStmt .)
    CASE            reduce using rule 37 (Statement -> ScanIntStmt .)
    DEFAULT         reduce using rule 37 (Statement -> ScanIntStmt .)


state 115

    (38) Statement -> ScanStrStmt .

    newline         reduce using rule 38 (Statement -> ScanStrStmt .)
    SEMI            reduce using rule 38 (Statement -> ScanStrStmt .)
    RBRACE          reduce using rule 38 (Statement -> ScanStrStmt .)
    CASE            reduce using rule 38 (Statement -> ScanStrStmt .)
    DEFAULT         reduce using rule 38 (Statement -> ScanStrStmt .)


state 116

    (67) LabeledStmt -> Label . COLON RepeatNewline Statement

    COLON           shift and go to state 194


state 117

    (69) SimpleStmt -> Assignment .

    newline         reduce using rule 69 (SimpleStmt -> Assignment .)
    SEMI            reduce using rule 69 (SimpleStmt -> Assignment .)
    RBRACE          reduce using rule 69 (SimpleStmt -> Assignment .)
    CASE            reduce using rule 69 (SimpleStmt -> Assignment .)
    DEFAULT         reduce using rule 69 (SimpleStmt -> Assignment .)
    LBRACE          reduce using rule 69 (SimpleStmt -> Assignment .)


state 118

    (70) SimpleStmt -> ShortVarDecl .

    newline         reduce using rule 70 (SimpleStmt -> ShortVarDecl .)
    SEMI            reduce using rule 70 (SimpleStmt -> ShortVarDecl .)
    RBRACE          reduce using rule 70 (SimpleStmt -> ShortVarDecl .)
    CASE            reduce using rule 70 (SimpleStmt -> ShortVarDecl .)
    DEFAULT         reduce using rule 70 (SimpleStmt -> ShortVarDecl .)
    LBRACE          reduce using rule 70 (SimpleStmt -> ShortVarDecl .)


state 119

    (71) SimpleStmt -> IncDecStmt .

    newline         reduce using rule 71 (SimpleStmt -> IncDecStmt .)
    SEMI            reduce using rule 71 (SimpleStmt -> IncDecStmt .)
    RBRACE          reduce using rule 71 (SimpleStmt -> IncDecStmt .)
    CASE            reduce using rule 71 (SimpleStmt -> IncDecStmt .)
    DEFAULT         reduce using rule 71 (SimpleStmt -> IncDecStmt .)
    LBRACE          reduce using rule 71 (SimpleStmt -> IncDecStmt .)


state 120

    (72) SimpleStmt -> ExpressionStmt .

    newline         reduce using rule 72 (SimpleStmt -> ExpressionStmt .)
    SEMI            reduce using rule 72 (SimpleStmt -> ExpressionStmt .)
    RBRACE          reduce using rule 72 (SimpleStmt -> ExpressionStmt .)
    CASE            reduce using rule 72 (SimpleStmt -> ExpressionStmt .)
    DEFAULT         reduce using rule 72 (SimpleStmt -> ExpressionStmt .)
    LBRACE          reduce using rule 72 (SimpleStmt -> ExpressionStmt .)


state 121

    (97) ReturnStmt -> RETURN .
    (98) ReturnStmt -> RETURN . ExpressionList
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    newline         reduce using rule 97 (ReturnStmt -> RETURN .)
    SEMI            reduce using rule 97 (ReturnStmt -> RETURN .)
    RBRACE          reduce using rule 97 (ReturnStmt -> RETURN .)
    CASE            reduce using rule 97 (ReturnStmt -> RETURN .)
    DEFAULT         reduce using rule 97 (ReturnStmt -> RETURN .)
    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    ExpressionList                 shift and go to state 195
    Expression                     shift and go to state 196
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 122

    (86) Assignment -> ExpressionList . AssignOp RepeatNewline ExpressionList
    (87) Assignment -> ExpressionList . EQUALS RepeatNewline ExpressionList
    (88) Assignment -> ExpressionList . EQUALS MallocExp
    (89) Assignment -> ExpressionList . EQUALS SinExp
    (90) Assignment -> ExpressionList . EQUALS CosExp
    (91) Assignment -> ExpressionList . EQUALS OpenFileExp
    (95) Assignment -> ExpressionList . EQUALS NULL
    (76) AssignOp -> . TIMESEQUAL
    (77) AssignOp -> . DIVEQUAL
    (78) AssignOp -> . MODEQUAL
    (79) AssignOp -> . PLUSEQUAL
    (80) AssignOp -> . MINUSEQUAL
    (81) AssignOp -> . LSHIFTEQUAL
    (82) AssignOp -> . RSHIFTEQUAL
    (83) AssignOp -> . ANDEQUAL
    (84) AssignOp -> . OREQUAL
    (85) AssignOp -> . XOREQUAL

    EQUALS          shift and go to state 199
    TIMESEQUAL      shift and go to state 200
    DIVEQUAL        shift and go to state 201
    MODEQUAL        shift and go to state 202
    PLUSEQUAL       shift and go to state 203
    MINUSEQUAL      shift and go to state 204
    LSHIFTEQUAL     shift and go to state 205
    RSHIFTEQUAL     shift and go to state 206
    ANDEQUAL        shift and go to state 207
    OREQUAL         shift and go to state 208
    XOREQUAL        shift and go to state 209

    AssignOp                       shift and go to state 198

state 123

    (100) BreakStmt -> BREAK .
    (101) BreakStmt -> BREAK . Label
    (68) Label -> . ID

    newline         reduce using rule 100 (BreakStmt -> BREAK .)
    SEMI            reduce using rule 100 (BreakStmt -> BREAK .)
    RBRACE          reduce using rule 100 (BreakStmt -> BREAK .)
    CASE            reduce using rule 100 (BreakStmt -> BREAK .)
    DEFAULT         reduce using rule 100 (BreakStmt -> BREAK .)
    ID              shift and go to state 211

    Label                          shift and go to state 210

state 124

    (102) ContinueStmt -> CONTINUE .
    (103) ContinueStmt -> CONTINUE . Label
    (68) Label -> . ID

    newline         reduce using rule 102 (ContinueStmt -> CONTINUE .)
    SEMI            reduce using rule 102 (ContinueStmt -> CONTINUE .)
    RBRACE          reduce using rule 102 (ContinueStmt -> CONTINUE .)
    CASE            reduce using rule 102 (ContinueStmt -> CONTINUE .)
    DEFAULT         reduce using rule 102 (ContinueStmt -> CONTINUE .)
    ID              shift and go to state 211

    Label                          shift and go to state 212

state 125

    (99) FallthroughStmt -> FALLTHROUGH .

    newline         reduce using rule 99 (FallthroughStmt -> FALLTHROUGH .)
    SEMI            reduce using rule 99 (FallthroughStmt -> FALLTHROUGH .)
    RBRACE          reduce using rule 99 (FallthroughStmt -> FALLTHROUGH .)
    CASE            reduce using rule 99 (FallthroughStmt -> FALLTHROUGH .)
    DEFAULT         reduce using rule 99 (FallthroughStmt -> FALLTHROUGH .)


state 126

    (104) GotoStmt -> GOTO . Label
    (68) Label -> . ID

    ID              shift and go to state 211

    Label                          shift and go to state 213

state 127

    (107) IfStmt -> IF . IfExp Block
    (108) IfStmt -> IF . IfExp Block EndIfMarker ELSE ElseMarker Block
    (109) IfStmt -> IF . IfExp Block EndIfMarker ELSE IfStmt
    (106) IfExp -> . IfMarker RepeatNewline Expression
    (110) IfMarker -> . empty
    (258) empty -> .

    newline         reduce using rule 258 (empty -> .)
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    IfExp                          shift and go to state 214
    IfMarker                       shift and go to state 215
    empty                          shift and go to state 216

state 128

    (113) SwitchStmt -> ExprSwitchStmt .

    newline         reduce using rule 113 (SwitchStmt -> ExprSwitchStmt .)
    SEMI            reduce using rule 113 (SwitchStmt -> ExprSwitchStmt .)
    RBRACE          reduce using rule 113 (SwitchStmt -> ExprSwitchStmt .)
    CASE            reduce using rule 113 (SwitchStmt -> ExprSwitchStmt .)
    DEFAULT         reduce using rule 113 (SwitchStmt -> ExprSwitchStmt .)


state 129

    (123) ForStmt -> FOR . ForMarker RepeatNewline Block
    (124) ForStmt -> FOR . ForMarker RepeatNewline Condition Block
    (125) ForStmt -> FOR . ForMarker RepeatNewline ForClause Block
    (126) ForMarker -> . empty
    (258) empty -> .

    newline         reduce using rule 258 (empty -> .)
    LBRACE          reduce using rule 258 (empty -> .)
    SEMI            reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    NULL            reduce using rule 258 (empty -> .)
    READFILE        reduce using rule 258 (empty -> .)
    WRITEFILE       reduce using rule 258 (empty -> .)
    CLOSEFILE       reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    ForMarker                      shift and go to state 217
    empty                          shift and go to state 218

state 130

    (138) DeferStmt -> DEFER . PrimaryExpr Arguments
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (244) OperandName2 -> . ID

    LPAREN          shift and go to state 148
    ID              shift and go to state 197

    PrimaryExpr                    shift and go to state 219
    OperandName2                   shift and go to state 163

state 131

    (176) UnaryExp -> PrimaryExpr .
    (185) PrimaryExpr -> PrimaryExpr . Selector
    (186) PrimaryExpr -> PrimaryExpr . Index
    (187) PrimaryExpr -> PrimaryExpr . Arguments
    (245) Selector -> . PERIOD RepeatNewline ID
    (246) Index -> . LBRACKET RepeatNewline Expression RBRACKET
    (247) Arguments -> . LPAREN RepeatNewline ExpressionList RPAREN
    (248) Arguments -> . LPAREN RepeatNewline RPAREN

    TIMES           reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    DIVIDE          reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    MODULO          reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    LSHIFT          reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    RSHIFT          reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    AND             reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    ANDNOT          reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    PLUS            reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    MINUS           reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    OR              reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    XOR             reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    LT              reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    GT              reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    LE              reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    GE              reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    EQ              reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    NE              reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    LAND            reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    INCR            reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    DECR            reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    COMMA           reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    LOR             reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    newline         reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    SEMI            reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    RBRACE          reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    EQUALS          reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    TIMESEQUAL      reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    DIVEQUAL        reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    MODEQUAL        reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    PLUSEQUAL       reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    MINUSEQUAL      reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    LSHIFTEQUAL     reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    RSHIFTEQUAL     reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    ANDEQUAL        reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    OREQUAL         reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    XOREQUAL        reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    CASE            reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    DEFAULT         reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    $end            reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    LBRACE          reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    RPAREN          reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    RBRACKET        reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    COLON           reduce using rule 176 (UnaryExp -> PrimaryExpr .)
    PERIOD          shift and go to state 223
    LBRACKET        shift and go to state 224
    LPAREN          shift and go to state 225

    Selector                       shift and go to state 220
    Index                          shift and go to state 221
    Arguments                      shift and go to state 222

state 132

    (139) PrintStmt -> PrintIntStmt .

    newline         reduce using rule 139 (PrintStmt -> PrintIntStmt .)
    SEMI            reduce using rule 139 (PrintStmt -> PrintIntStmt .)
    RBRACE          reduce using rule 139 (PrintStmt -> PrintIntStmt .)
    CASE            reduce using rule 139 (PrintStmt -> PrintIntStmt .)
    DEFAULT         reduce using rule 139 (PrintStmt -> PrintIntStmt .)


state 133

    (140) PrintStmt -> PrintStrStmt .

    newline         reduce using rule 140 (PrintStmt -> PrintStrStmt .)
    SEMI            reduce using rule 140 (PrintStmt -> PrintStrStmt .)
    RBRACE          reduce using rule 140 (PrintStmt -> PrintStrStmt .)
    CASE            reduce using rule 140 (PrintStmt -> PrintStrStmt .)
    DEFAULT         reduce using rule 140 (PrintStmt -> PrintStrStmt .)


state 134

    (141) PrintStmt -> PrintFloatStmt .

    newline         reduce using rule 141 (PrintStmt -> PrintFloatStmt .)
    SEMI            reduce using rule 141 (PrintStmt -> PrintFloatStmt .)
    RBRACE          reduce using rule 141 (PrintStmt -> PrintFloatStmt .)
    CASE            reduce using rule 141 (PrintStmt -> PrintFloatStmt .)
    DEFAULT         reduce using rule 141 (PrintStmt -> PrintFloatStmt .)


state 135

    (145) ScanIntStmt -> SCANINT . Expression
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 226
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 136

    (74) IncDecStmt -> Expression . INCR
    (75) IncDecStmt -> Expression . DECR
    (73) ExpressionStmt -> Expression .
    (147) ExpressionList -> Expression .
    (148) ExpressionList -> Expression . COMMA RepeatNewline ExpressionList
    (149) Expression -> Expression . LOR RepeatNewline Term1

    INCR            shift and go to state 227
    DECR            shift and go to state 228
    newline         reduce using rule 73 (ExpressionStmt -> Expression .)
    SEMI            reduce using rule 73 (ExpressionStmt -> Expression .)
    RBRACE          reduce using rule 73 (ExpressionStmt -> Expression .)
    CASE            reduce using rule 73 (ExpressionStmt -> Expression .)
    DEFAULT         reduce using rule 73 (ExpressionStmt -> Expression .)
    LBRACE          reduce using rule 73 (ExpressionStmt -> Expression .)
    EQUALS          reduce using rule 147 (ExpressionList -> Expression .)
    TIMESEQUAL      reduce using rule 147 (ExpressionList -> Expression .)
    DIVEQUAL        reduce using rule 147 (ExpressionList -> Expression .)
    MODEQUAL        reduce using rule 147 (ExpressionList -> Expression .)
    PLUSEQUAL       reduce using rule 147 (ExpressionList -> Expression .)
    MINUSEQUAL      reduce using rule 147 (ExpressionList -> Expression .)
    LSHIFTEQUAL     reduce using rule 147 (ExpressionList -> Expression .)
    RSHIFTEQUAL     reduce using rule 147 (ExpressionList -> Expression .)
    ANDEQUAL        reduce using rule 147 (ExpressionList -> Expression .)
    OREQUAL         reduce using rule 147 (ExpressionList -> Expression .)
    XOREQUAL        reduce using rule 147 (ExpressionList -> Expression .)
    COMMA           shift and go to state 229
    LOR             shift and go to state 230


state 137

    (146) ScanStrStmt -> SCANSTR . Expression
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 231
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 138

    (68) Label -> ID .
    (96) ShortVarDecl -> ID . AUTOASIGN RepeatNewline Expression
    (244) OperandName2 -> ID .

    COLON           reduce using rule 68 (Label -> ID .)
    AUTOASIGN       shift and go to state 232
    PERIOD          reduce using rule 244 (OperandName2 -> ID .)
    LBRACKET        reduce using rule 244 (OperandName2 -> ID .)
    LPAREN          reduce using rule 244 (OperandName2 -> ID .)
    TIMES           reduce using rule 244 (OperandName2 -> ID .)
    DIVIDE          reduce using rule 244 (OperandName2 -> ID .)
    MODULO          reduce using rule 244 (OperandName2 -> ID .)
    LSHIFT          reduce using rule 244 (OperandName2 -> ID .)
    RSHIFT          reduce using rule 244 (OperandName2 -> ID .)
    AND             reduce using rule 244 (OperandName2 -> ID .)
    ANDNOT          reduce using rule 244 (OperandName2 -> ID .)
    PLUS            reduce using rule 244 (OperandName2 -> ID .)
    MINUS           reduce using rule 244 (OperandName2 -> ID .)
    OR              reduce using rule 244 (OperandName2 -> ID .)
    XOR             reduce using rule 244 (OperandName2 -> ID .)
    LT              reduce using rule 244 (OperandName2 -> ID .)
    GT              reduce using rule 244 (OperandName2 -> ID .)
    LE              reduce using rule 244 (OperandName2 -> ID .)
    GE              reduce using rule 244 (OperandName2 -> ID .)
    EQ              reduce using rule 244 (OperandName2 -> ID .)
    NE              reduce using rule 244 (OperandName2 -> ID .)
    LAND            reduce using rule 244 (OperandName2 -> ID .)
    INCR            reduce using rule 244 (OperandName2 -> ID .)
    DECR            reduce using rule 244 (OperandName2 -> ID .)
    COMMA           reduce using rule 244 (OperandName2 -> ID .)
    LOR             reduce using rule 244 (OperandName2 -> ID .)
    newline         reduce using rule 244 (OperandName2 -> ID .)
    SEMI            reduce using rule 244 (OperandName2 -> ID .)
    RBRACE          reduce using rule 244 (OperandName2 -> ID .)
    EQUALS          reduce using rule 244 (OperandName2 -> ID .)
    TIMESEQUAL      reduce using rule 244 (OperandName2 -> ID .)
    DIVEQUAL        reduce using rule 244 (OperandName2 -> ID .)
    MODEQUAL        reduce using rule 244 (OperandName2 -> ID .)
    PLUSEQUAL       reduce using rule 244 (OperandName2 -> ID .)
    MINUSEQUAL      reduce using rule 244 (OperandName2 -> ID .)
    LSHIFTEQUAL     reduce using rule 244 (OperandName2 -> ID .)
    RSHIFTEQUAL     reduce using rule 244 (OperandName2 -> ID .)
    ANDEQUAL        reduce using rule 244 (OperandName2 -> ID .)
    OREQUAL         reduce using rule 244 (OperandName2 -> ID .)
    XOREQUAL        reduce using rule 244 (OperandName2 -> ID .)
    CASE            reduce using rule 244 (OperandName2 -> ID .)
    DEFAULT         reduce using rule 244 (OperandName2 -> ID .)


state 139

    (92) Assignment -> ReadFileExp .

    newline         reduce using rule 92 (Assignment -> ReadFileExp .)
    SEMI            reduce using rule 92 (Assignment -> ReadFileExp .)
    RBRACE          reduce using rule 92 (Assignment -> ReadFileExp .)
    CASE            reduce using rule 92 (Assignment -> ReadFileExp .)
    DEFAULT         reduce using rule 92 (Assignment -> ReadFileExp .)
    LBRACE          reduce using rule 92 (Assignment -> ReadFileExp .)


state 140

    (93) Assignment -> WriteFileExp .

    newline         reduce using rule 93 (Assignment -> WriteFileExp .)
    SEMI            reduce using rule 93 (Assignment -> WriteFileExp .)
    RBRACE          reduce using rule 93 (Assignment -> WriteFileExp .)
    CASE            reduce using rule 93 (Assignment -> WriteFileExp .)
    DEFAULT         reduce using rule 93 (Assignment -> WriteFileExp .)
    LBRACE          reduce using rule 93 (Assignment -> WriteFileExp .)


state 141

    (94) Assignment -> CloseFileExp .

    newline         reduce using rule 94 (Assignment -> CloseFileExp .)
    SEMI            reduce using rule 94 (Assignment -> CloseFileExp .)
    RBRACE          reduce using rule 94 (Assignment -> CloseFileExp .)
    CASE            reduce using rule 94 (Assignment -> CloseFileExp .)
    DEFAULT         reduce using rule 94 (Assignment -> CloseFileExp .)
    LBRACE          reduce using rule 94 (Assignment -> CloseFileExp .)


state 142

    (165) Term3 -> NULL .

    PLUS            reduce using rule 165 (Term3 -> NULL .)
    MINUS           reduce using rule 165 (Term3 -> NULL .)
    OR              reduce using rule 165 (Term3 -> NULL .)
    XOR             reduce using rule 165 (Term3 -> NULL .)
    LT              reduce using rule 165 (Term3 -> NULL .)
    GT              reduce using rule 165 (Term3 -> NULL .)
    LE              reduce using rule 165 (Term3 -> NULL .)
    GE              reduce using rule 165 (Term3 -> NULL .)
    EQ              reduce using rule 165 (Term3 -> NULL .)
    NE              reduce using rule 165 (Term3 -> NULL .)
    LAND            reduce using rule 165 (Term3 -> NULL .)
    INCR            reduce using rule 165 (Term3 -> NULL .)
    DECR            reduce using rule 165 (Term3 -> NULL .)
    COMMA           reduce using rule 165 (Term3 -> NULL .)
    LOR             reduce using rule 165 (Term3 -> NULL .)
    newline         reduce using rule 165 (Term3 -> NULL .)
    SEMI            reduce using rule 165 (Term3 -> NULL .)
    RBRACE          reduce using rule 165 (Term3 -> NULL .)
    EQUALS          reduce using rule 165 (Term3 -> NULL .)
    TIMESEQUAL      reduce using rule 165 (Term3 -> NULL .)
    DIVEQUAL        reduce using rule 165 (Term3 -> NULL .)
    MODEQUAL        reduce using rule 165 (Term3 -> NULL .)
    PLUSEQUAL       reduce using rule 165 (Term3 -> NULL .)
    MINUSEQUAL      reduce using rule 165 (Term3 -> NULL .)
    LSHIFTEQUAL     reduce using rule 165 (Term3 -> NULL .)
    RSHIFTEQUAL     reduce using rule 165 (Term3 -> NULL .)
    ANDEQUAL        reduce using rule 165 (Term3 -> NULL .)
    OREQUAL         reduce using rule 165 (Term3 -> NULL .)
    XOREQUAL        reduce using rule 165 (Term3 -> NULL .)
    CASE            reduce using rule 165 (Term3 -> NULL .)
    DEFAULT         reduce using rule 165 (Term3 -> NULL .)
    $end            reduce using rule 165 (Term3 -> NULL .)
    LBRACE          reduce using rule 165 (Term3 -> NULL .)
    RPAREN          reduce using rule 165 (Term3 -> NULL .)
    RBRACKET        reduce using rule 165 (Term3 -> NULL .)
    COLON           reduce using rule 165 (Term3 -> NULL .)


state 143

    (114) ExprSwitchStmt -> SWITCH . RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 233
    empty                          shift and go to state 5

state 144

    (142) PrintIntStmt -> PRINTINT . Expression
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 234
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 145

    (144) PrintStrStmt -> PRINTSTR . Expression
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 235
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 146

    (143) PrintFloatStmt -> PRINTFLOAT . Expression
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 236
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 147

    (253) ReadFileExp -> READFILE . LPAREN Expression COMMA Expression COMMA Expression RPAREN

    LPAREN          shift and go to state 237


state 148

    (188) PrimaryExpr -> LPAREN . RepeatNewline Expression RPAREN
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 238
    empty                          shift and go to state 5

state 149

    (254) WriteFileExp -> WRITEFILE . LPAREN Expression COMMA Expression COMMA Expression RPAREN

    LPAREN          shift and go to state 239


state 150

    (255) CloseFileExp -> CLOSEFILE . LPAREN Expression RPAREN

    LPAREN          shift and go to state 240


state 151

    (150) Expression -> Term1 .
    (151) Term1 -> Term1 . LAND RepeatNewline Term2

    INCR            reduce using rule 150 (Expression -> Term1 .)
    DECR            reduce using rule 150 (Expression -> Term1 .)
    COMMA           reduce using rule 150 (Expression -> Term1 .)
    LOR             reduce using rule 150 (Expression -> Term1 .)
    newline         reduce using rule 150 (Expression -> Term1 .)
    SEMI            reduce using rule 150 (Expression -> Term1 .)
    RBRACE          reduce using rule 150 (Expression -> Term1 .)
    EQUALS          reduce using rule 150 (Expression -> Term1 .)
    TIMESEQUAL      reduce using rule 150 (Expression -> Term1 .)
    DIVEQUAL        reduce using rule 150 (Expression -> Term1 .)
    MODEQUAL        reduce using rule 150 (Expression -> Term1 .)
    PLUSEQUAL       reduce using rule 150 (Expression -> Term1 .)
    MINUSEQUAL      reduce using rule 150 (Expression -> Term1 .)
    LSHIFTEQUAL     reduce using rule 150 (Expression -> Term1 .)
    RSHIFTEQUAL     reduce using rule 150 (Expression -> Term1 .)
    ANDEQUAL        reduce using rule 150 (Expression -> Term1 .)
    OREQUAL         reduce using rule 150 (Expression -> Term1 .)
    XOREQUAL        reduce using rule 150 (Expression -> Term1 .)
    CASE            reduce using rule 150 (Expression -> Term1 .)
    DEFAULT         reduce using rule 150 (Expression -> Term1 .)
    $end            reduce using rule 150 (Expression -> Term1 .)
    LBRACE          reduce using rule 150 (Expression -> Term1 .)
    RPAREN          reduce using rule 150 (Expression -> Term1 .)
    RBRACKET        reduce using rule 150 (Expression -> Term1 .)
    COLON           reduce using rule 150 (Expression -> Term1 .)
    LAND            shift and go to state 241


state 152

    (152) Term1 -> Term2 .
    (153) Term2 -> Term2 . Relop RepeatNewline Term3
    (155) Relop -> . LT
    (156) Relop -> . GT
    (157) Relop -> . LE
    (158) Relop -> . GE
    (159) Relop -> . EQ
    (160) Relop -> . NE

    LAND            reduce using rule 152 (Term1 -> Term2 .)
    INCR            reduce using rule 152 (Term1 -> Term2 .)
    DECR            reduce using rule 152 (Term1 -> Term2 .)
    COMMA           reduce using rule 152 (Term1 -> Term2 .)
    LOR             reduce using rule 152 (Term1 -> Term2 .)
    newline         reduce using rule 152 (Term1 -> Term2 .)
    SEMI            reduce using rule 152 (Term1 -> Term2 .)
    RBRACE          reduce using rule 152 (Term1 -> Term2 .)
    EQUALS          reduce using rule 152 (Term1 -> Term2 .)
    TIMESEQUAL      reduce using rule 152 (Term1 -> Term2 .)
    DIVEQUAL        reduce using rule 152 (Term1 -> Term2 .)
    MODEQUAL        reduce using rule 152 (Term1 -> Term2 .)
    PLUSEQUAL       reduce using rule 152 (Term1 -> Term2 .)
    MINUSEQUAL      reduce using rule 152 (Term1 -> Term2 .)
    LSHIFTEQUAL     reduce using rule 152 (Term1 -> Term2 .)
    RSHIFTEQUAL     reduce using rule 152 (Term1 -> Term2 .)
    ANDEQUAL        reduce using rule 152 (Term1 -> Term2 .)
    OREQUAL         reduce using rule 152 (Term1 -> Term2 .)
    XOREQUAL        reduce using rule 152 (Term1 -> Term2 .)
    CASE            reduce using rule 152 (Term1 -> Term2 .)
    DEFAULT         reduce using rule 152 (Term1 -> Term2 .)
    $end            reduce using rule 152 (Term1 -> Term2 .)
    LBRACE          reduce using rule 152 (Term1 -> Term2 .)
    RPAREN          reduce using rule 152 (Term1 -> Term2 .)
    RBRACKET        reduce using rule 152 (Term1 -> Term2 .)
    COLON           reduce using rule 152 (Term1 -> Term2 .)
    LT              shift and go to state 243
    GT              shift and go to state 244
    LE              shift and go to state 245
    GE              shift and go to state 246
    EQ              shift and go to state 247
    NE              shift and go to state 248

    Relop                          shift and go to state 242

state 153

    (154) Term2 -> Term3 .
    (161) Term3 -> Term3 . PLUS RepeatNewline Term4
    (162) Term3 -> Term3 . MINUS RepeatNewline Term4
    (163) Term3 -> Term3 . OR RepeatNewline Term4
    (164) Term3 -> Term3 . XOR RepeatNewline Term4

    LT              reduce using rule 154 (Term2 -> Term3 .)
    GT              reduce using rule 154 (Term2 -> Term3 .)
    LE              reduce using rule 154 (Term2 -> Term3 .)
    GE              reduce using rule 154 (Term2 -> Term3 .)
    EQ              reduce using rule 154 (Term2 -> Term3 .)
    NE              reduce using rule 154 (Term2 -> Term3 .)
    LAND            reduce using rule 154 (Term2 -> Term3 .)
    INCR            reduce using rule 154 (Term2 -> Term3 .)
    DECR            reduce using rule 154 (Term2 -> Term3 .)
    COMMA           reduce using rule 154 (Term2 -> Term3 .)
    LOR             reduce using rule 154 (Term2 -> Term3 .)
    newline         reduce using rule 154 (Term2 -> Term3 .)
    SEMI            reduce using rule 154 (Term2 -> Term3 .)
    RBRACE          reduce using rule 154 (Term2 -> Term3 .)
    EQUALS          reduce using rule 154 (Term2 -> Term3 .)
    TIMESEQUAL      reduce using rule 154 (Term2 -> Term3 .)
    DIVEQUAL        reduce using rule 154 (Term2 -> Term3 .)
    MODEQUAL        reduce using rule 154 (Term2 -> Term3 .)
    PLUSEQUAL       reduce using rule 154 (Term2 -> Term3 .)
    MINUSEQUAL      reduce using rule 154 (Term2 -> Term3 .)
    LSHIFTEQUAL     reduce using rule 154 (Term2 -> Term3 .)
    RSHIFTEQUAL     reduce using rule 154 (Term2 -> Term3 .)
    ANDEQUAL        reduce using rule 154 (Term2 -> Term3 .)
    OREQUAL         reduce using rule 154 (Term2 -> Term3 .)
    XOREQUAL        reduce using rule 154 (Term2 -> Term3 .)
    CASE            reduce using rule 154 (Term2 -> Term3 .)
    DEFAULT         reduce using rule 154 (Term2 -> Term3 .)
    $end            reduce using rule 154 (Term2 -> Term3 .)
    LBRACE          reduce using rule 154 (Term2 -> Term3 .)
    RPAREN          reduce using rule 154 (Term2 -> Term3 .)
    RBRACKET        reduce using rule 154 (Term2 -> Term3 .)
    COLON           reduce using rule 154 (Term2 -> Term3 .)
    PLUS            shift and go to state 249
    MINUS           shift and go to state 250
    OR              shift and go to state 251
    XOR             shift and go to state 252


state 154

    (179) UnaryOp -> PLUS .

    newline         reduce using rule 179 (UnaryOp -> PLUS .)
    LPAREN          reduce using rule 179 (UnaryOp -> PLUS .)
    PLUS            reduce using rule 179 (UnaryOp -> PLUS .)
    MINUS           reduce using rule 179 (UnaryOp -> PLUS .)
    LNOT            reduce using rule 179 (UnaryOp -> PLUS .)
    TIMES           reduce using rule 179 (UnaryOp -> PLUS .)
    AND             reduce using rule 179 (UnaryOp -> PLUS .)
    ID              reduce using rule 179 (UnaryOp -> PLUS .)
    INTEGER         reduce using rule 179 (UnaryOp -> PLUS .)
    FLOAT           reduce using rule 179 (UnaryOp -> PLUS .)
    STRINGVAL       reduce using rule 179 (UnaryOp -> PLUS .)
    CHARACTER       reduce using rule 179 (UnaryOp -> PLUS .)
    LBRACKET        reduce using rule 179 (UnaryOp -> PLUS .)
    STRUCT          reduce using rule 179 (UnaryOp -> PLUS .)


state 155

    (166) Term3 -> Term4 .
    (167) Term4 -> Term4 . TIMES RepeatNewline Term5
    (168) Term4 -> Term4 . DIVIDE RepeatNewline Term5
    (169) Term4 -> Term4 . MODULO RepeatNewline Term5
    (170) Term4 -> Term4 . LSHIFT RepeatNewline Term5
    (171) Term4 -> Term4 . RSHIFT RepeatNewline Term5
    (172) Term4 -> Term4 . AND RepeatNewline Term5
    (173) Term4 -> Term4 . ANDNOT RepeatNewline Term5

    PLUS            reduce using rule 166 (Term3 -> Term4 .)
    MINUS           reduce using rule 166 (Term3 -> Term4 .)
    OR              reduce using rule 166 (Term3 -> Term4 .)
    XOR             reduce using rule 166 (Term3 -> Term4 .)
    LT              reduce using rule 166 (Term3 -> Term4 .)
    GT              reduce using rule 166 (Term3 -> Term4 .)
    LE              reduce using rule 166 (Term3 -> Term4 .)
    GE              reduce using rule 166 (Term3 -> Term4 .)
    EQ              reduce using rule 166 (Term3 -> Term4 .)
    NE              reduce using rule 166 (Term3 -> Term4 .)
    LAND            reduce using rule 166 (Term3 -> Term4 .)
    INCR            reduce using rule 166 (Term3 -> Term4 .)
    DECR            reduce using rule 166 (Term3 -> Term4 .)
    COMMA           reduce using rule 166 (Term3 -> Term4 .)
    LOR             reduce using rule 166 (Term3 -> Term4 .)
    newline         reduce using rule 166 (Term3 -> Term4 .)
    SEMI            reduce using rule 166 (Term3 -> Term4 .)
    RBRACE          reduce using rule 166 (Term3 -> Term4 .)
    EQUALS          reduce using rule 166 (Term3 -> Term4 .)
    TIMESEQUAL      reduce using rule 166 (Term3 -> Term4 .)
    DIVEQUAL        reduce using rule 166 (Term3 -> Term4 .)
    MODEQUAL        reduce using rule 166 (Term3 -> Term4 .)
    PLUSEQUAL       reduce using rule 166 (Term3 -> Term4 .)
    MINUSEQUAL      reduce using rule 166 (Term3 -> Term4 .)
    LSHIFTEQUAL     reduce using rule 166 (Term3 -> Term4 .)
    RSHIFTEQUAL     reduce using rule 166 (Term3 -> Term4 .)
    ANDEQUAL        reduce using rule 166 (Term3 -> Term4 .)
    OREQUAL         reduce using rule 166 (Term3 -> Term4 .)
    XOREQUAL        reduce using rule 166 (Term3 -> Term4 .)
    CASE            reduce using rule 166 (Term3 -> Term4 .)
    DEFAULT         reduce using rule 166 (Term3 -> Term4 .)
    $end            reduce using rule 166 (Term3 -> Term4 .)
    LBRACE          reduce using rule 166 (Term3 -> Term4 .)
    RPAREN          reduce using rule 166 (Term3 -> Term4 .)
    RBRACKET        reduce using rule 166 (Term3 -> Term4 .)
    COLON           reduce using rule 166 (Term3 -> Term4 .)
    TIMES           shift and go to state 253
    DIVIDE          shift and go to state 254
    MODULO          shift and go to state 255
    LSHIFT          shift and go to state 256
    RSHIFT          shift and go to state 257
    AND             shift and go to state 258
    ANDNOT          shift and go to state 259


state 156

    (180) UnaryOp -> MINUS .

    newline         reduce using rule 180 (UnaryOp -> MINUS .)
    LPAREN          reduce using rule 180 (UnaryOp -> MINUS .)
    PLUS            reduce using rule 180 (UnaryOp -> MINUS .)
    MINUS           reduce using rule 180 (UnaryOp -> MINUS .)
    LNOT            reduce using rule 180 (UnaryOp -> MINUS .)
    TIMES           reduce using rule 180 (UnaryOp -> MINUS .)
    AND             reduce using rule 180 (UnaryOp -> MINUS .)
    ID              reduce using rule 180 (UnaryOp -> MINUS .)
    INTEGER         reduce using rule 180 (UnaryOp -> MINUS .)
    FLOAT           reduce using rule 180 (UnaryOp -> MINUS .)
    STRINGVAL       reduce using rule 180 (UnaryOp -> MINUS .)
    CHARACTER       reduce using rule 180 (UnaryOp -> MINUS .)
    LBRACKET        reduce using rule 180 (UnaryOp -> MINUS .)
    STRUCT          reduce using rule 180 (UnaryOp -> MINUS .)


state 157

    (182) UnaryOp -> TIMES .

    newline         reduce using rule 182 (UnaryOp -> TIMES .)
    LPAREN          reduce using rule 182 (UnaryOp -> TIMES .)
    PLUS            reduce using rule 182 (UnaryOp -> TIMES .)
    MINUS           reduce using rule 182 (UnaryOp -> TIMES .)
    LNOT            reduce using rule 182 (UnaryOp -> TIMES .)
    TIMES           reduce using rule 182 (UnaryOp -> TIMES .)
    AND             reduce using rule 182 (UnaryOp -> TIMES .)
    ID              reduce using rule 182 (UnaryOp -> TIMES .)
    INTEGER         reduce using rule 182 (UnaryOp -> TIMES .)
    FLOAT           reduce using rule 182 (UnaryOp -> TIMES .)
    STRINGVAL       reduce using rule 182 (UnaryOp -> TIMES .)
    CHARACTER       reduce using rule 182 (UnaryOp -> TIMES .)
    LBRACKET        reduce using rule 182 (UnaryOp -> TIMES .)
    STRUCT          reduce using rule 182 (UnaryOp -> TIMES .)


state 158

    (174) Term4 -> Term5 .

    TIMES           reduce using rule 174 (Term4 -> Term5 .)
    DIVIDE          reduce using rule 174 (Term4 -> Term5 .)
    MODULO          reduce using rule 174 (Term4 -> Term5 .)
    LSHIFT          reduce using rule 174 (Term4 -> Term5 .)
    RSHIFT          reduce using rule 174 (Term4 -> Term5 .)
    AND             reduce using rule 174 (Term4 -> Term5 .)
    ANDNOT          reduce using rule 174 (Term4 -> Term5 .)
    PLUS            reduce using rule 174 (Term4 -> Term5 .)
    MINUS           reduce using rule 174 (Term4 -> Term5 .)
    OR              reduce using rule 174 (Term4 -> Term5 .)
    XOR             reduce using rule 174 (Term4 -> Term5 .)
    LT              reduce using rule 174 (Term4 -> Term5 .)
    GT              reduce using rule 174 (Term4 -> Term5 .)
    LE              reduce using rule 174 (Term4 -> Term5 .)
    GE              reduce using rule 174 (Term4 -> Term5 .)
    EQ              reduce using rule 174 (Term4 -> Term5 .)
    NE              reduce using rule 174 (Term4 -> Term5 .)
    LAND            reduce using rule 174 (Term4 -> Term5 .)
    INCR            reduce using rule 174 (Term4 -> Term5 .)
    DECR            reduce using rule 174 (Term4 -> Term5 .)
    COMMA           reduce using rule 174 (Term4 -> Term5 .)
    LOR             reduce using rule 174 (Term4 -> Term5 .)
    newline         reduce using rule 174 (Term4 -> Term5 .)
    SEMI            reduce using rule 174 (Term4 -> Term5 .)
    RBRACE          reduce using rule 174 (Term4 -> Term5 .)
    EQUALS          reduce using rule 174 (Term4 -> Term5 .)
    TIMESEQUAL      reduce using rule 174 (Term4 -> Term5 .)
    DIVEQUAL        reduce using rule 174 (Term4 -> Term5 .)
    MODEQUAL        reduce using rule 174 (Term4 -> Term5 .)
    PLUSEQUAL       reduce using rule 174 (Term4 -> Term5 .)
    MINUSEQUAL      reduce using rule 174 (Term4 -> Term5 .)
    LSHIFTEQUAL     reduce using rule 174 (Term4 -> Term5 .)
    RSHIFTEQUAL     reduce using rule 174 (Term4 -> Term5 .)
    ANDEQUAL        reduce using rule 174 (Term4 -> Term5 .)
    OREQUAL         reduce using rule 174 (Term4 -> Term5 .)
    XOREQUAL        reduce using rule 174 (Term4 -> Term5 .)
    CASE            reduce using rule 174 (Term4 -> Term5 .)
    DEFAULT         reduce using rule 174 (Term4 -> Term5 .)
    $end            reduce using rule 174 (Term4 -> Term5 .)
    LBRACE          reduce using rule 174 (Term4 -> Term5 .)
    RPAREN          reduce using rule 174 (Term4 -> Term5 .)
    RBRACKET        reduce using rule 174 (Term4 -> Term5 .)
    COLON           reduce using rule 174 (Term4 -> Term5 .)


state 159

    (183) UnaryOp -> AND .

    newline         reduce using rule 183 (UnaryOp -> AND .)
    LPAREN          reduce using rule 183 (UnaryOp -> AND .)
    PLUS            reduce using rule 183 (UnaryOp -> AND .)
    MINUS           reduce using rule 183 (UnaryOp -> AND .)
    LNOT            reduce using rule 183 (UnaryOp -> AND .)
    TIMES           reduce using rule 183 (UnaryOp -> AND .)
    AND             reduce using rule 183 (UnaryOp -> AND .)
    ID              reduce using rule 183 (UnaryOp -> AND .)
    INTEGER         reduce using rule 183 (UnaryOp -> AND .)
    FLOAT           reduce using rule 183 (UnaryOp -> AND .)
    STRINGVAL       reduce using rule 183 (UnaryOp -> AND .)
    CHARACTER       reduce using rule 183 (UnaryOp -> AND .)
    LBRACKET        reduce using rule 183 (UnaryOp -> AND .)
    STRUCT          reduce using rule 183 (UnaryOp -> AND .)


state 160

    (175) Term5 -> UnaryExp .

    TIMES           reduce using rule 175 (Term5 -> UnaryExp .)
    DIVIDE          reduce using rule 175 (Term5 -> UnaryExp .)
    MODULO          reduce using rule 175 (Term5 -> UnaryExp .)
    LSHIFT          reduce using rule 175 (Term5 -> UnaryExp .)
    RSHIFT          reduce using rule 175 (Term5 -> UnaryExp .)
    AND             reduce using rule 175 (Term5 -> UnaryExp .)
    ANDNOT          reduce using rule 175 (Term5 -> UnaryExp .)
    PLUS            reduce using rule 175 (Term5 -> UnaryExp .)
    MINUS           reduce using rule 175 (Term5 -> UnaryExp .)
    OR              reduce using rule 175 (Term5 -> UnaryExp .)
    XOR             reduce using rule 175 (Term5 -> UnaryExp .)
    LT              reduce using rule 175 (Term5 -> UnaryExp .)
    GT              reduce using rule 175 (Term5 -> UnaryExp .)
    LE              reduce using rule 175 (Term5 -> UnaryExp .)
    GE              reduce using rule 175 (Term5 -> UnaryExp .)
    EQ              reduce using rule 175 (Term5 -> UnaryExp .)
    NE              reduce using rule 175 (Term5 -> UnaryExp .)
    LAND            reduce using rule 175 (Term5 -> UnaryExp .)
    INCR            reduce using rule 175 (Term5 -> UnaryExp .)
    DECR            reduce using rule 175 (Term5 -> UnaryExp .)
    COMMA           reduce using rule 175 (Term5 -> UnaryExp .)
    LOR             reduce using rule 175 (Term5 -> UnaryExp .)
    newline         reduce using rule 175 (Term5 -> UnaryExp .)
    SEMI            reduce using rule 175 (Term5 -> UnaryExp .)
    RBRACE          reduce using rule 175 (Term5 -> UnaryExp .)
    EQUALS          reduce using rule 175 (Term5 -> UnaryExp .)
    TIMESEQUAL      reduce using rule 175 (Term5 -> UnaryExp .)
    DIVEQUAL        reduce using rule 175 (Term5 -> UnaryExp .)
    MODEQUAL        reduce using rule 175 (Term5 -> UnaryExp .)
    PLUSEQUAL       reduce using rule 175 (Term5 -> UnaryExp .)
    MINUSEQUAL      reduce using rule 175 (Term5 -> UnaryExp .)
    LSHIFTEQUAL     reduce using rule 175 (Term5 -> UnaryExp .)
    RSHIFTEQUAL     reduce using rule 175 (Term5 -> UnaryExp .)
    ANDEQUAL        reduce using rule 175 (Term5 -> UnaryExp .)
    OREQUAL         reduce using rule 175 (Term5 -> UnaryExp .)
    XOREQUAL        reduce using rule 175 (Term5 -> UnaryExp .)
    CASE            reduce using rule 175 (Term5 -> UnaryExp .)
    DEFAULT         reduce using rule 175 (Term5 -> UnaryExp .)
    $end            reduce using rule 175 (Term5 -> UnaryExp .)
    LBRACE          reduce using rule 175 (Term5 -> UnaryExp .)
    RPAREN          reduce using rule 175 (Term5 -> UnaryExp .)
    RBRACKET        reduce using rule 175 (Term5 -> UnaryExp .)
    COLON           reduce using rule 175 (Term5 -> UnaryExp .)


state 161

    (177) UnaryExp -> Literal .

    TIMES           reduce using rule 177 (UnaryExp -> Literal .)
    DIVIDE          reduce using rule 177 (UnaryExp -> Literal .)
    MODULO          reduce using rule 177 (UnaryExp -> Literal .)
    LSHIFT          reduce using rule 177 (UnaryExp -> Literal .)
    RSHIFT          reduce using rule 177 (UnaryExp -> Literal .)
    AND             reduce using rule 177 (UnaryExp -> Literal .)
    ANDNOT          reduce using rule 177 (UnaryExp -> Literal .)
    PLUS            reduce using rule 177 (UnaryExp -> Literal .)
    MINUS           reduce using rule 177 (UnaryExp -> Literal .)
    OR              reduce using rule 177 (UnaryExp -> Literal .)
    XOR             reduce using rule 177 (UnaryExp -> Literal .)
    LT              reduce using rule 177 (UnaryExp -> Literal .)
    GT              reduce using rule 177 (UnaryExp -> Literal .)
    LE              reduce using rule 177 (UnaryExp -> Literal .)
    GE              reduce using rule 177 (UnaryExp -> Literal .)
    EQ              reduce using rule 177 (UnaryExp -> Literal .)
    NE              reduce using rule 177 (UnaryExp -> Literal .)
    LAND            reduce using rule 177 (UnaryExp -> Literal .)
    INCR            reduce using rule 177 (UnaryExp -> Literal .)
    DECR            reduce using rule 177 (UnaryExp -> Literal .)
    COMMA           reduce using rule 177 (UnaryExp -> Literal .)
    LOR             reduce using rule 177 (UnaryExp -> Literal .)
    newline         reduce using rule 177 (UnaryExp -> Literal .)
    SEMI            reduce using rule 177 (UnaryExp -> Literal .)
    RBRACE          reduce using rule 177 (UnaryExp -> Literal .)
    EQUALS          reduce using rule 177 (UnaryExp -> Literal .)
    TIMESEQUAL      reduce using rule 177 (UnaryExp -> Literal .)
    DIVEQUAL        reduce using rule 177 (UnaryExp -> Literal .)
    MODEQUAL        reduce using rule 177 (UnaryExp -> Literal .)
    PLUSEQUAL       reduce using rule 177 (UnaryExp -> Literal .)
    MINUSEQUAL      reduce using rule 177 (UnaryExp -> Literal .)
    LSHIFTEQUAL     reduce using rule 177 (UnaryExp -> Literal .)
    RSHIFTEQUAL     reduce using rule 177 (UnaryExp -> Literal .)
    ANDEQUAL        reduce using rule 177 (UnaryExp -> Literal .)
    OREQUAL         reduce using rule 177 (UnaryExp -> Literal .)
    XOREQUAL        reduce using rule 177 (UnaryExp -> Literal .)
    CASE            reduce using rule 177 (UnaryExp -> Literal .)
    DEFAULT         reduce using rule 177 (UnaryExp -> Literal .)
    $end            reduce using rule 177 (UnaryExp -> Literal .)
    LBRACE          reduce using rule 177 (UnaryExp -> Literal .)
    RPAREN          reduce using rule 177 (UnaryExp -> Literal .)
    RBRACKET        reduce using rule 177 (UnaryExp -> Literal .)
    COLON           reduce using rule 177 (UnaryExp -> Literal .)


state 162

    (178) UnaryExp -> UnaryOp . RepeatNewline UnaryExp
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 260
    empty                          shift and go to state 5

state 163

    (184) PrimaryExpr -> OperandName2 .

    PERIOD          reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    LBRACKET        reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    LPAREN          reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    TIMES           reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    DIVIDE          reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    MODULO          reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    LSHIFT          reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    RSHIFT          reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    AND             reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    ANDNOT          reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    PLUS            reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    MINUS           reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    OR              reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    XOR             reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    LT              reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    GT              reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    LE              reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    GE              reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    EQ              reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    NE              reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    LAND            reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    INCR            reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    DECR            reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    COMMA           reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    LOR             reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    newline         reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    SEMI            reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    RBRACE          reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    EQUALS          reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    TIMESEQUAL      reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    DIVEQUAL        reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    MODEQUAL        reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    PLUSEQUAL       reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    MINUSEQUAL      reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    LSHIFTEQUAL     reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    RSHIFTEQUAL     reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    ANDEQUAL        reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    OREQUAL         reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    XOREQUAL        reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    CASE            reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    DEFAULT         reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    $end            reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    LBRACE          reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    RPAREN          reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    RBRACKET        reduce using rule 184 (PrimaryExpr -> OperandName2 .)
    COLON           reduce using rule 184 (PrimaryExpr -> OperandName2 .)


state 164

    (189) Literal -> BasicLit .

    TIMES           reduce using rule 189 (Literal -> BasicLit .)
    DIVIDE          reduce using rule 189 (Literal -> BasicLit .)
    MODULO          reduce using rule 189 (Literal -> BasicLit .)
    LSHIFT          reduce using rule 189 (Literal -> BasicLit .)
    RSHIFT          reduce using rule 189 (Literal -> BasicLit .)
    AND             reduce using rule 189 (Literal -> BasicLit .)
    ANDNOT          reduce using rule 189 (Literal -> BasicLit .)
    PLUS            reduce using rule 189 (Literal -> BasicLit .)
    MINUS           reduce using rule 189 (Literal -> BasicLit .)
    OR              reduce using rule 189 (Literal -> BasicLit .)
    XOR             reduce using rule 189 (Literal -> BasicLit .)
    LT              reduce using rule 189 (Literal -> BasicLit .)
    GT              reduce using rule 189 (Literal -> BasicLit .)
    LE              reduce using rule 189 (Literal -> BasicLit .)
    GE              reduce using rule 189 (Literal -> BasicLit .)
    EQ              reduce using rule 189 (Literal -> BasicLit .)
    NE              reduce using rule 189 (Literal -> BasicLit .)
    LAND            reduce using rule 189 (Literal -> BasicLit .)
    INCR            reduce using rule 189 (Literal -> BasicLit .)
    DECR            reduce using rule 189 (Literal -> BasicLit .)
    COMMA           reduce using rule 189 (Literal -> BasicLit .)
    LOR             reduce using rule 189 (Literal -> BasicLit .)
    newline         reduce using rule 189 (Literal -> BasicLit .)
    SEMI            reduce using rule 189 (Literal -> BasicLit .)
    RBRACE          reduce using rule 189 (Literal -> BasicLit .)
    EQUALS          reduce using rule 189 (Literal -> BasicLit .)
    TIMESEQUAL      reduce using rule 189 (Literal -> BasicLit .)
    DIVEQUAL        reduce using rule 189 (Literal -> BasicLit .)
    MODEQUAL        reduce using rule 189 (Literal -> BasicLit .)
    PLUSEQUAL       reduce using rule 189 (Literal -> BasicLit .)
    MINUSEQUAL      reduce using rule 189 (Literal -> BasicLit .)
    LSHIFTEQUAL     reduce using rule 189 (Literal -> BasicLit .)
    RSHIFTEQUAL     reduce using rule 189 (Literal -> BasicLit .)
    ANDEQUAL        reduce using rule 189 (Literal -> BasicLit .)
    OREQUAL         reduce using rule 189 (Literal -> BasicLit .)
    XOREQUAL        reduce using rule 189 (Literal -> BasicLit .)
    CASE            reduce using rule 189 (Literal -> BasicLit .)
    DEFAULT         reduce using rule 189 (Literal -> BasicLit .)
    $end            reduce using rule 189 (Literal -> BasicLit .)
    LBRACE          reduce using rule 189 (Literal -> BasicLit .)
    RPAREN          reduce using rule 189 (Literal -> BasicLit .)
    RBRACKET        reduce using rule 189 (Literal -> BasicLit .)
    COLON           reduce using rule 189 (Literal -> BasicLit .)


state 165

    (190) Literal -> CompositeLit .

    TIMES           reduce using rule 190 (Literal -> CompositeLit .)
    DIVIDE          reduce using rule 190 (Literal -> CompositeLit .)
    MODULO          reduce using rule 190 (Literal -> CompositeLit .)
    LSHIFT          reduce using rule 190 (Literal -> CompositeLit .)
    RSHIFT          reduce using rule 190 (Literal -> CompositeLit .)
    AND             reduce using rule 190 (Literal -> CompositeLit .)
    ANDNOT          reduce using rule 190 (Literal -> CompositeLit .)
    PLUS            reduce using rule 190 (Literal -> CompositeLit .)
    MINUS           reduce using rule 190 (Literal -> CompositeLit .)
    OR              reduce using rule 190 (Literal -> CompositeLit .)
    XOR             reduce using rule 190 (Literal -> CompositeLit .)
    LT              reduce using rule 190 (Literal -> CompositeLit .)
    GT              reduce using rule 190 (Literal -> CompositeLit .)
    LE              reduce using rule 190 (Literal -> CompositeLit .)
    GE              reduce using rule 190 (Literal -> CompositeLit .)
    EQ              reduce using rule 190 (Literal -> CompositeLit .)
    NE              reduce using rule 190 (Literal -> CompositeLit .)
    LAND            reduce using rule 190 (Literal -> CompositeLit .)
    INCR            reduce using rule 190 (Literal -> CompositeLit .)
    DECR            reduce using rule 190 (Literal -> CompositeLit .)
    COMMA           reduce using rule 190 (Literal -> CompositeLit .)
    LOR             reduce using rule 190 (Literal -> CompositeLit .)
    newline         reduce using rule 190 (Literal -> CompositeLit .)
    SEMI            reduce using rule 190 (Literal -> CompositeLit .)
    RBRACE          reduce using rule 190 (Literal -> CompositeLit .)
    EQUALS          reduce using rule 190 (Literal -> CompositeLit .)
    TIMESEQUAL      reduce using rule 190 (Literal -> CompositeLit .)
    DIVEQUAL        reduce using rule 190 (Literal -> CompositeLit .)
    MODEQUAL        reduce using rule 190 (Literal -> CompositeLit .)
    PLUSEQUAL       reduce using rule 190 (Literal -> CompositeLit .)
    MINUSEQUAL      reduce using rule 190 (Literal -> CompositeLit .)
    LSHIFTEQUAL     reduce using rule 190 (Literal -> CompositeLit .)
    RSHIFTEQUAL     reduce using rule 190 (Literal -> CompositeLit .)
    ANDEQUAL        reduce using rule 190 (Literal -> CompositeLit .)
    OREQUAL         reduce using rule 190 (Literal -> CompositeLit .)
    XOREQUAL        reduce using rule 190 (Literal -> CompositeLit .)
    CASE            reduce using rule 190 (Literal -> CompositeLit .)
    DEFAULT         reduce using rule 190 (Literal -> CompositeLit .)
    $end            reduce using rule 190 (Literal -> CompositeLit .)
    LBRACE          reduce using rule 190 (Literal -> CompositeLit .)
    RPAREN          reduce using rule 190 (Literal -> CompositeLit .)
    RBRACKET        reduce using rule 190 (Literal -> CompositeLit .)
    COLON           reduce using rule 190 (Literal -> CompositeLit .)


state 166

    (181) UnaryOp -> LNOT .

    newline         reduce using rule 181 (UnaryOp -> LNOT .)
    LPAREN          reduce using rule 181 (UnaryOp -> LNOT .)
    PLUS            reduce using rule 181 (UnaryOp -> LNOT .)
    MINUS           reduce using rule 181 (UnaryOp -> LNOT .)
    LNOT            reduce using rule 181 (UnaryOp -> LNOT .)
    TIMES           reduce using rule 181 (UnaryOp -> LNOT .)
    AND             reduce using rule 181 (UnaryOp -> LNOT .)
    ID              reduce using rule 181 (UnaryOp -> LNOT .)
    INTEGER         reduce using rule 181 (UnaryOp -> LNOT .)
    FLOAT           reduce using rule 181 (UnaryOp -> LNOT .)
    STRINGVAL       reduce using rule 181 (UnaryOp -> LNOT .)
    CHARACTER       reduce using rule 181 (UnaryOp -> LNOT .)
    LBRACKET        reduce using rule 181 (UnaryOp -> LNOT .)
    STRUCT          reduce using rule 181 (UnaryOp -> LNOT .)


state 167

    (191) BasicLit -> intLit .

    TIMES           reduce using rule 191 (BasicLit -> intLit .)
    DIVIDE          reduce using rule 191 (BasicLit -> intLit .)
    MODULO          reduce using rule 191 (BasicLit -> intLit .)
    LSHIFT          reduce using rule 191 (BasicLit -> intLit .)
    RSHIFT          reduce using rule 191 (BasicLit -> intLit .)
    AND             reduce using rule 191 (BasicLit -> intLit .)
    ANDNOT          reduce using rule 191 (BasicLit -> intLit .)
    PLUS            reduce using rule 191 (BasicLit -> intLit .)
    MINUS           reduce using rule 191 (BasicLit -> intLit .)
    OR              reduce using rule 191 (BasicLit -> intLit .)
    XOR             reduce using rule 191 (BasicLit -> intLit .)
    LT              reduce using rule 191 (BasicLit -> intLit .)
    GT              reduce using rule 191 (BasicLit -> intLit .)
    LE              reduce using rule 191 (BasicLit -> intLit .)
    GE              reduce using rule 191 (BasicLit -> intLit .)
    EQ              reduce using rule 191 (BasicLit -> intLit .)
    NE              reduce using rule 191 (BasicLit -> intLit .)
    LAND            reduce using rule 191 (BasicLit -> intLit .)
    INCR            reduce using rule 191 (BasicLit -> intLit .)
    DECR            reduce using rule 191 (BasicLit -> intLit .)
    COMMA           reduce using rule 191 (BasicLit -> intLit .)
    LOR             reduce using rule 191 (BasicLit -> intLit .)
    newline         reduce using rule 191 (BasicLit -> intLit .)
    SEMI            reduce using rule 191 (BasicLit -> intLit .)
    RBRACE          reduce using rule 191 (BasicLit -> intLit .)
    EQUALS          reduce using rule 191 (BasicLit -> intLit .)
    TIMESEQUAL      reduce using rule 191 (BasicLit -> intLit .)
    DIVEQUAL        reduce using rule 191 (BasicLit -> intLit .)
    MODEQUAL        reduce using rule 191 (BasicLit -> intLit .)
    PLUSEQUAL       reduce using rule 191 (BasicLit -> intLit .)
    MINUSEQUAL      reduce using rule 191 (BasicLit -> intLit .)
    LSHIFTEQUAL     reduce using rule 191 (BasicLit -> intLit .)
    RSHIFTEQUAL     reduce using rule 191 (BasicLit -> intLit .)
    ANDEQUAL        reduce using rule 191 (BasicLit -> intLit .)
    OREQUAL         reduce using rule 191 (BasicLit -> intLit .)
    XOREQUAL        reduce using rule 191 (BasicLit -> intLit .)
    CASE            reduce using rule 191 (BasicLit -> intLit .)
    DEFAULT         reduce using rule 191 (BasicLit -> intLit .)
    $end            reduce using rule 191 (BasicLit -> intLit .)
    LBRACE          reduce using rule 191 (BasicLit -> intLit .)
    RPAREN          reduce using rule 191 (BasicLit -> intLit .)
    RBRACKET        reduce using rule 191 (BasicLit -> intLit .)
    COLON           reduce using rule 191 (BasicLit -> intLit .)


state 168

    (192) BasicLit -> floatLit .

    TIMES           reduce using rule 192 (BasicLit -> floatLit .)
    DIVIDE          reduce using rule 192 (BasicLit -> floatLit .)
    MODULO          reduce using rule 192 (BasicLit -> floatLit .)
    LSHIFT          reduce using rule 192 (BasicLit -> floatLit .)
    RSHIFT          reduce using rule 192 (BasicLit -> floatLit .)
    AND             reduce using rule 192 (BasicLit -> floatLit .)
    ANDNOT          reduce using rule 192 (BasicLit -> floatLit .)
    PLUS            reduce using rule 192 (BasicLit -> floatLit .)
    MINUS           reduce using rule 192 (BasicLit -> floatLit .)
    OR              reduce using rule 192 (BasicLit -> floatLit .)
    XOR             reduce using rule 192 (BasicLit -> floatLit .)
    LT              reduce using rule 192 (BasicLit -> floatLit .)
    GT              reduce using rule 192 (BasicLit -> floatLit .)
    LE              reduce using rule 192 (BasicLit -> floatLit .)
    GE              reduce using rule 192 (BasicLit -> floatLit .)
    EQ              reduce using rule 192 (BasicLit -> floatLit .)
    NE              reduce using rule 192 (BasicLit -> floatLit .)
    LAND            reduce using rule 192 (BasicLit -> floatLit .)
    INCR            reduce using rule 192 (BasicLit -> floatLit .)
    DECR            reduce using rule 192 (BasicLit -> floatLit .)
    COMMA           reduce using rule 192 (BasicLit -> floatLit .)
    LOR             reduce using rule 192 (BasicLit -> floatLit .)
    newline         reduce using rule 192 (BasicLit -> floatLit .)
    SEMI            reduce using rule 192 (BasicLit -> floatLit .)
    RBRACE          reduce using rule 192 (BasicLit -> floatLit .)
    EQUALS          reduce using rule 192 (BasicLit -> floatLit .)
    TIMESEQUAL      reduce using rule 192 (BasicLit -> floatLit .)
    DIVEQUAL        reduce using rule 192 (BasicLit -> floatLit .)
    MODEQUAL        reduce using rule 192 (BasicLit -> floatLit .)
    PLUSEQUAL       reduce using rule 192 (BasicLit -> floatLit .)
    MINUSEQUAL      reduce using rule 192 (BasicLit -> floatLit .)
    LSHIFTEQUAL     reduce using rule 192 (BasicLit -> floatLit .)
    RSHIFTEQUAL     reduce using rule 192 (BasicLit -> floatLit .)
    ANDEQUAL        reduce using rule 192 (BasicLit -> floatLit .)
    OREQUAL         reduce using rule 192 (BasicLit -> floatLit .)
    XOREQUAL        reduce using rule 192 (BasicLit -> floatLit .)
    CASE            reduce using rule 192 (BasicLit -> floatLit .)
    DEFAULT         reduce using rule 192 (BasicLit -> floatLit .)
    $end            reduce using rule 192 (BasicLit -> floatLit .)
    LBRACE          reduce using rule 192 (BasicLit -> floatLit .)
    RPAREN          reduce using rule 192 (BasicLit -> floatLit .)
    RBRACKET        reduce using rule 192 (BasicLit -> floatLit .)
    COLON           reduce using rule 192 (BasicLit -> floatLit .)


state 169

    (193) BasicLit -> stringLit .

    TIMES           reduce using rule 193 (BasicLit -> stringLit .)
    DIVIDE          reduce using rule 193 (BasicLit -> stringLit .)
    MODULO          reduce using rule 193 (BasicLit -> stringLit .)
    LSHIFT          reduce using rule 193 (BasicLit -> stringLit .)
    RSHIFT          reduce using rule 193 (BasicLit -> stringLit .)
    AND             reduce using rule 193 (BasicLit -> stringLit .)
    ANDNOT          reduce using rule 193 (BasicLit -> stringLit .)
    PLUS            reduce using rule 193 (BasicLit -> stringLit .)
    MINUS           reduce using rule 193 (BasicLit -> stringLit .)
    OR              reduce using rule 193 (BasicLit -> stringLit .)
    XOR             reduce using rule 193 (BasicLit -> stringLit .)
    LT              reduce using rule 193 (BasicLit -> stringLit .)
    GT              reduce using rule 193 (BasicLit -> stringLit .)
    LE              reduce using rule 193 (BasicLit -> stringLit .)
    GE              reduce using rule 193 (BasicLit -> stringLit .)
    EQ              reduce using rule 193 (BasicLit -> stringLit .)
    NE              reduce using rule 193 (BasicLit -> stringLit .)
    LAND            reduce using rule 193 (BasicLit -> stringLit .)
    INCR            reduce using rule 193 (BasicLit -> stringLit .)
    DECR            reduce using rule 193 (BasicLit -> stringLit .)
    COMMA           reduce using rule 193 (BasicLit -> stringLit .)
    LOR             reduce using rule 193 (BasicLit -> stringLit .)
    newline         reduce using rule 193 (BasicLit -> stringLit .)
    SEMI            reduce using rule 193 (BasicLit -> stringLit .)
    RBRACE          reduce using rule 193 (BasicLit -> stringLit .)
    EQUALS          reduce using rule 193 (BasicLit -> stringLit .)
    TIMESEQUAL      reduce using rule 193 (BasicLit -> stringLit .)
    DIVEQUAL        reduce using rule 193 (BasicLit -> stringLit .)
    MODEQUAL        reduce using rule 193 (BasicLit -> stringLit .)
    PLUSEQUAL       reduce using rule 193 (BasicLit -> stringLit .)
    MINUSEQUAL      reduce using rule 193 (BasicLit -> stringLit .)
    LSHIFTEQUAL     reduce using rule 193 (BasicLit -> stringLit .)
    RSHIFTEQUAL     reduce using rule 193 (BasicLit -> stringLit .)
    ANDEQUAL        reduce using rule 193 (BasicLit -> stringLit .)
    OREQUAL         reduce using rule 193 (BasicLit -> stringLit .)
    XOREQUAL        reduce using rule 193 (BasicLit -> stringLit .)
    CASE            reduce using rule 193 (BasicLit -> stringLit .)
    DEFAULT         reduce using rule 193 (BasicLit -> stringLit .)
    $end            reduce using rule 193 (BasicLit -> stringLit .)
    LBRACE          reduce using rule 193 (BasicLit -> stringLit .)
    RPAREN          reduce using rule 193 (BasicLit -> stringLit .)
    RBRACKET        reduce using rule 193 (BasicLit -> stringLit .)
    COLON           reduce using rule 193 (BasicLit -> stringLit .)


state 170

    (198) CompositeLit -> LiteralType . LiteralValue
    (236) LiteralValue -> . LBRACE RepeatNewline RBRACE
    (237) LiteralValue -> . LBRACE RepeatNewline ElementList RBRACE

    LBRACE          shift and go to state 262

    LiteralValue                   shift and go to state 261

state 171

    (194) intLit -> INTEGER .

    TIMES           reduce using rule 194 (intLit -> INTEGER .)
    DIVIDE          reduce using rule 194 (intLit -> INTEGER .)
    MODULO          reduce using rule 194 (intLit -> INTEGER .)
    LSHIFT          reduce using rule 194 (intLit -> INTEGER .)
    RSHIFT          reduce using rule 194 (intLit -> INTEGER .)
    AND             reduce using rule 194 (intLit -> INTEGER .)
    ANDNOT          reduce using rule 194 (intLit -> INTEGER .)
    PLUS            reduce using rule 194 (intLit -> INTEGER .)
    MINUS           reduce using rule 194 (intLit -> INTEGER .)
    OR              reduce using rule 194 (intLit -> INTEGER .)
    XOR             reduce using rule 194 (intLit -> INTEGER .)
    LT              reduce using rule 194 (intLit -> INTEGER .)
    GT              reduce using rule 194 (intLit -> INTEGER .)
    LE              reduce using rule 194 (intLit -> INTEGER .)
    GE              reduce using rule 194 (intLit -> INTEGER .)
    EQ              reduce using rule 194 (intLit -> INTEGER .)
    NE              reduce using rule 194 (intLit -> INTEGER .)
    LAND            reduce using rule 194 (intLit -> INTEGER .)
    INCR            reduce using rule 194 (intLit -> INTEGER .)
    DECR            reduce using rule 194 (intLit -> INTEGER .)
    COMMA           reduce using rule 194 (intLit -> INTEGER .)
    LOR             reduce using rule 194 (intLit -> INTEGER .)
    newline         reduce using rule 194 (intLit -> INTEGER .)
    SEMI            reduce using rule 194 (intLit -> INTEGER .)
    RBRACE          reduce using rule 194 (intLit -> INTEGER .)
    EQUALS          reduce using rule 194 (intLit -> INTEGER .)
    TIMESEQUAL      reduce using rule 194 (intLit -> INTEGER .)
    DIVEQUAL        reduce using rule 194 (intLit -> INTEGER .)
    MODEQUAL        reduce using rule 194 (intLit -> INTEGER .)
    PLUSEQUAL       reduce using rule 194 (intLit -> INTEGER .)
    MINUSEQUAL      reduce using rule 194 (intLit -> INTEGER .)
    LSHIFTEQUAL     reduce using rule 194 (intLit -> INTEGER .)
    RSHIFTEQUAL     reduce using rule 194 (intLit -> INTEGER .)
    ANDEQUAL        reduce using rule 194 (intLit -> INTEGER .)
    OREQUAL         reduce using rule 194 (intLit -> INTEGER .)
    XOREQUAL        reduce using rule 194 (intLit -> INTEGER .)
    CASE            reduce using rule 194 (intLit -> INTEGER .)
    DEFAULT         reduce using rule 194 (intLit -> INTEGER .)
    $end            reduce using rule 194 (intLit -> INTEGER .)
    LBRACE          reduce using rule 194 (intLit -> INTEGER .)
    RPAREN          reduce using rule 194 (intLit -> INTEGER .)
    RBRACKET        reduce using rule 194 (intLit -> INTEGER .)
    COLON           reduce using rule 194 (intLit -> INTEGER .)


state 172

    (195) floatLit -> FLOAT .

    TIMES           reduce using rule 195 (floatLit -> FLOAT .)
    DIVIDE          reduce using rule 195 (floatLit -> FLOAT .)
    MODULO          reduce using rule 195 (floatLit -> FLOAT .)
    LSHIFT          reduce using rule 195 (floatLit -> FLOAT .)
    RSHIFT          reduce using rule 195 (floatLit -> FLOAT .)
    AND             reduce using rule 195 (floatLit -> FLOAT .)
    ANDNOT          reduce using rule 195 (floatLit -> FLOAT .)
    PLUS            reduce using rule 195 (floatLit -> FLOAT .)
    MINUS           reduce using rule 195 (floatLit -> FLOAT .)
    OR              reduce using rule 195 (floatLit -> FLOAT .)
    XOR             reduce using rule 195 (floatLit -> FLOAT .)
    LT              reduce using rule 195 (floatLit -> FLOAT .)
    GT              reduce using rule 195 (floatLit -> FLOAT .)
    LE              reduce using rule 195 (floatLit -> FLOAT .)
    GE              reduce using rule 195 (floatLit -> FLOAT .)
    EQ              reduce using rule 195 (floatLit -> FLOAT .)
    NE              reduce using rule 195 (floatLit -> FLOAT .)
    LAND            reduce using rule 195 (floatLit -> FLOAT .)
    INCR            reduce using rule 195 (floatLit -> FLOAT .)
    DECR            reduce using rule 195 (floatLit -> FLOAT .)
    COMMA           reduce using rule 195 (floatLit -> FLOAT .)
    LOR             reduce using rule 195 (floatLit -> FLOAT .)
    newline         reduce using rule 195 (floatLit -> FLOAT .)
    SEMI            reduce using rule 195 (floatLit -> FLOAT .)
    RBRACE          reduce using rule 195 (floatLit -> FLOAT .)
    EQUALS          reduce using rule 195 (floatLit -> FLOAT .)
    TIMESEQUAL      reduce using rule 195 (floatLit -> FLOAT .)
    DIVEQUAL        reduce using rule 195 (floatLit -> FLOAT .)
    MODEQUAL        reduce using rule 195 (floatLit -> FLOAT .)
    PLUSEQUAL       reduce using rule 195 (floatLit -> FLOAT .)
    MINUSEQUAL      reduce using rule 195 (floatLit -> FLOAT .)
    LSHIFTEQUAL     reduce using rule 195 (floatLit -> FLOAT .)
    RSHIFTEQUAL     reduce using rule 195 (floatLit -> FLOAT .)
    ANDEQUAL        reduce using rule 195 (floatLit -> FLOAT .)
    OREQUAL         reduce using rule 195 (floatLit -> FLOAT .)
    XOREQUAL        reduce using rule 195 (floatLit -> FLOAT .)
    CASE            reduce using rule 195 (floatLit -> FLOAT .)
    DEFAULT         reduce using rule 195 (floatLit -> FLOAT .)
    $end            reduce using rule 195 (floatLit -> FLOAT .)
    LBRACE          reduce using rule 195 (floatLit -> FLOAT .)
    RPAREN          reduce using rule 195 (floatLit -> FLOAT .)
    RBRACKET        reduce using rule 195 (floatLit -> FLOAT .)
    COLON           reduce using rule 195 (floatLit -> FLOAT .)


state 173

    (196) stringLit -> STRINGVAL .

    TIMES           reduce using rule 196 (stringLit -> STRINGVAL .)
    DIVIDE          reduce using rule 196 (stringLit -> STRINGVAL .)
    MODULO          reduce using rule 196 (stringLit -> STRINGVAL .)
    LSHIFT          reduce using rule 196 (stringLit -> STRINGVAL .)
    RSHIFT          reduce using rule 196 (stringLit -> STRINGVAL .)
    AND             reduce using rule 196 (stringLit -> STRINGVAL .)
    ANDNOT          reduce using rule 196 (stringLit -> STRINGVAL .)
    PLUS            reduce using rule 196 (stringLit -> STRINGVAL .)
    MINUS           reduce using rule 196 (stringLit -> STRINGVAL .)
    OR              reduce using rule 196 (stringLit -> STRINGVAL .)
    XOR             reduce using rule 196 (stringLit -> STRINGVAL .)
    LT              reduce using rule 196 (stringLit -> STRINGVAL .)
    GT              reduce using rule 196 (stringLit -> STRINGVAL .)
    LE              reduce using rule 196 (stringLit -> STRINGVAL .)
    GE              reduce using rule 196 (stringLit -> STRINGVAL .)
    EQ              reduce using rule 196 (stringLit -> STRINGVAL .)
    NE              reduce using rule 196 (stringLit -> STRINGVAL .)
    LAND            reduce using rule 196 (stringLit -> STRINGVAL .)
    INCR            reduce using rule 196 (stringLit -> STRINGVAL .)
    DECR            reduce using rule 196 (stringLit -> STRINGVAL .)
    COMMA           reduce using rule 196 (stringLit -> STRINGVAL .)
    LOR             reduce using rule 196 (stringLit -> STRINGVAL .)
    newline         reduce using rule 196 (stringLit -> STRINGVAL .)
    SEMI            reduce using rule 196 (stringLit -> STRINGVAL .)
    RBRACE          reduce using rule 196 (stringLit -> STRINGVAL .)
    EQUALS          reduce using rule 196 (stringLit -> STRINGVAL .)
    TIMESEQUAL      reduce using rule 196 (stringLit -> STRINGVAL .)
    DIVEQUAL        reduce using rule 196 (stringLit -> STRINGVAL .)
    MODEQUAL        reduce using rule 196 (stringLit -> STRINGVAL .)
    PLUSEQUAL       reduce using rule 196 (stringLit -> STRINGVAL .)
    MINUSEQUAL      reduce using rule 196 (stringLit -> STRINGVAL .)
    LSHIFTEQUAL     reduce using rule 196 (stringLit -> STRINGVAL .)
    RSHIFTEQUAL     reduce using rule 196 (stringLit -> STRINGVAL .)
    ANDEQUAL        reduce using rule 196 (stringLit -> STRINGVAL .)
    OREQUAL         reduce using rule 196 (stringLit -> STRINGVAL .)
    XOREQUAL        reduce using rule 196 (stringLit -> STRINGVAL .)
    CASE            reduce using rule 196 (stringLit -> STRINGVAL .)
    DEFAULT         reduce using rule 196 (stringLit -> STRINGVAL .)
    $end            reduce using rule 196 (stringLit -> STRINGVAL .)
    LBRACE          reduce using rule 196 (stringLit -> STRINGVAL .)
    RPAREN          reduce using rule 196 (stringLit -> STRINGVAL .)
    RBRACKET        reduce using rule 196 (stringLit -> STRINGVAL .)
    COLON           reduce using rule 196 (stringLit -> STRINGVAL .)


state 174

    (197) stringLit -> CHARACTER .

    TIMES           reduce using rule 197 (stringLit -> CHARACTER .)
    DIVIDE          reduce using rule 197 (stringLit -> CHARACTER .)
    MODULO          reduce using rule 197 (stringLit -> CHARACTER .)
    LSHIFT          reduce using rule 197 (stringLit -> CHARACTER .)
    RSHIFT          reduce using rule 197 (stringLit -> CHARACTER .)
    AND             reduce using rule 197 (stringLit -> CHARACTER .)
    ANDNOT          reduce using rule 197 (stringLit -> CHARACTER .)
    PLUS            reduce using rule 197 (stringLit -> CHARACTER .)
    MINUS           reduce using rule 197 (stringLit -> CHARACTER .)
    OR              reduce using rule 197 (stringLit -> CHARACTER .)
    XOR             reduce using rule 197 (stringLit -> CHARACTER .)
    LT              reduce using rule 197 (stringLit -> CHARACTER .)
    GT              reduce using rule 197 (stringLit -> CHARACTER .)
    LE              reduce using rule 197 (stringLit -> CHARACTER .)
    GE              reduce using rule 197 (stringLit -> CHARACTER .)
    EQ              reduce using rule 197 (stringLit -> CHARACTER .)
    NE              reduce using rule 197 (stringLit -> CHARACTER .)
    LAND            reduce using rule 197 (stringLit -> CHARACTER .)
    INCR            reduce using rule 197 (stringLit -> CHARACTER .)
    DECR            reduce using rule 197 (stringLit -> CHARACTER .)
    COMMA           reduce using rule 197 (stringLit -> CHARACTER .)
    LOR             reduce using rule 197 (stringLit -> CHARACTER .)
    newline         reduce using rule 197 (stringLit -> CHARACTER .)
    SEMI            reduce using rule 197 (stringLit -> CHARACTER .)
    RBRACE          reduce using rule 197 (stringLit -> CHARACTER .)
    EQUALS          reduce using rule 197 (stringLit -> CHARACTER .)
    TIMESEQUAL      reduce using rule 197 (stringLit -> CHARACTER .)
    DIVEQUAL        reduce using rule 197 (stringLit -> CHARACTER .)
    MODEQUAL        reduce using rule 197 (stringLit -> CHARACTER .)
    PLUSEQUAL       reduce using rule 197 (stringLit -> CHARACTER .)
    MINUSEQUAL      reduce using rule 197 (stringLit -> CHARACTER .)
    LSHIFTEQUAL     reduce using rule 197 (stringLit -> CHARACTER .)
    RSHIFTEQUAL     reduce using rule 197 (stringLit -> CHARACTER .)
    ANDEQUAL        reduce using rule 197 (stringLit -> CHARACTER .)
    OREQUAL         reduce using rule 197 (stringLit -> CHARACTER .)
    XOREQUAL        reduce using rule 197 (stringLit -> CHARACTER .)
    CASE            reduce using rule 197 (stringLit -> CHARACTER .)
    DEFAULT         reduce using rule 197 (stringLit -> CHARACTER .)
    $end            reduce using rule 197 (stringLit -> CHARACTER .)
    LBRACE          reduce using rule 197 (stringLit -> CHARACTER .)
    RPAREN          reduce using rule 197 (stringLit -> CHARACTER .)
    RBRACKET        reduce using rule 197 (stringLit -> CHARACTER .)
    COLON           reduce using rule 197 (stringLit -> CHARACTER .)


state 175

    (199) LiteralType -> ArrayType .

    LBRACE          reduce using rule 199 (LiteralType -> ArrayType .)


state 176

    (200) LiteralType -> StructType .

    LBRACE          reduce using rule 200 (LiteralType -> StructType .)


state 177

    (201) LiteralType -> SliceType .

    LBRACE          reduce using rule 201 (LiteralType -> SliceType .)


state 178

    (44) ConstSpec -> IdentifierList Types EQUALS . ExpressionList
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    ExpressionList                 shift and go to state 263
    Expression                     shift and go to state 196
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 179

    (250) IdentifierList -> IdentifierList COMMA RepeatNewline . ID

    ID              shift and go to state 264


state 180

    (228) StructType -> STRUCT M . RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    LBRACE          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 265
    empty                          shift and go to state 5

state 181

    (229) M -> empty .

    newline         reduce using rule 229 (M -> empty .)
    LBRACE          reduce using rule 229 (M -> empty .)


state 182

    (234) ArrayType -> LBRACKET RepeatNewline . ArrayLength RBRACKET Types
    (235) ArrayLength -> . INTEGER

    INTEGER         shift and go to state 267

    ArrayLength                    shift and go to state 266

state 183

    (226) SliceType -> LBRACKET RBRACKET . Types
    (219) Types -> . Mytypes
    (220) Types -> . TypeLit
    (221) Types -> . OperandName
    (202) Mytypes -> . BOOL
    (203) Mytypes -> . BYTE
    (204) Mytypes -> . INT
    (205) Mytypes -> . UINT8
    (206) Mytypes -> . UINT16
    (207) Mytypes -> . UINT32
    (208) Mytypes -> . UINT64
    (209) Mytypes -> . INT8
    (210) Mytypes -> . INT16
    (211) Mytypes -> . INT32
    (212) Mytypes -> . INT64
    (213) Mytypes -> . UINT
    (214) Mytypes -> . FLOAT32
    (215) Mytypes -> . FLOAT64
    (216) Mytypes -> . UINTPTR
    (217) Mytypes -> . STRING
    (218) Mytypes -> . ERROR
    (222) TypeLit -> . StructType
    (223) TypeLit -> . ArrayType
    (224) TypeLit -> . PointerType
    (225) TypeLit -> . SliceType
    (243) OperandName -> . ID
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (227) PointerType -> . TIMES Types
    (226) SliceType -> . LBRACKET RBRACKET Types

    BOOL            shift and go to state 64
    BYTE            shift and go to state 65
    INT             shift and go to state 66
    UINT8           shift and go to state 67
    UINT16          shift and go to state 68
    UINT32          shift and go to state 69
    UINT64          shift and go to state 70
    INT8            shift and go to state 71
    INT16           shift and go to state 72
    INT32           shift and go to state 73
    INT64           shift and go to state 74
    UINT            shift and go to state 75
    FLOAT32         shift and go to state 76
    FLOAT64         shift and go to state 77
    UINTPTR         shift and go to state 78
    STRING          shift and go to state 79
    ERROR           shift and go to state 80
    ID              shift and go to state 60
    STRUCT          shift and go to state 85
    LBRACKET        shift and go to state 86
    TIMES           shift and go to state 87

    Types                          shift and go to state 268
    Mytypes                        shift and go to state 61
    TypeLit                        shift and go to state 62
    OperandName                    shift and go to state 63
    StructType                     shift and go to state 81
    ArrayType                      shift and go to state 82
    PointerType                    shift and go to state 83
    SliceType                      shift and go to state 84

state 184

    (227) PointerType -> TIMES Types .

    EQUALS          reduce using rule 227 (PointerType -> TIMES Types .)
    newline         reduce using rule 227 (PointerType -> TIMES Types .)
    SEMI            reduce using rule 227 (PointerType -> TIMES Types .)
    $end            reduce using rule 227 (PointerType -> TIMES Types .)
    RBRACE          reduce using rule 227 (PointerType -> TIMES Types .)
    CASE            reduce using rule 227 (PointerType -> TIMES Types .)
    DEFAULT         reduce using rule 227 (PointerType -> TIMES Types .)
    LBRACE          reduce using rule 227 (PointerType -> TIMES Types .)
    COMMA           reduce using rule 227 (PointerType -> TIMES Types .)
    RPAREN          reduce using rule 227 (PointerType -> TIMES Types .)


state 185

    (47) TypeDef -> ID K . Types
    (219) Types -> . Mytypes
    (220) Types -> . TypeLit
    (221) Types -> . OperandName
    (202) Mytypes -> . BOOL
    (203) Mytypes -> . BYTE
    (204) Mytypes -> . INT
    (205) Mytypes -> . UINT8
    (206) Mytypes -> . UINT16
    (207) Mytypes -> . UINT32
    (208) Mytypes -> . UINT64
    (209) Mytypes -> . INT8
    (210) Mytypes -> . INT16
    (211) Mytypes -> . INT32
    (212) Mytypes -> . INT64
    (213) Mytypes -> . UINT
    (214) Mytypes -> . FLOAT32
    (215) Mytypes -> . FLOAT64
    (216) Mytypes -> . UINTPTR
    (217) Mytypes -> . STRING
    (218) Mytypes -> . ERROR
    (222) TypeLit -> . StructType
    (223) TypeLit -> . ArrayType
    (224) TypeLit -> . PointerType
    (225) TypeLit -> . SliceType
    (243) OperandName -> . ID
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (227) PointerType -> . TIMES Types
    (226) SliceType -> . LBRACKET RBRACKET Types

    BOOL            shift and go to state 64
    BYTE            shift and go to state 65
    INT             shift and go to state 66
    UINT8           shift and go to state 67
    UINT16          shift and go to state 68
    UINT32          shift and go to state 69
    UINT64          shift and go to state 70
    INT8            shift and go to state 71
    INT16           shift and go to state 72
    INT32           shift and go to state 73
    INT64           shift and go to state 74
    UINT            shift and go to state 75
    FLOAT32         shift and go to state 76
    FLOAT64         shift and go to state 77
    UINTPTR         shift and go to state 78
    STRING          shift and go to state 79
    ERROR           shift and go to state 80
    ID              shift and go to state 60
    STRUCT          shift and go to state 85
    LBRACKET        shift and go to state 86
    TIMES           shift and go to state 87

    Types                          shift and go to state 269
    Mytypes                        shift and go to state 61
    TypeLit                        shift and go to state 62
    OperandName                    shift and go to state 63
    StructType                     shift and go to state 81
    ArrayType                      shift and go to state 82
    PointerType                    shift and go to state 83
    SliceType                      shift and go to state 84

state 186

    (48) K -> empty .

    BOOL            reduce using rule 48 (K -> empty .)
    BYTE            reduce using rule 48 (K -> empty .)
    INT             reduce using rule 48 (K -> empty .)
    UINT8           reduce using rule 48 (K -> empty .)
    UINT16          reduce using rule 48 (K -> empty .)
    UINT32          reduce using rule 48 (K -> empty .)
    UINT64          reduce using rule 48 (K -> empty .)
    INT8            reduce using rule 48 (K -> empty .)
    INT16           reduce using rule 48 (K -> empty .)
    INT32           reduce using rule 48 (K -> empty .)
    INT64           reduce using rule 48 (K -> empty .)
    UINT            reduce using rule 48 (K -> empty .)
    FLOAT32         reduce using rule 48 (K -> empty .)
    FLOAT64         reduce using rule 48 (K -> empty .)
    UINTPTR         reduce using rule 48 (K -> empty .)
    STRING          reduce using rule 48 (K -> empty .)
    ERROR           reduce using rule 48 (K -> empty .)
    ID              reduce using rule 48 (K -> empty .)
    STRUCT          reduce using rule 48 (K -> empty .)
    LBRACKET        reduce using rule 48 (K -> empty .)
    TIMES           reduce using rule 48 (K -> empty .)


state 187

    (50) VarSpec -> IdentifierList Types .
    (51) VarSpec -> IdentifierList Types . EQUALS RepeatNewline ExpressionList

    newline         reduce using rule 50 (VarSpec -> IdentifierList Types .)
    SEMI            reduce using rule 50 (VarSpec -> IdentifierList Types .)
    $end            reduce using rule 50 (VarSpec -> IdentifierList Types .)
    RBRACE          reduce using rule 50 (VarSpec -> IdentifierList Types .)
    CASE            reduce using rule 50 (VarSpec -> IdentifierList Types .)
    DEFAULT         reduce using rule 50 (VarSpec -> IdentifierList Types .)
    EQUALS          shift and go to state 270


state 188

    (54) FunctionMarker -> FUNC RepeatNewline FunctionName Signature .

    LBRACE          reduce using rule 54 (FunctionMarker -> FUNC RepeatNewline FunctionName Signature .)
    newline         reduce using rule 54 (FunctionMarker -> FUNC RepeatNewline FunctionName Signature .)
    SEMI            reduce using rule 54 (FunctionMarker -> FUNC RepeatNewline FunctionName Signature .)
    $end            reduce using rule 54 (FunctionMarker -> FUNC RepeatNewline FunctionName Signature .)


state 189

    (56) Signature -> Parameters .
    (57) Signature -> Parameters . Result
    (65) Result -> . Types
    (219) Types -> . Mytypes
    (220) Types -> . TypeLit
    (221) Types -> . OperandName
    (202) Mytypes -> . BOOL
    (203) Mytypes -> . BYTE
    (204) Mytypes -> . INT
    (205) Mytypes -> . UINT8
    (206) Mytypes -> . UINT16
    (207) Mytypes -> . UINT32
    (208) Mytypes -> . UINT64
    (209) Mytypes -> . INT8
    (210) Mytypes -> . INT16
    (211) Mytypes -> . INT32
    (212) Mytypes -> . INT64
    (213) Mytypes -> . UINT
    (214) Mytypes -> . FLOAT32
    (215) Mytypes -> . FLOAT64
    (216) Mytypes -> . UINTPTR
    (217) Mytypes -> . STRING
    (218) Mytypes -> . ERROR
    (222) TypeLit -> . StructType
    (223) TypeLit -> . ArrayType
    (224) TypeLit -> . PointerType
    (225) TypeLit -> . SliceType
    (243) OperandName -> . ID
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (227) PointerType -> . TIMES Types
    (226) SliceType -> . LBRACKET RBRACKET Types

    LBRACE          reduce using rule 56 (Signature -> Parameters .)
    newline         reduce using rule 56 (Signature -> Parameters .)
    SEMI            reduce using rule 56 (Signature -> Parameters .)
    $end            reduce using rule 56 (Signature -> Parameters .)
    BOOL            shift and go to state 64
    BYTE            shift and go to state 65
    INT             shift and go to state 66
    UINT8           shift and go to state 67
    UINT16          shift and go to state 68
    UINT32          shift and go to state 69
    UINT64          shift and go to state 70
    INT8            shift and go to state 71
    INT16           shift and go to state 72
    INT32           shift and go to state 73
    INT64           shift and go to state 74
    UINT            shift and go to state 75
    FLOAT32         shift and go to state 76
    FLOAT64         shift and go to state 77
    UINTPTR         shift and go to state 78
    STRING          shift and go to state 79
    ERROR           shift and go to state 80
    ID              shift and go to state 60
    STRUCT          shift and go to state 85
    LBRACKET        shift and go to state 86
    TIMES           shift and go to state 87

    Result                         shift and go to state 271
    Types                          shift and go to state 272
    Mytypes                        shift and go to state 61
    TypeLit                        shift and go to state 62
    OperandName                    shift and go to state 63
    StructType                     shift and go to state 81
    ArrayType                      shift and go to state 82
    PointerType                    shift and go to state 83
    SliceType                      shift and go to state 84

state 190

    (58) Parameters -> LPAREN . RepeatNewline RPAREN
    (59) Parameters -> LPAREN . RepeatNewline ParameterList RPAREN
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    RPAREN          reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    BOOL            reduce using rule 258 (empty -> .)
    BYTE            reduce using rule 258 (empty -> .)
    INT             reduce using rule 258 (empty -> .)
    UINT8           reduce using rule 258 (empty -> .)
    UINT16          reduce using rule 258 (empty -> .)
    UINT32          reduce using rule 258 (empty -> .)
    UINT64          reduce using rule 258 (empty -> .)
    INT8            reduce using rule 258 (empty -> .)
    INT16           reduce using rule 258 (empty -> .)
    INT32           reduce using rule 258 (empty -> .)
    INT64           reduce using rule 258 (empty -> .)
    UINT            reduce using rule 258 (empty -> .)
    FLOAT32         reduce using rule 258 (empty -> .)
    FLOAT64         reduce using rule 258 (empty -> .)
    UINTPTR         reduce using rule 258 (empty -> .)
    STRING          reduce using rule 258 (empty -> .)
    ERROR           reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 273
    empty                          shift and go to state 5

state 191

    (10) ImportList -> Import StatementEnd ImportList .

    RPAREN          reduce using rule 10 (ImportList -> Import StatementEnd ImportList .)


state 192

    (105) Block -> LBRACE RepeatNewline StatementList RBRACE .

    newline         reduce using rule 105 (Block -> LBRACE RepeatNewline StatementList RBRACE .)
    SEMI            reduce using rule 105 (Block -> LBRACE RepeatNewline StatementList RBRACE .)
    $end            reduce using rule 105 (Block -> LBRACE RepeatNewline StatementList RBRACE .)
    RBRACE          reduce using rule 105 (Block -> LBRACE RepeatNewline StatementList RBRACE .)
    CASE            reduce using rule 105 (Block -> LBRACE RepeatNewline StatementList RBRACE .)
    DEFAULT         reduce using rule 105 (Block -> LBRACE RepeatNewline StatementList RBRACE .)
    ELSE            reduce using rule 105 (Block -> LBRACE RepeatNewline StatementList RBRACE .)


state 193

    (20) StatementList -> Statement StatementEnd . StatementList
    (20) StatementList -> . Statement StatementEnd StatementList
    (21) StatementList -> . Statement
    (22) StatementList -> . empty
    (23) Statement -> . Declaration
    (24) Statement -> . LabeledStmt
    (25) Statement -> . SimpleStmt
    (26) Statement -> . ReturnStmt
    (27) Statement -> . BreakStmt
    (28) Statement -> . ContinueStmt
    (29) Statement -> . FallthroughStmt
    (30) Statement -> . GotoStmt
    (31) Statement -> . Block
    (32) Statement -> . IfStmt
    (33) Statement -> . SwitchStmt
    (34) Statement -> . ForStmt
    (35) Statement -> . DeferStmt
    (36) Statement -> . PrintStmt
    (37) Statement -> . ScanIntStmt
    (38) Statement -> . ScanStrStmt
    (258) empty -> .
    (39) Declaration -> . ConstDecl
    (40) Declaration -> . TypeDecl
    (41) Declaration -> . VarDecl
    (67) LabeledStmt -> . Label COLON RepeatNewline Statement
    (69) SimpleStmt -> . Assignment
    (70) SimpleStmt -> . ShortVarDecl
    (71) SimpleStmt -> . IncDecStmt
    (72) SimpleStmt -> . ExpressionStmt
    (97) ReturnStmt -> . RETURN
    (98) ReturnStmt -> . RETURN ExpressionList
    (100) BreakStmt -> . BREAK
    (101) BreakStmt -> . BREAK Label
    (102) ContinueStmt -> . CONTINUE
    (103) ContinueStmt -> . CONTINUE Label
    (99) FallthroughStmt -> . FALLTHROUGH
    (104) GotoStmt -> . GOTO Label
    (105) Block -> . LBRACE RepeatNewline StatementList RBRACE
    (107) IfStmt -> . IF IfExp Block
    (108) IfStmt -> . IF IfExp Block EndIfMarker ELSE ElseMarker Block
    (109) IfStmt -> . IF IfExp Block EndIfMarker ELSE IfStmt
    (113) SwitchStmt -> . ExprSwitchStmt
    (123) ForStmt -> . FOR ForMarker RepeatNewline Block
    (124) ForStmt -> . FOR ForMarker RepeatNewline Condition Block
    (125) ForStmt -> . FOR ForMarker RepeatNewline ForClause Block
    (138) DeferStmt -> . DEFER PrimaryExpr Arguments
    (139) PrintStmt -> . PrintIntStmt
    (140) PrintStmt -> . PrintStrStmt
    (141) PrintStmt -> . PrintFloatStmt
    (145) ScanIntStmt -> . SCANINT Expression
    (146) ScanStrStmt -> . SCANSTR Expression
    (42) ConstDecl -> . CONST ConstSpec
    (45) TypeDecl -> . TYPE RepeatNewline TypeSpec
    (49) VarDecl -> . VAR RepeatNewline VarSpec
    (68) Label -> . ID
    (86) Assignment -> . ExpressionList AssignOp RepeatNewline ExpressionList
    (87) Assignment -> . ExpressionList EQUALS RepeatNewline ExpressionList
    (88) Assignment -> . ExpressionList EQUALS MallocExp
    (89) Assignment -> . ExpressionList EQUALS SinExp
    (90) Assignment -> . ExpressionList EQUALS CosExp
    (91) Assignment -> . ExpressionList EQUALS OpenFileExp
    (92) Assignment -> . ReadFileExp
    (93) Assignment -> . WriteFileExp
    (94) Assignment -> . CloseFileExp
    (95) Assignment -> . ExpressionList EQUALS NULL
    (96) ShortVarDecl -> . ID AUTOASIGN RepeatNewline Expression
    (74) IncDecStmt -> . Expression INCR
    (75) IncDecStmt -> . Expression DECR
    (73) ExpressionStmt -> . Expression
    (114) ExprSwitchStmt -> . SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE
    (142) PrintIntStmt -> . PRINTINT Expression
    (144) PrintStrStmt -> . PRINTSTR Expression
    (143) PrintFloatStmt -> . PRINTFLOAT Expression
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (253) ReadFileExp -> . READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (254) WriteFileExp -> . WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (255) CloseFileExp -> . CLOSEFILE LPAREN Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    RBRACE          reduce using rule 258 (empty -> .)
    CASE            reduce using rule 258 (empty -> .)
    DEFAULT         reduce using rule 258 (empty -> .)
    RETURN          shift and go to state 121
    BREAK           shift and go to state 123
    CONTINUE        shift and go to state 124
    FALLTHROUGH     shift and go to state 125
    GOTO            shift and go to state 126
    LBRACE          shift and go to state 47
    IF              shift and go to state 127
    FOR             shift and go to state 129
    DEFER           shift and go to state 130
    SCANINT         shift and go to state 135
    SCANSTR         shift and go to state 137
    CONST           shift and go to state 35
    TYPE            shift and go to state 36
    VAR             shift and go to state 37
    ID              shift and go to state 138
    SWITCH          shift and go to state 143
    PRINTINT        shift and go to state 144
    PRINTSTR        shift and go to state 145
    PRINTFLOAT      shift and go to state 146
    READFILE        shift and go to state 147
    WRITEFILE       shift and go to state 149
    CLOSEFILE       shift and go to state 150
    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Statement                      shift and go to state 98
    StatementList                  shift and go to state 274
    empty                          shift and go to state 99
    Declaration                    shift and go to state 100
    LabeledStmt                    shift and go to state 101
    SimpleStmt                     shift and go to state 102
    ReturnStmt                     shift and go to state 103
    BreakStmt                      shift and go to state 104
    ContinueStmt                   shift and go to state 105
    FallthroughStmt                shift and go to state 106
    GotoStmt                       shift and go to state 107
    Block                          shift and go to state 108
    IfStmt                         shift and go to state 109
    SwitchStmt                     shift and go to state 110
    ForStmt                        shift and go to state 111
    DeferStmt                      shift and go to state 112
    PrintStmt                      shift and go to state 113
    ScanIntStmt                    shift and go to state 114
    ScanStrStmt                    shift and go to state 115
    ConstDecl                      shift and go to state 31
    TypeDecl                       shift and go to state 32
    VarDecl                        shift and go to state 33
    Label                          shift and go to state 116
    Assignment                     shift and go to state 117
    ShortVarDecl                   shift and go to state 118
    IncDecStmt                     shift and go to state 119
    ExpressionStmt                 shift and go to state 120
    ExpressionList                 shift and go to state 122
    ExprSwitchStmt                 shift and go to state 128
    PrimaryExpr                    shift and go to state 131
    PrintIntStmt                   shift and go to state 132
    PrintStrStmt                   shift and go to state 133
    PrintFloatStmt                 shift and go to state 134
    Expression                     shift and go to state 136
    ReadFileExp                    shift and go to state 139
    WriteFileExp                   shift and go to state 140
    CloseFileExp                   shift and go to state 141
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 194

    (67) LabeledStmt -> Label COLON . RepeatNewline Statement
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    RETURN          reduce using rule 258 (empty -> .)
    BREAK           reduce using rule 258 (empty -> .)
    CONTINUE        reduce using rule 258 (empty -> .)
    FALLTHROUGH     reduce using rule 258 (empty -> .)
    GOTO            reduce using rule 258 (empty -> .)
    LBRACE          reduce using rule 258 (empty -> .)
    IF              reduce using rule 258 (empty -> .)
    FOR             reduce using rule 258 (empty -> .)
    DEFER           reduce using rule 258 (empty -> .)
    SCANINT         reduce using rule 258 (empty -> .)
    SCANSTR         reduce using rule 258 (empty -> .)
    CONST           reduce using rule 258 (empty -> .)
    TYPE            reduce using rule 258 (empty -> .)
    VAR             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    SWITCH          reduce using rule 258 (empty -> .)
    PRINTINT        reduce using rule 258 (empty -> .)
    PRINTSTR        reduce using rule 258 (empty -> .)
    PRINTFLOAT      reduce using rule 258 (empty -> .)
    READFILE        reduce using rule 258 (empty -> .)
    WRITEFILE       reduce using rule 258 (empty -> .)
    CLOSEFILE       reduce using rule 258 (empty -> .)
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 275
    empty                          shift and go to state 5

state 195

    (98) ReturnStmt -> RETURN ExpressionList .

    newline         reduce using rule 98 (ReturnStmt -> RETURN ExpressionList .)
    SEMI            reduce using rule 98 (ReturnStmt -> RETURN ExpressionList .)
    RBRACE          reduce using rule 98 (ReturnStmt -> RETURN ExpressionList .)
    CASE            reduce using rule 98 (ReturnStmt -> RETURN ExpressionList .)
    DEFAULT         reduce using rule 98 (ReturnStmt -> RETURN ExpressionList .)


state 196

    (147) ExpressionList -> Expression .
    (148) ExpressionList -> Expression . COMMA RepeatNewline ExpressionList
    (149) Expression -> Expression . LOR RepeatNewline Term1

    newline         reduce using rule 147 (ExpressionList -> Expression .)
    SEMI            reduce using rule 147 (ExpressionList -> Expression .)
    RBRACE          reduce using rule 147 (ExpressionList -> Expression .)
    CASE            reduce using rule 147 (ExpressionList -> Expression .)
    DEFAULT         reduce using rule 147 (ExpressionList -> Expression .)
    $end            reduce using rule 147 (ExpressionList -> Expression .)
    LBRACE          reduce using rule 147 (ExpressionList -> Expression .)
    RPAREN          reduce using rule 147 (ExpressionList -> Expression .)
    EQUALS          reduce using rule 147 (ExpressionList -> Expression .)
    TIMESEQUAL      reduce using rule 147 (ExpressionList -> Expression .)
    DIVEQUAL        reduce using rule 147 (ExpressionList -> Expression .)
    MODEQUAL        reduce using rule 147 (ExpressionList -> Expression .)
    PLUSEQUAL       reduce using rule 147 (ExpressionList -> Expression .)
    MINUSEQUAL      reduce using rule 147 (ExpressionList -> Expression .)
    LSHIFTEQUAL     reduce using rule 147 (ExpressionList -> Expression .)
    RSHIFTEQUAL     reduce using rule 147 (ExpressionList -> Expression .)
    ANDEQUAL        reduce using rule 147 (ExpressionList -> Expression .)
    OREQUAL         reduce using rule 147 (ExpressionList -> Expression .)
    XOREQUAL        reduce using rule 147 (ExpressionList -> Expression .)
    COMMA           shift and go to state 229
    LOR             shift and go to state 230


state 197

    (244) OperandName2 -> ID .

    PERIOD          reduce using rule 244 (OperandName2 -> ID .)
    LBRACKET        reduce using rule 244 (OperandName2 -> ID .)
    LPAREN          reduce using rule 244 (OperandName2 -> ID .)
    TIMES           reduce using rule 244 (OperandName2 -> ID .)
    DIVIDE          reduce using rule 244 (OperandName2 -> ID .)
    MODULO          reduce using rule 244 (OperandName2 -> ID .)
    LSHIFT          reduce using rule 244 (OperandName2 -> ID .)
    RSHIFT          reduce using rule 244 (OperandName2 -> ID .)
    AND             reduce using rule 244 (OperandName2 -> ID .)
    ANDNOT          reduce using rule 244 (OperandName2 -> ID .)
    PLUS            reduce using rule 244 (OperandName2 -> ID .)
    MINUS           reduce using rule 244 (OperandName2 -> ID .)
    OR              reduce using rule 244 (OperandName2 -> ID .)
    XOR             reduce using rule 244 (OperandName2 -> ID .)
    LT              reduce using rule 244 (OperandName2 -> ID .)
    GT              reduce using rule 244 (OperandName2 -> ID .)
    LE              reduce using rule 244 (OperandName2 -> ID .)
    GE              reduce using rule 244 (OperandName2 -> ID .)
    EQ              reduce using rule 244 (OperandName2 -> ID .)
    NE              reduce using rule 244 (OperandName2 -> ID .)
    LAND            reduce using rule 244 (OperandName2 -> ID .)
    COMMA           reduce using rule 244 (OperandName2 -> ID .)
    LOR             reduce using rule 244 (OperandName2 -> ID .)
    newline         reduce using rule 244 (OperandName2 -> ID .)
    SEMI            reduce using rule 244 (OperandName2 -> ID .)
    RBRACE          reduce using rule 244 (OperandName2 -> ID .)
    CASE            reduce using rule 244 (OperandName2 -> ID .)
    DEFAULT         reduce using rule 244 (OperandName2 -> ID .)
    $end            reduce using rule 244 (OperandName2 -> ID .)
    LBRACE          reduce using rule 244 (OperandName2 -> ID .)
    RPAREN          reduce using rule 244 (OperandName2 -> ID .)
    INCR            reduce using rule 244 (OperandName2 -> ID .)
    DECR            reduce using rule 244 (OperandName2 -> ID .)
    EQUALS          reduce using rule 244 (OperandName2 -> ID .)
    TIMESEQUAL      reduce using rule 244 (OperandName2 -> ID .)
    DIVEQUAL        reduce using rule 244 (OperandName2 -> ID .)
    MODEQUAL        reduce using rule 244 (OperandName2 -> ID .)
    PLUSEQUAL       reduce using rule 244 (OperandName2 -> ID .)
    MINUSEQUAL      reduce using rule 244 (OperandName2 -> ID .)
    LSHIFTEQUAL     reduce using rule 244 (OperandName2 -> ID .)
    RSHIFTEQUAL     reduce using rule 244 (OperandName2 -> ID .)
    ANDEQUAL        reduce using rule 244 (OperandName2 -> ID .)
    OREQUAL         reduce using rule 244 (OperandName2 -> ID .)
    XOREQUAL        reduce using rule 244 (OperandName2 -> ID .)
    RBRACKET        reduce using rule 244 (OperandName2 -> ID .)
    COLON           reduce using rule 244 (OperandName2 -> ID .)


state 198

    (86) Assignment -> ExpressionList AssignOp . RepeatNewline ExpressionList
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 276
    empty                          shift and go to state 5

state 199

    (87) Assignment -> ExpressionList EQUALS . RepeatNewline ExpressionList
    (88) Assignment -> ExpressionList EQUALS . MallocExp
    (89) Assignment -> ExpressionList EQUALS . SinExp
    (90) Assignment -> ExpressionList EQUALS . CosExp
    (91) Assignment -> ExpressionList EQUALS . OpenFileExp
    (95) Assignment -> ExpressionList EQUALS . NULL
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (251) MallocExp -> . MALLOC LPAREN Expression RPAREN
    (256) SinExp -> . SIN LPAREN Expression RPAREN
    (257) CosExp -> . COS LPAREN Expression RPAREN
    (252) OpenFileExp -> . OPENFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (258) empty -> .

  ! shift/reduce conflict for NULL resolved as shift
    NULL            shift and go to state 282
    newline         shift and go to state 4
    MALLOC          shift and go to state 283
    SIN             shift and go to state 284
    COS             shift and go to state 285
    OPENFILE        shift and go to state 286
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

  ! NULL            [ reduce using rule 258 (empty -> .) ]

    RepeatNewline                  shift and go to state 277
    MallocExp                      shift and go to state 278
    SinExp                         shift and go to state 279
    CosExp                         shift and go to state 280
    OpenFileExp                    shift and go to state 281
    empty                          shift and go to state 5

state 200

    (76) AssignOp -> TIMESEQUAL .

    newline         reduce using rule 76 (AssignOp -> TIMESEQUAL .)
    NULL            reduce using rule 76 (AssignOp -> TIMESEQUAL .)
    LPAREN          reduce using rule 76 (AssignOp -> TIMESEQUAL .)
    PLUS            reduce using rule 76 (AssignOp -> TIMESEQUAL .)
    MINUS           reduce using rule 76 (AssignOp -> TIMESEQUAL .)
    LNOT            reduce using rule 76 (AssignOp -> TIMESEQUAL .)
    TIMES           reduce using rule 76 (AssignOp -> TIMESEQUAL .)
    AND             reduce using rule 76 (AssignOp -> TIMESEQUAL .)
    ID              reduce using rule 76 (AssignOp -> TIMESEQUAL .)
    INTEGER         reduce using rule 76 (AssignOp -> TIMESEQUAL .)
    FLOAT           reduce using rule 76 (AssignOp -> TIMESEQUAL .)
    STRINGVAL       reduce using rule 76 (AssignOp -> TIMESEQUAL .)
    CHARACTER       reduce using rule 76 (AssignOp -> TIMESEQUAL .)
    LBRACKET        reduce using rule 76 (AssignOp -> TIMESEQUAL .)
    STRUCT          reduce using rule 76 (AssignOp -> TIMESEQUAL .)


state 201

    (77) AssignOp -> DIVEQUAL .

    newline         reduce using rule 77 (AssignOp -> DIVEQUAL .)
    NULL            reduce using rule 77 (AssignOp -> DIVEQUAL .)
    LPAREN          reduce using rule 77 (AssignOp -> DIVEQUAL .)
    PLUS            reduce using rule 77 (AssignOp -> DIVEQUAL .)
    MINUS           reduce using rule 77 (AssignOp -> DIVEQUAL .)
    LNOT            reduce using rule 77 (AssignOp -> DIVEQUAL .)
    TIMES           reduce using rule 77 (AssignOp -> DIVEQUAL .)
    AND             reduce using rule 77 (AssignOp -> DIVEQUAL .)
    ID              reduce using rule 77 (AssignOp -> DIVEQUAL .)
    INTEGER         reduce using rule 77 (AssignOp -> DIVEQUAL .)
    FLOAT           reduce using rule 77 (AssignOp -> DIVEQUAL .)
    STRINGVAL       reduce using rule 77 (AssignOp -> DIVEQUAL .)
    CHARACTER       reduce using rule 77 (AssignOp -> DIVEQUAL .)
    LBRACKET        reduce using rule 77 (AssignOp -> DIVEQUAL .)
    STRUCT          reduce using rule 77 (AssignOp -> DIVEQUAL .)


state 202

    (78) AssignOp -> MODEQUAL .

    newline         reduce using rule 78 (AssignOp -> MODEQUAL .)
    NULL            reduce using rule 78 (AssignOp -> MODEQUAL .)
    LPAREN          reduce using rule 78 (AssignOp -> MODEQUAL .)
    PLUS            reduce using rule 78 (AssignOp -> MODEQUAL .)
    MINUS           reduce using rule 78 (AssignOp -> MODEQUAL .)
    LNOT            reduce using rule 78 (AssignOp -> MODEQUAL .)
    TIMES           reduce using rule 78 (AssignOp -> MODEQUAL .)
    AND             reduce using rule 78 (AssignOp -> MODEQUAL .)
    ID              reduce using rule 78 (AssignOp -> MODEQUAL .)
    INTEGER         reduce using rule 78 (AssignOp -> MODEQUAL .)
    FLOAT           reduce using rule 78 (AssignOp -> MODEQUAL .)
    STRINGVAL       reduce using rule 78 (AssignOp -> MODEQUAL .)
    CHARACTER       reduce using rule 78 (AssignOp -> MODEQUAL .)
    LBRACKET        reduce using rule 78 (AssignOp -> MODEQUAL .)
    STRUCT          reduce using rule 78 (AssignOp -> MODEQUAL .)


state 203

    (79) AssignOp -> PLUSEQUAL .

    newline         reduce using rule 79 (AssignOp -> PLUSEQUAL .)
    NULL            reduce using rule 79 (AssignOp -> PLUSEQUAL .)
    LPAREN          reduce using rule 79 (AssignOp -> PLUSEQUAL .)
    PLUS            reduce using rule 79 (AssignOp -> PLUSEQUAL .)
    MINUS           reduce using rule 79 (AssignOp -> PLUSEQUAL .)
    LNOT            reduce using rule 79 (AssignOp -> PLUSEQUAL .)
    TIMES           reduce using rule 79 (AssignOp -> PLUSEQUAL .)
    AND             reduce using rule 79 (AssignOp -> PLUSEQUAL .)
    ID              reduce using rule 79 (AssignOp -> PLUSEQUAL .)
    INTEGER         reduce using rule 79 (AssignOp -> PLUSEQUAL .)
    FLOAT           reduce using rule 79 (AssignOp -> PLUSEQUAL .)
    STRINGVAL       reduce using rule 79 (AssignOp -> PLUSEQUAL .)
    CHARACTER       reduce using rule 79 (AssignOp -> PLUSEQUAL .)
    LBRACKET        reduce using rule 79 (AssignOp -> PLUSEQUAL .)
    STRUCT          reduce using rule 79 (AssignOp -> PLUSEQUAL .)


state 204

    (80) AssignOp -> MINUSEQUAL .

    newline         reduce using rule 80 (AssignOp -> MINUSEQUAL .)
    NULL            reduce using rule 80 (AssignOp -> MINUSEQUAL .)
    LPAREN          reduce using rule 80 (AssignOp -> MINUSEQUAL .)
    PLUS            reduce using rule 80 (AssignOp -> MINUSEQUAL .)
    MINUS           reduce using rule 80 (AssignOp -> MINUSEQUAL .)
    LNOT            reduce using rule 80 (AssignOp -> MINUSEQUAL .)
    TIMES           reduce using rule 80 (AssignOp -> MINUSEQUAL .)
    AND             reduce using rule 80 (AssignOp -> MINUSEQUAL .)
    ID              reduce using rule 80 (AssignOp -> MINUSEQUAL .)
    INTEGER         reduce using rule 80 (AssignOp -> MINUSEQUAL .)
    FLOAT           reduce using rule 80 (AssignOp -> MINUSEQUAL .)
    STRINGVAL       reduce using rule 80 (AssignOp -> MINUSEQUAL .)
    CHARACTER       reduce using rule 80 (AssignOp -> MINUSEQUAL .)
    LBRACKET        reduce using rule 80 (AssignOp -> MINUSEQUAL .)
    STRUCT          reduce using rule 80 (AssignOp -> MINUSEQUAL .)


state 205

    (81) AssignOp -> LSHIFTEQUAL .

    newline         reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)
    NULL            reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)
    LPAREN          reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)
    PLUS            reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)
    MINUS           reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)
    LNOT            reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)
    TIMES           reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)
    AND             reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)
    ID              reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)
    INTEGER         reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)
    FLOAT           reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)
    STRINGVAL       reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)
    CHARACTER       reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)
    LBRACKET        reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)
    STRUCT          reduce using rule 81 (AssignOp -> LSHIFTEQUAL .)


state 206

    (82) AssignOp -> RSHIFTEQUAL .

    newline         reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)
    NULL            reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)
    LPAREN          reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)
    PLUS            reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)
    MINUS           reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)
    LNOT            reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)
    TIMES           reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)
    AND             reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)
    ID              reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)
    INTEGER         reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)
    FLOAT           reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)
    STRINGVAL       reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)
    CHARACTER       reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)
    LBRACKET        reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)
    STRUCT          reduce using rule 82 (AssignOp -> RSHIFTEQUAL .)


state 207

    (83) AssignOp -> ANDEQUAL .

    newline         reduce using rule 83 (AssignOp -> ANDEQUAL .)
    NULL            reduce using rule 83 (AssignOp -> ANDEQUAL .)
    LPAREN          reduce using rule 83 (AssignOp -> ANDEQUAL .)
    PLUS            reduce using rule 83 (AssignOp -> ANDEQUAL .)
    MINUS           reduce using rule 83 (AssignOp -> ANDEQUAL .)
    LNOT            reduce using rule 83 (AssignOp -> ANDEQUAL .)
    TIMES           reduce using rule 83 (AssignOp -> ANDEQUAL .)
    AND             reduce using rule 83 (AssignOp -> ANDEQUAL .)
    ID              reduce using rule 83 (AssignOp -> ANDEQUAL .)
    INTEGER         reduce using rule 83 (AssignOp -> ANDEQUAL .)
    FLOAT           reduce using rule 83 (AssignOp -> ANDEQUAL .)
    STRINGVAL       reduce using rule 83 (AssignOp -> ANDEQUAL .)
    CHARACTER       reduce using rule 83 (AssignOp -> ANDEQUAL .)
    LBRACKET        reduce using rule 83 (AssignOp -> ANDEQUAL .)
    STRUCT          reduce using rule 83 (AssignOp -> ANDEQUAL .)


state 208

    (84) AssignOp -> OREQUAL .

    newline         reduce using rule 84 (AssignOp -> OREQUAL .)
    NULL            reduce using rule 84 (AssignOp -> OREQUAL .)
    LPAREN          reduce using rule 84 (AssignOp -> OREQUAL .)
    PLUS            reduce using rule 84 (AssignOp -> OREQUAL .)
    MINUS           reduce using rule 84 (AssignOp -> OREQUAL .)
    LNOT            reduce using rule 84 (AssignOp -> OREQUAL .)
    TIMES           reduce using rule 84 (AssignOp -> OREQUAL .)
    AND             reduce using rule 84 (AssignOp -> OREQUAL .)
    ID              reduce using rule 84 (AssignOp -> OREQUAL .)
    INTEGER         reduce using rule 84 (AssignOp -> OREQUAL .)
    FLOAT           reduce using rule 84 (AssignOp -> OREQUAL .)
    STRINGVAL       reduce using rule 84 (AssignOp -> OREQUAL .)
    CHARACTER       reduce using rule 84 (AssignOp -> OREQUAL .)
    LBRACKET        reduce using rule 84 (AssignOp -> OREQUAL .)
    STRUCT          reduce using rule 84 (AssignOp -> OREQUAL .)


state 209

    (85) AssignOp -> XOREQUAL .

    newline         reduce using rule 85 (AssignOp -> XOREQUAL .)
    NULL            reduce using rule 85 (AssignOp -> XOREQUAL .)
    LPAREN          reduce using rule 85 (AssignOp -> XOREQUAL .)
    PLUS            reduce using rule 85 (AssignOp -> XOREQUAL .)
    MINUS           reduce using rule 85 (AssignOp -> XOREQUAL .)
    LNOT            reduce using rule 85 (AssignOp -> XOREQUAL .)
    TIMES           reduce using rule 85 (AssignOp -> XOREQUAL .)
    AND             reduce using rule 85 (AssignOp -> XOREQUAL .)
    ID              reduce using rule 85 (AssignOp -> XOREQUAL .)
    INTEGER         reduce using rule 85 (AssignOp -> XOREQUAL .)
    FLOAT           reduce using rule 85 (AssignOp -> XOREQUAL .)
    STRINGVAL       reduce using rule 85 (AssignOp -> XOREQUAL .)
    CHARACTER       reduce using rule 85 (AssignOp -> XOREQUAL .)
    LBRACKET        reduce using rule 85 (AssignOp -> XOREQUAL .)
    STRUCT          reduce using rule 85 (AssignOp -> XOREQUAL .)


state 210

    (101) BreakStmt -> BREAK Label .

    newline         reduce using rule 101 (BreakStmt -> BREAK Label .)
    SEMI            reduce using rule 101 (BreakStmt -> BREAK Label .)
    RBRACE          reduce using rule 101 (BreakStmt -> BREAK Label .)
    CASE            reduce using rule 101 (BreakStmt -> BREAK Label .)
    DEFAULT         reduce using rule 101 (BreakStmt -> BREAK Label .)


state 211

    (68) Label -> ID .

    newline         reduce using rule 68 (Label -> ID .)
    SEMI            reduce using rule 68 (Label -> ID .)
    RBRACE          reduce using rule 68 (Label -> ID .)
    CASE            reduce using rule 68 (Label -> ID .)
    DEFAULT         reduce using rule 68 (Label -> ID .)


state 212

    (103) ContinueStmt -> CONTINUE Label .

    newline         reduce using rule 103 (ContinueStmt -> CONTINUE Label .)
    SEMI            reduce using rule 103 (ContinueStmt -> CONTINUE Label .)
    RBRACE          reduce using rule 103 (ContinueStmt -> CONTINUE Label .)
    CASE            reduce using rule 103 (ContinueStmt -> CONTINUE Label .)
    DEFAULT         reduce using rule 103 (ContinueStmt -> CONTINUE Label .)


state 213

    (104) GotoStmt -> GOTO Label .

    newline         reduce using rule 104 (GotoStmt -> GOTO Label .)
    SEMI            reduce using rule 104 (GotoStmt -> GOTO Label .)
    RBRACE          reduce using rule 104 (GotoStmt -> GOTO Label .)
    CASE            reduce using rule 104 (GotoStmt -> GOTO Label .)
    DEFAULT         reduce using rule 104 (GotoStmt -> GOTO Label .)


state 214

    (107) IfStmt -> IF IfExp . Block
    (108) IfStmt -> IF IfExp . Block EndIfMarker ELSE ElseMarker Block
    (109) IfStmt -> IF IfExp . Block EndIfMarker ELSE IfStmt
    (105) Block -> . LBRACE RepeatNewline StatementList RBRACE

    LBRACE          shift and go to state 47

    Block                          shift and go to state 287

state 215

    (106) IfExp -> IfMarker . RepeatNewline Expression
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 288
    empty                          shift and go to state 5

state 216

    (110) IfMarker -> empty .

    newline         reduce using rule 110 (IfMarker -> empty .)
    NULL            reduce using rule 110 (IfMarker -> empty .)
    LPAREN          reduce using rule 110 (IfMarker -> empty .)
    PLUS            reduce using rule 110 (IfMarker -> empty .)
    MINUS           reduce using rule 110 (IfMarker -> empty .)
    LNOT            reduce using rule 110 (IfMarker -> empty .)
    TIMES           reduce using rule 110 (IfMarker -> empty .)
    AND             reduce using rule 110 (IfMarker -> empty .)
    ID              reduce using rule 110 (IfMarker -> empty .)
    INTEGER         reduce using rule 110 (IfMarker -> empty .)
    FLOAT           reduce using rule 110 (IfMarker -> empty .)
    STRINGVAL       reduce using rule 110 (IfMarker -> empty .)
    CHARACTER       reduce using rule 110 (IfMarker -> empty .)
    LBRACKET        reduce using rule 110 (IfMarker -> empty .)
    STRUCT          reduce using rule 110 (IfMarker -> empty .)


state 217

    (123) ForStmt -> FOR ForMarker . RepeatNewline Block
    (124) ForStmt -> FOR ForMarker . RepeatNewline Condition Block
    (125) ForStmt -> FOR ForMarker . RepeatNewline ForClause Block
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    LBRACE          reduce using rule 258 (empty -> .)
    SEMI            reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    NULL            reduce using rule 258 (empty -> .)
    READFILE        reduce using rule 258 (empty -> .)
    WRITEFILE       reduce using rule 258 (empty -> .)
    CLOSEFILE       reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 289
    empty                          shift and go to state 5

state 218

    (126) ForMarker -> empty .

    newline         reduce using rule 126 (ForMarker -> empty .)
    LBRACE          reduce using rule 126 (ForMarker -> empty .)
    SEMI            reduce using rule 126 (ForMarker -> empty .)
    ID              reduce using rule 126 (ForMarker -> empty .)
    NULL            reduce using rule 126 (ForMarker -> empty .)
    READFILE        reduce using rule 126 (ForMarker -> empty .)
    WRITEFILE       reduce using rule 126 (ForMarker -> empty .)
    CLOSEFILE       reduce using rule 126 (ForMarker -> empty .)
    LPAREN          reduce using rule 126 (ForMarker -> empty .)
    PLUS            reduce using rule 126 (ForMarker -> empty .)
    MINUS           reduce using rule 126 (ForMarker -> empty .)
    LNOT            reduce using rule 126 (ForMarker -> empty .)
    TIMES           reduce using rule 126 (ForMarker -> empty .)
    AND             reduce using rule 126 (ForMarker -> empty .)
    INTEGER         reduce using rule 126 (ForMarker -> empty .)
    FLOAT           reduce using rule 126 (ForMarker -> empty .)
    STRINGVAL       reduce using rule 126 (ForMarker -> empty .)
    CHARACTER       reduce using rule 126 (ForMarker -> empty .)
    LBRACKET        reduce using rule 126 (ForMarker -> empty .)
    STRUCT          reduce using rule 126 (ForMarker -> empty .)


state 219

    (138) DeferStmt -> DEFER PrimaryExpr . Arguments
    (185) PrimaryExpr -> PrimaryExpr . Selector
    (186) PrimaryExpr -> PrimaryExpr . Index
    (187) PrimaryExpr -> PrimaryExpr . Arguments
    (247) Arguments -> . LPAREN RepeatNewline ExpressionList RPAREN
    (248) Arguments -> . LPAREN RepeatNewline RPAREN
    (245) Selector -> . PERIOD RepeatNewline ID
    (246) Index -> . LBRACKET RepeatNewline Expression RBRACKET

    LPAREN          shift and go to state 225
    PERIOD          shift and go to state 223
    LBRACKET        shift and go to state 224

    Arguments                      shift and go to state 290
    Selector                       shift and go to state 220
    Index                          shift and go to state 221

state 220

    (185) PrimaryExpr -> PrimaryExpr Selector .

    PERIOD          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACKET        reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMES           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    MODULO          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    LSHIFT          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    RSHIFT          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    AND             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    ANDNOT          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUS            reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUS           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    LT              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    GT              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    LE              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    GE              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    EQ              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    NE              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    LAND            reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    INCR            reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    DECR            reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    LOR             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    newline         reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMI            reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACE          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    EQUALS          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    TIMESEQUAL      reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVEQUAL        reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    MODEQUAL        reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUSEQUAL       reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUSEQUAL      reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    LSHIFTEQUAL     reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    RSHIFTEQUAL     reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    ANDEQUAL        reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    OREQUAL         reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    XOREQUAL        reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    CASE            reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    DEFAULT         reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    $end            reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    LBRACE          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    RBRACKET        reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)


state 221

    (186) PrimaryExpr -> PrimaryExpr Index .

    PERIOD          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACKET        reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    LPAREN          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    TIMES           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    DIVIDE          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    MODULO          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    LSHIFT          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    RSHIFT          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    AND             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    ANDNOT          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    PLUS            reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    MINUS           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    OR              reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    XOR             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    LT              reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    GT              reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    LE              reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    GE              reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    EQ              reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    NE              reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    LAND            reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    INCR            reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    DECR            reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    COMMA           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    LOR             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    newline         reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    SEMI            reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACE          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    EQUALS          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    TIMESEQUAL      reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    DIVEQUAL        reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    MODEQUAL        reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    PLUSEQUAL       reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    MINUSEQUAL      reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    LSHIFTEQUAL     reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    RSHIFTEQUAL     reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    ANDEQUAL        reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    OREQUAL         reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    XOREQUAL        reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    CASE            reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    DEFAULT         reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    $end            reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    LBRACE          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    RPAREN          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    RBRACKET        reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
    COLON           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)


state 222

    (187) PrimaryExpr -> PrimaryExpr Arguments .

    PERIOD          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACKET        reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    LPAREN          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMES           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVIDE          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    MODULO          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSHIFT          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    RSHIFT          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    AND             reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    ANDNOT          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUS            reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUS           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    OR              reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOR             reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    LT              reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    GT              reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    LE              reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    GE              reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQ              reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    NE              reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    LAND            reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    INCR            reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    DECR            reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    COMMA           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    LOR             reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    newline         reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    SEMI            reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACE          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    EQUALS          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    TIMESEQUAL      reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    DIVEQUAL        reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    MODEQUAL        reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    PLUSEQUAL       reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    MINUSEQUAL      reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    LSHIFTEQUAL     reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    RSHIFTEQUAL     reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    ANDEQUAL        reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    OREQUAL         reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    XOREQUAL        reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    CASE            reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    DEFAULT         reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    $end            reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACE          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    RPAREN          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    RBRACKET        reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    COLON           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)


state 223

    (245) Selector -> PERIOD . RepeatNewline ID
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    ID              reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 291
    empty                          shift and go to state 5

state 224

    (246) Index -> LBRACKET . RepeatNewline Expression RBRACKET
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 292
    empty                          shift and go to state 5

state 225

    (247) Arguments -> LPAREN . RepeatNewline ExpressionList RPAREN
    (248) Arguments -> LPAREN . RepeatNewline RPAREN
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    RPAREN          reduce using rule 258 (empty -> .)
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 293
    empty                          shift and go to state 5

state 226

    (145) ScanIntStmt -> SCANINT Expression .
    (149) Expression -> Expression . LOR RepeatNewline Term1

    newline         reduce using rule 145 (ScanIntStmt -> SCANINT Expression .)
    SEMI            reduce using rule 145 (ScanIntStmt -> SCANINT Expression .)
    RBRACE          reduce using rule 145 (ScanIntStmt -> SCANINT Expression .)
    CASE            reduce using rule 145 (ScanIntStmt -> SCANINT Expression .)
    DEFAULT         reduce using rule 145 (ScanIntStmt -> SCANINT Expression .)
    LOR             shift and go to state 230


state 227

    (74) IncDecStmt -> Expression INCR .

    newline         reduce using rule 74 (IncDecStmt -> Expression INCR .)
    SEMI            reduce using rule 74 (IncDecStmt -> Expression INCR .)
    RBRACE          reduce using rule 74 (IncDecStmt -> Expression INCR .)
    CASE            reduce using rule 74 (IncDecStmt -> Expression INCR .)
    DEFAULT         reduce using rule 74 (IncDecStmt -> Expression INCR .)
    LBRACE          reduce using rule 74 (IncDecStmt -> Expression INCR .)


state 228

    (75) IncDecStmt -> Expression DECR .

    newline         reduce using rule 75 (IncDecStmt -> Expression DECR .)
    SEMI            reduce using rule 75 (IncDecStmt -> Expression DECR .)
    RBRACE          reduce using rule 75 (IncDecStmt -> Expression DECR .)
    CASE            reduce using rule 75 (IncDecStmt -> Expression DECR .)
    DEFAULT         reduce using rule 75 (IncDecStmt -> Expression DECR .)
    LBRACE          reduce using rule 75 (IncDecStmt -> Expression DECR .)


state 229

    (148) ExpressionList -> Expression COMMA . RepeatNewline ExpressionList
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 294
    empty                          shift and go to state 5

state 230

    (149) Expression -> Expression LOR . RepeatNewline Term1
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 295
    empty                          shift and go to state 5

state 231

    (146) ScanStrStmt -> SCANSTR Expression .
    (149) Expression -> Expression . LOR RepeatNewline Term1

    newline         reduce using rule 146 (ScanStrStmt -> SCANSTR Expression .)
    SEMI            reduce using rule 146 (ScanStrStmt -> SCANSTR Expression .)
    RBRACE          reduce using rule 146 (ScanStrStmt -> SCANSTR Expression .)
    CASE            reduce using rule 146 (ScanStrStmt -> SCANSTR Expression .)
    DEFAULT         reduce using rule 146 (ScanStrStmt -> SCANSTR Expression .)
    LOR             shift and go to state 230


state 232

    (96) ShortVarDecl -> ID AUTOASIGN . RepeatNewline Expression
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 296
    empty                          shift and go to state 5

state 233

    (114) ExprSwitchStmt -> SWITCH RepeatNewline . Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 297
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 234

    (142) PrintIntStmt -> PRINTINT Expression .
    (149) Expression -> Expression . LOR RepeatNewline Term1

    newline         reduce using rule 142 (PrintIntStmt -> PRINTINT Expression .)
    SEMI            reduce using rule 142 (PrintIntStmt -> PRINTINT Expression .)
    RBRACE          reduce using rule 142 (PrintIntStmt -> PRINTINT Expression .)
    CASE            reduce using rule 142 (PrintIntStmt -> PRINTINT Expression .)
    DEFAULT         reduce using rule 142 (PrintIntStmt -> PRINTINT Expression .)
    LOR             shift and go to state 230


state 235

    (144) PrintStrStmt -> PRINTSTR Expression .
    (149) Expression -> Expression . LOR RepeatNewline Term1

    newline         reduce using rule 144 (PrintStrStmt -> PRINTSTR Expression .)
    SEMI            reduce using rule 144 (PrintStrStmt -> PRINTSTR Expression .)
    RBRACE          reduce using rule 144 (PrintStrStmt -> PRINTSTR Expression .)
    CASE            reduce using rule 144 (PrintStrStmt -> PRINTSTR Expression .)
    DEFAULT         reduce using rule 144 (PrintStrStmt -> PRINTSTR Expression .)
    LOR             shift and go to state 230


state 236

    (143) PrintFloatStmt -> PRINTFLOAT Expression .
    (149) Expression -> Expression . LOR RepeatNewline Term1

    newline         reduce using rule 143 (PrintFloatStmt -> PRINTFLOAT Expression .)
    SEMI            reduce using rule 143 (PrintFloatStmt -> PRINTFLOAT Expression .)
    RBRACE          reduce using rule 143 (PrintFloatStmt -> PRINTFLOAT Expression .)
    CASE            reduce using rule 143 (PrintFloatStmt -> PRINTFLOAT Expression .)
    DEFAULT         reduce using rule 143 (PrintFloatStmt -> PRINTFLOAT Expression .)
    LOR             shift and go to state 230


state 237

    (253) ReadFileExp -> READFILE LPAREN . Expression COMMA Expression COMMA Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 298
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 238

    (188) PrimaryExpr -> LPAREN RepeatNewline . Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 299
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 239

    (254) WriteFileExp -> WRITEFILE LPAREN . Expression COMMA Expression COMMA Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 300
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 240

    (255) CloseFileExp -> CLOSEFILE LPAREN . Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 301
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 241

    (151) Term1 -> Term1 LAND . RepeatNewline Term2
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 302
    empty                          shift and go to state 5

state 242

    (153) Term2 -> Term2 Relop . RepeatNewline Term3
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 303
    empty                          shift and go to state 5

state 243

    (155) Relop -> LT .

    newline         reduce using rule 155 (Relop -> LT .)
    NULL            reduce using rule 155 (Relop -> LT .)
    LPAREN          reduce using rule 155 (Relop -> LT .)
    PLUS            reduce using rule 155 (Relop -> LT .)
    MINUS           reduce using rule 155 (Relop -> LT .)
    LNOT            reduce using rule 155 (Relop -> LT .)
    TIMES           reduce using rule 155 (Relop -> LT .)
    AND             reduce using rule 155 (Relop -> LT .)
    ID              reduce using rule 155 (Relop -> LT .)
    INTEGER         reduce using rule 155 (Relop -> LT .)
    FLOAT           reduce using rule 155 (Relop -> LT .)
    STRINGVAL       reduce using rule 155 (Relop -> LT .)
    CHARACTER       reduce using rule 155 (Relop -> LT .)
    LBRACKET        reduce using rule 155 (Relop -> LT .)
    STRUCT          reduce using rule 155 (Relop -> LT .)


state 244

    (156) Relop -> GT .

    newline         reduce using rule 156 (Relop -> GT .)
    NULL            reduce using rule 156 (Relop -> GT .)
    LPAREN          reduce using rule 156 (Relop -> GT .)
    PLUS            reduce using rule 156 (Relop -> GT .)
    MINUS           reduce using rule 156 (Relop -> GT .)
    LNOT            reduce using rule 156 (Relop -> GT .)
    TIMES           reduce using rule 156 (Relop -> GT .)
    AND             reduce using rule 156 (Relop -> GT .)
    ID              reduce using rule 156 (Relop -> GT .)
    INTEGER         reduce using rule 156 (Relop -> GT .)
    FLOAT           reduce using rule 156 (Relop -> GT .)
    STRINGVAL       reduce using rule 156 (Relop -> GT .)
    CHARACTER       reduce using rule 156 (Relop -> GT .)
    LBRACKET        reduce using rule 156 (Relop -> GT .)
    STRUCT          reduce using rule 156 (Relop -> GT .)


state 245

    (157) Relop -> LE .

    newline         reduce using rule 157 (Relop -> LE .)
    NULL            reduce using rule 157 (Relop -> LE .)
    LPAREN          reduce using rule 157 (Relop -> LE .)
    PLUS            reduce using rule 157 (Relop -> LE .)
    MINUS           reduce using rule 157 (Relop -> LE .)
    LNOT            reduce using rule 157 (Relop -> LE .)
    TIMES           reduce using rule 157 (Relop -> LE .)
    AND             reduce using rule 157 (Relop -> LE .)
    ID              reduce using rule 157 (Relop -> LE .)
    INTEGER         reduce using rule 157 (Relop -> LE .)
    FLOAT           reduce using rule 157 (Relop -> LE .)
    STRINGVAL       reduce using rule 157 (Relop -> LE .)
    CHARACTER       reduce using rule 157 (Relop -> LE .)
    LBRACKET        reduce using rule 157 (Relop -> LE .)
    STRUCT          reduce using rule 157 (Relop -> LE .)


state 246

    (158) Relop -> GE .

    newline         reduce using rule 158 (Relop -> GE .)
    NULL            reduce using rule 158 (Relop -> GE .)
    LPAREN          reduce using rule 158 (Relop -> GE .)
    PLUS            reduce using rule 158 (Relop -> GE .)
    MINUS           reduce using rule 158 (Relop -> GE .)
    LNOT            reduce using rule 158 (Relop -> GE .)
    TIMES           reduce using rule 158 (Relop -> GE .)
    AND             reduce using rule 158 (Relop -> GE .)
    ID              reduce using rule 158 (Relop -> GE .)
    INTEGER         reduce using rule 158 (Relop -> GE .)
    FLOAT           reduce using rule 158 (Relop -> GE .)
    STRINGVAL       reduce using rule 158 (Relop -> GE .)
    CHARACTER       reduce using rule 158 (Relop -> GE .)
    LBRACKET        reduce using rule 158 (Relop -> GE .)
    STRUCT          reduce using rule 158 (Relop -> GE .)


state 247

    (159) Relop -> EQ .

    newline         reduce using rule 159 (Relop -> EQ .)
    NULL            reduce using rule 159 (Relop -> EQ .)
    LPAREN          reduce using rule 159 (Relop -> EQ .)
    PLUS            reduce using rule 159 (Relop -> EQ .)
    MINUS           reduce using rule 159 (Relop -> EQ .)
    LNOT            reduce using rule 159 (Relop -> EQ .)
    TIMES           reduce using rule 159 (Relop -> EQ .)
    AND             reduce using rule 159 (Relop -> EQ .)
    ID              reduce using rule 159 (Relop -> EQ .)
    INTEGER         reduce using rule 159 (Relop -> EQ .)
    FLOAT           reduce using rule 159 (Relop -> EQ .)
    STRINGVAL       reduce using rule 159 (Relop -> EQ .)
    CHARACTER       reduce using rule 159 (Relop -> EQ .)
    LBRACKET        reduce using rule 159 (Relop -> EQ .)
    STRUCT          reduce using rule 159 (Relop -> EQ .)


state 248

    (160) Relop -> NE .

    newline         reduce using rule 160 (Relop -> NE .)
    NULL            reduce using rule 160 (Relop -> NE .)
    LPAREN          reduce using rule 160 (Relop -> NE .)
    PLUS            reduce using rule 160 (Relop -> NE .)
    MINUS           reduce using rule 160 (Relop -> NE .)
    LNOT            reduce using rule 160 (Relop -> NE .)
    TIMES           reduce using rule 160 (Relop -> NE .)
    AND             reduce using rule 160 (Relop -> NE .)
    ID              reduce using rule 160 (Relop -> NE .)
    INTEGER         reduce using rule 160 (Relop -> NE .)
    FLOAT           reduce using rule 160 (Relop -> NE .)
    STRINGVAL       reduce using rule 160 (Relop -> NE .)
    CHARACTER       reduce using rule 160 (Relop -> NE .)
    LBRACKET        reduce using rule 160 (Relop -> NE .)
    STRUCT          reduce using rule 160 (Relop -> NE .)


state 249

    (161) Term3 -> Term3 PLUS . RepeatNewline Term4
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 304
    empty                          shift and go to state 5

state 250

    (162) Term3 -> Term3 MINUS . RepeatNewline Term4
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 305
    empty                          shift and go to state 5

state 251

    (163) Term3 -> Term3 OR . RepeatNewline Term4
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 306
    empty                          shift and go to state 5

state 252

    (164) Term3 -> Term3 XOR . RepeatNewline Term4
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 307
    empty                          shift and go to state 5

state 253

    (167) Term4 -> Term4 TIMES . RepeatNewline Term5
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 308
    empty                          shift and go to state 5

state 254

    (168) Term4 -> Term4 DIVIDE . RepeatNewline Term5
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 309
    empty                          shift and go to state 5

state 255

    (169) Term4 -> Term4 MODULO . RepeatNewline Term5
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 310
    empty                          shift and go to state 5

state 256

    (170) Term4 -> Term4 LSHIFT . RepeatNewline Term5
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 311
    empty                          shift and go to state 5

state 257

    (171) Term4 -> Term4 RSHIFT . RepeatNewline Term5
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 312
    empty                          shift and go to state 5

state 258

    (172) Term4 -> Term4 AND . RepeatNewline Term5
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 313
    empty                          shift and go to state 5

state 259

    (173) Term4 -> Term4 ANDNOT . RepeatNewline Term5
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 314
    empty                          shift and go to state 5

state 260

    (178) UnaryExp -> UnaryOp RepeatNewline . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    UnaryOp                        shift and go to state 162
    UnaryExp                       shift and go to state 315
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 261

    (198) CompositeLit -> LiteralType LiteralValue .

    TIMES           reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    DIVIDE          reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    MODULO          reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    LSHIFT          reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    RSHIFT          reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    AND             reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    ANDNOT          reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    PLUS            reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    MINUS           reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    OR              reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    XOR             reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    LT              reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    GT              reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    LE              reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    GE              reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    EQ              reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    NE              reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    LAND            reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    INCR            reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    DECR            reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    COMMA           reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    LOR             reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    newline         reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    SEMI            reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    RBRACE          reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    EQUALS          reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    TIMESEQUAL      reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    DIVEQUAL        reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    MODEQUAL        reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    PLUSEQUAL       reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    MINUSEQUAL      reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    LSHIFTEQUAL     reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    RSHIFTEQUAL     reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    ANDEQUAL        reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    OREQUAL         reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    XOREQUAL        reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    CASE            reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    DEFAULT         reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    $end            reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    LBRACE          reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    RPAREN          reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    RBRACKET        reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)
    COLON           reduce using rule 198 (CompositeLit -> LiteralType LiteralValue .)


state 262

    (236) LiteralValue -> LBRACE . RepeatNewline RBRACE
    (237) LiteralValue -> LBRACE . RepeatNewline ElementList RBRACE
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    RBRACE          reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 316
    empty                          shift and go to state 5

state 263

    (44) ConstSpec -> IdentifierList Types EQUALS ExpressionList .

    newline         reduce using rule 44 (ConstSpec -> IdentifierList Types EQUALS ExpressionList .)
    SEMI            reduce using rule 44 (ConstSpec -> IdentifierList Types EQUALS ExpressionList .)
    $end            reduce using rule 44 (ConstSpec -> IdentifierList Types EQUALS ExpressionList .)
    RBRACE          reduce using rule 44 (ConstSpec -> IdentifierList Types EQUALS ExpressionList .)
    CASE            reduce using rule 44 (ConstSpec -> IdentifierList Types EQUALS ExpressionList .)
    DEFAULT         reduce using rule 44 (ConstSpec -> IdentifierList Types EQUALS ExpressionList .)


state 264

    (250) IdentifierList -> IdentifierList COMMA RepeatNewline ID .

    COMMA           reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    BOOL            reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    BYTE            reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    INT             reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    UINT8           reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    UINT16          reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    UINT32          reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    UINT64          reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    INT8            reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    INT16           reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    INT32           reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    INT64           reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    UINT            reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    FLOAT32         reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    FLOAT64         reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    UINTPTR         reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    STRING          reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    ERROR           reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    ID              reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    STRUCT          reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    LBRACKET        reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)
    TIMES           reduce using rule 250 (IdentifierList -> IdentifierList COMMA RepeatNewline ID .)


state 265

    (228) StructType -> STRUCT M RepeatNewline . LBRACE RepeatNewline RepeatFieldDecl RBRACE

    LBRACE          shift and go to state 317


state 266

    (234) ArrayType -> LBRACKET RepeatNewline ArrayLength . RBRACKET Types

    RBRACKET        shift and go to state 318


state 267

    (235) ArrayLength -> INTEGER .

    RBRACKET        reduce using rule 235 (ArrayLength -> INTEGER .)


state 268

    (226) SliceType -> LBRACKET RBRACKET Types .

    EQUALS          reduce using rule 226 (SliceType -> LBRACKET RBRACKET Types .)
    newline         reduce using rule 226 (SliceType -> LBRACKET RBRACKET Types .)
    SEMI            reduce using rule 226 (SliceType -> LBRACKET RBRACKET Types .)
    $end            reduce using rule 226 (SliceType -> LBRACKET RBRACKET Types .)
    RBRACE          reduce using rule 226 (SliceType -> LBRACKET RBRACKET Types .)
    CASE            reduce using rule 226 (SliceType -> LBRACKET RBRACKET Types .)
    DEFAULT         reduce using rule 226 (SliceType -> LBRACKET RBRACKET Types .)
    LBRACE          reduce using rule 226 (SliceType -> LBRACKET RBRACKET Types .)
    COMMA           reduce using rule 226 (SliceType -> LBRACKET RBRACKET Types .)
    RPAREN          reduce using rule 226 (SliceType -> LBRACKET RBRACKET Types .)


state 269

    (47) TypeDef -> ID K Types .

    newline         reduce using rule 47 (TypeDef -> ID K Types .)
    SEMI            reduce using rule 47 (TypeDef -> ID K Types .)
    $end            reduce using rule 47 (TypeDef -> ID K Types .)
    RBRACE          reduce using rule 47 (TypeDef -> ID K Types .)
    CASE            reduce using rule 47 (TypeDef -> ID K Types .)
    DEFAULT         reduce using rule 47 (TypeDef -> ID K Types .)


state 270

    (51) VarSpec -> IdentifierList Types EQUALS . RepeatNewline ExpressionList
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 319
    empty                          shift and go to state 5

state 271

    (57) Signature -> Parameters Result .

    LBRACE          reduce using rule 57 (Signature -> Parameters Result .)
    newline         reduce using rule 57 (Signature -> Parameters Result .)
    SEMI            reduce using rule 57 (Signature -> Parameters Result .)
    $end            reduce using rule 57 (Signature -> Parameters Result .)


state 272

    (65) Result -> Types .

    LBRACE          reduce using rule 65 (Result -> Types .)
    newline         reduce using rule 65 (Result -> Types .)
    SEMI            reduce using rule 65 (Result -> Types .)
    $end            reduce using rule 65 (Result -> Types .)


state 273

    (58) Parameters -> LPAREN RepeatNewline . RPAREN
    (59) Parameters -> LPAREN RepeatNewline . ParameterList RPAREN
    (60) ParameterList -> . ParameterDecl RepeatParameterDecl
    (63) ParameterDecl -> . ID Types
    (64) ParameterDecl -> . Types
    (219) Types -> . Mytypes
    (220) Types -> . TypeLit
    (221) Types -> . OperandName
    (202) Mytypes -> . BOOL
    (203) Mytypes -> . BYTE
    (204) Mytypes -> . INT
    (205) Mytypes -> . UINT8
    (206) Mytypes -> . UINT16
    (207) Mytypes -> . UINT32
    (208) Mytypes -> . UINT64
    (209) Mytypes -> . INT8
    (210) Mytypes -> . INT16
    (211) Mytypes -> . INT32
    (212) Mytypes -> . INT64
    (213) Mytypes -> . UINT
    (214) Mytypes -> . FLOAT32
    (215) Mytypes -> . FLOAT64
    (216) Mytypes -> . UINTPTR
    (217) Mytypes -> . STRING
    (218) Mytypes -> . ERROR
    (222) TypeLit -> . StructType
    (223) TypeLit -> . ArrayType
    (224) TypeLit -> . PointerType
    (225) TypeLit -> . SliceType
    (243) OperandName -> . ID
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (227) PointerType -> . TIMES Types
    (226) SliceType -> . LBRACKET RBRACKET Types

    RPAREN          shift and go to state 320
    ID              shift and go to state 323
    BOOL            shift and go to state 64
    BYTE            shift and go to state 65
    INT             shift and go to state 66
    UINT8           shift and go to state 67
    UINT16          shift and go to state 68
    UINT32          shift and go to state 69
    UINT64          shift and go to state 70
    INT8            shift and go to state 71
    INT16           shift and go to state 72
    INT32           shift and go to state 73
    INT64           shift and go to state 74
    UINT            shift and go to state 75
    FLOAT32         shift and go to state 76
    FLOAT64         shift and go to state 77
    UINTPTR         shift and go to state 78
    STRING          shift and go to state 79
    ERROR           shift and go to state 80
    STRUCT          shift and go to state 85
    LBRACKET        shift and go to state 86
    TIMES           shift and go to state 87

    ParameterList                  shift and go to state 321
    ParameterDecl                  shift and go to state 322
    Types                          shift and go to state 324
    Mytypes                        shift and go to state 61
    TypeLit                        shift and go to state 62
    OperandName                    shift and go to state 63
    StructType                     shift and go to state 81
    ArrayType                      shift and go to state 82
    PointerType                    shift and go to state 83
    SliceType                      shift and go to state 84

state 274

    (20) StatementList -> Statement StatementEnd StatementList .

    RBRACE          reduce using rule 20 (StatementList -> Statement StatementEnd StatementList .)
    CASE            reduce using rule 20 (StatementList -> Statement StatementEnd StatementList .)
    DEFAULT         reduce using rule 20 (StatementList -> Statement StatementEnd StatementList .)


state 275

    (67) LabeledStmt -> Label COLON RepeatNewline . Statement
    (23) Statement -> . Declaration
    (24) Statement -> . LabeledStmt
    (25) Statement -> . SimpleStmt
    (26) Statement -> . ReturnStmt
    (27) Statement -> . BreakStmt
    (28) Statement -> . ContinueStmt
    (29) Statement -> . FallthroughStmt
    (30) Statement -> . GotoStmt
    (31) Statement -> . Block
    (32) Statement -> . IfStmt
    (33) Statement -> . SwitchStmt
    (34) Statement -> . ForStmt
    (35) Statement -> . DeferStmt
    (36) Statement -> . PrintStmt
    (37) Statement -> . ScanIntStmt
    (38) Statement -> . ScanStrStmt
    (39) Declaration -> . ConstDecl
    (40) Declaration -> . TypeDecl
    (41) Declaration -> . VarDecl
    (67) LabeledStmt -> . Label COLON RepeatNewline Statement
    (69) SimpleStmt -> . Assignment
    (70) SimpleStmt -> . ShortVarDecl
    (71) SimpleStmt -> . IncDecStmt
    (72) SimpleStmt -> . ExpressionStmt
    (97) ReturnStmt -> . RETURN
    (98) ReturnStmt -> . RETURN ExpressionList
    (100) BreakStmt -> . BREAK
    (101) BreakStmt -> . BREAK Label
    (102) ContinueStmt -> . CONTINUE
    (103) ContinueStmt -> . CONTINUE Label
    (99) FallthroughStmt -> . FALLTHROUGH
    (104) GotoStmt -> . GOTO Label
    (105) Block -> . LBRACE RepeatNewline StatementList RBRACE
    (107) IfStmt -> . IF IfExp Block
    (108) IfStmt -> . IF IfExp Block EndIfMarker ELSE ElseMarker Block
    (109) IfStmt -> . IF IfExp Block EndIfMarker ELSE IfStmt
    (113) SwitchStmt -> . ExprSwitchStmt
    (123) ForStmt -> . FOR ForMarker RepeatNewline Block
    (124) ForStmt -> . FOR ForMarker RepeatNewline Condition Block
    (125) ForStmt -> . FOR ForMarker RepeatNewline ForClause Block
    (138) DeferStmt -> . DEFER PrimaryExpr Arguments
    (139) PrintStmt -> . PrintIntStmt
    (140) PrintStmt -> . PrintStrStmt
    (141) PrintStmt -> . PrintFloatStmt
    (145) ScanIntStmt -> . SCANINT Expression
    (146) ScanStrStmt -> . SCANSTR Expression
    (42) ConstDecl -> . CONST ConstSpec
    (45) TypeDecl -> . TYPE RepeatNewline TypeSpec
    (49) VarDecl -> . VAR RepeatNewline VarSpec
    (68) Label -> . ID
    (86) Assignment -> . ExpressionList AssignOp RepeatNewline ExpressionList
    (87) Assignment -> . ExpressionList EQUALS RepeatNewline ExpressionList
    (88) Assignment -> . ExpressionList EQUALS MallocExp
    (89) Assignment -> . ExpressionList EQUALS SinExp
    (90) Assignment -> . ExpressionList EQUALS CosExp
    (91) Assignment -> . ExpressionList EQUALS OpenFileExp
    (92) Assignment -> . ReadFileExp
    (93) Assignment -> . WriteFileExp
    (94) Assignment -> . CloseFileExp
    (95) Assignment -> . ExpressionList EQUALS NULL
    (96) ShortVarDecl -> . ID AUTOASIGN RepeatNewline Expression
    (74) IncDecStmt -> . Expression INCR
    (75) IncDecStmt -> . Expression DECR
    (73) ExpressionStmt -> . Expression
    (114) ExprSwitchStmt -> . SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE
    (142) PrintIntStmt -> . PRINTINT Expression
    (144) PrintStrStmt -> . PRINTSTR Expression
    (143) PrintFloatStmt -> . PRINTFLOAT Expression
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (253) ReadFileExp -> . READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (254) WriteFileExp -> . WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (255) CloseFileExp -> . CLOSEFILE LPAREN Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    RETURN          shift and go to state 121
    BREAK           shift and go to state 123
    CONTINUE        shift and go to state 124
    FALLTHROUGH     shift and go to state 125
    GOTO            shift and go to state 126
    LBRACE          shift and go to state 47
    IF              shift and go to state 127
    FOR             shift and go to state 129
    DEFER           shift and go to state 130
    SCANINT         shift and go to state 135
    SCANSTR         shift and go to state 137
    CONST           shift and go to state 35
    TYPE            shift and go to state 36
    VAR             shift and go to state 37
    ID              shift and go to state 138
    SWITCH          shift and go to state 143
    PRINTINT        shift and go to state 144
    PRINTSTR        shift and go to state 145
    PRINTFLOAT      shift and go to state 146
    READFILE        shift and go to state 147
    WRITEFILE       shift and go to state 149
    CLOSEFILE       shift and go to state 150
    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Label                          shift and go to state 116
    Statement                      shift and go to state 325
    Declaration                    shift and go to state 100
    LabeledStmt                    shift and go to state 101
    SimpleStmt                     shift and go to state 102
    ReturnStmt                     shift and go to state 103
    BreakStmt                      shift and go to state 104
    ContinueStmt                   shift and go to state 105
    FallthroughStmt                shift and go to state 106
    GotoStmt                       shift and go to state 107
    Block                          shift and go to state 108
    IfStmt                         shift and go to state 109
    SwitchStmt                     shift and go to state 110
    ForStmt                        shift and go to state 111
    DeferStmt                      shift and go to state 112
    PrintStmt                      shift and go to state 113
    ScanIntStmt                    shift and go to state 114
    ScanStrStmt                    shift and go to state 115
    ConstDecl                      shift and go to state 31
    TypeDecl                       shift and go to state 32
    VarDecl                        shift and go to state 33
    Assignment                     shift and go to state 117
    ShortVarDecl                   shift and go to state 118
    IncDecStmt                     shift and go to state 119
    ExpressionStmt                 shift and go to state 120
    ExpressionList                 shift and go to state 122
    ExprSwitchStmt                 shift and go to state 128
    PrimaryExpr                    shift and go to state 131
    PrintIntStmt                   shift and go to state 132
    PrintStrStmt                   shift and go to state 133
    PrintFloatStmt                 shift and go to state 134
    Expression                     shift and go to state 136
    ReadFileExp                    shift and go to state 139
    WriteFileExp                   shift and go to state 140
    CloseFileExp                   shift and go to state 141
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 276

    (86) Assignment -> ExpressionList AssignOp RepeatNewline . ExpressionList
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    ExpressionList                 shift and go to state 326
    Expression                     shift and go to state 196
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 277

    (87) Assignment -> ExpressionList EQUALS RepeatNewline . ExpressionList
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    ExpressionList                 shift and go to state 327
    Expression                     shift and go to state 196
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 278

    (88) Assignment -> ExpressionList EQUALS MallocExp .

    newline         reduce using rule 88 (Assignment -> ExpressionList EQUALS MallocExp .)
    SEMI            reduce using rule 88 (Assignment -> ExpressionList EQUALS MallocExp .)
    RBRACE          reduce using rule 88 (Assignment -> ExpressionList EQUALS MallocExp .)
    CASE            reduce using rule 88 (Assignment -> ExpressionList EQUALS MallocExp .)
    DEFAULT         reduce using rule 88 (Assignment -> ExpressionList EQUALS MallocExp .)
    LBRACE          reduce using rule 88 (Assignment -> ExpressionList EQUALS MallocExp .)


state 279

    (89) Assignment -> ExpressionList EQUALS SinExp .

    newline         reduce using rule 89 (Assignment -> ExpressionList EQUALS SinExp .)
    SEMI            reduce using rule 89 (Assignment -> ExpressionList EQUALS SinExp .)
    RBRACE          reduce using rule 89 (Assignment -> ExpressionList EQUALS SinExp .)
    CASE            reduce using rule 89 (Assignment -> ExpressionList EQUALS SinExp .)
    DEFAULT         reduce using rule 89 (Assignment -> ExpressionList EQUALS SinExp .)
    LBRACE          reduce using rule 89 (Assignment -> ExpressionList EQUALS SinExp .)


state 280

    (90) Assignment -> ExpressionList EQUALS CosExp .

    newline         reduce using rule 90 (Assignment -> ExpressionList EQUALS CosExp .)
    SEMI            reduce using rule 90 (Assignment -> ExpressionList EQUALS CosExp .)
    RBRACE          reduce using rule 90 (Assignment -> ExpressionList EQUALS CosExp .)
    CASE            reduce using rule 90 (Assignment -> ExpressionList EQUALS CosExp .)
    DEFAULT         reduce using rule 90 (Assignment -> ExpressionList EQUALS CosExp .)
    LBRACE          reduce using rule 90 (Assignment -> ExpressionList EQUALS CosExp .)


state 281

    (91) Assignment -> ExpressionList EQUALS OpenFileExp .

    newline         reduce using rule 91 (Assignment -> ExpressionList EQUALS OpenFileExp .)
    SEMI            reduce using rule 91 (Assignment -> ExpressionList EQUALS OpenFileExp .)
    RBRACE          reduce using rule 91 (Assignment -> ExpressionList EQUALS OpenFileExp .)
    CASE            reduce using rule 91 (Assignment -> ExpressionList EQUALS OpenFileExp .)
    DEFAULT         reduce using rule 91 (Assignment -> ExpressionList EQUALS OpenFileExp .)
    LBRACE          reduce using rule 91 (Assignment -> ExpressionList EQUALS OpenFileExp .)


state 282

    (95) Assignment -> ExpressionList EQUALS NULL .

    newline         reduce using rule 95 (Assignment -> ExpressionList EQUALS NULL .)
    SEMI            reduce using rule 95 (Assignment -> ExpressionList EQUALS NULL .)
    RBRACE          reduce using rule 95 (Assignment -> ExpressionList EQUALS NULL .)
    CASE            reduce using rule 95 (Assignment -> ExpressionList EQUALS NULL .)
    DEFAULT         reduce using rule 95 (Assignment -> ExpressionList EQUALS NULL .)
    LBRACE          reduce using rule 95 (Assignment -> ExpressionList EQUALS NULL .)


state 283

    (251) MallocExp -> MALLOC . LPAREN Expression RPAREN

    LPAREN          shift and go to state 328


state 284

    (256) SinExp -> SIN . LPAREN Expression RPAREN

    LPAREN          shift and go to state 329


state 285

    (257) CosExp -> COS . LPAREN Expression RPAREN

    LPAREN          shift and go to state 330


state 286

    (252) OpenFileExp -> OPENFILE . LPAREN Expression COMMA Expression COMMA Expression RPAREN

    LPAREN          shift and go to state 331


state 287

    (107) IfStmt -> IF IfExp Block .
    (108) IfStmt -> IF IfExp Block . EndIfMarker ELSE ElseMarker Block
    (109) IfStmt -> IF IfExp Block . EndIfMarker ELSE IfStmt
    (111) EndIfMarker -> . empty
    (258) empty -> .

    newline         reduce using rule 107 (IfStmt -> IF IfExp Block .)
    SEMI            reduce using rule 107 (IfStmt -> IF IfExp Block .)
    RBRACE          reduce using rule 107 (IfStmt -> IF IfExp Block .)
    CASE            reduce using rule 107 (IfStmt -> IF IfExp Block .)
    DEFAULT         reduce using rule 107 (IfStmt -> IF IfExp Block .)
    ELSE            reduce using rule 258 (empty -> .)

    EndIfMarker                    shift and go to state 332
    empty                          shift and go to state 333

state 288

    (106) IfExp -> IfMarker RepeatNewline . Expression
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 334
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 289

    (123) ForStmt -> FOR ForMarker RepeatNewline . Block
    (124) ForStmt -> FOR ForMarker RepeatNewline . Condition Block
    (125) ForStmt -> FOR ForMarker RepeatNewline . ForClause Block
    (105) Block -> . LBRACE RepeatNewline StatementList RBRACE
    (137) Condition -> . Expression
    (127) ForClause -> . terminator terminator
    (128) ForClause -> . InitStmt terminator terminator
    (129) ForClause -> . terminator Condition terminator
    (130) ForClause -> . terminator terminator PostStmt
    (131) ForClause -> . InitStmt terminator Condition terminator
    (132) ForClause -> . InitStmt terminator terminator PostStmt
    (133) ForClause -> . terminator Condition terminator PostStmt
    (134) ForClause -> . InitStmt terminator Condition terminator PostStmt
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (259) terminator -> . SEMI
    (135) InitStmt -> . SimpleStmt
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (69) SimpleStmt -> . Assignment
    (70) SimpleStmt -> . ShortVarDecl
    (71) SimpleStmt -> . IncDecStmt
    (72) SimpleStmt -> . ExpressionStmt
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (86) Assignment -> . ExpressionList AssignOp RepeatNewline ExpressionList
    (87) Assignment -> . ExpressionList EQUALS RepeatNewline ExpressionList
    (88) Assignment -> . ExpressionList EQUALS MallocExp
    (89) Assignment -> . ExpressionList EQUALS SinExp
    (90) Assignment -> . ExpressionList EQUALS CosExp
    (91) Assignment -> . ExpressionList EQUALS OpenFileExp
    (92) Assignment -> . ReadFileExp
    (93) Assignment -> . WriteFileExp
    (94) Assignment -> . CloseFileExp
    (95) Assignment -> . ExpressionList EQUALS NULL
    (96) ShortVarDecl -> . ID AUTOASIGN RepeatNewline Expression
    (74) IncDecStmt -> . Expression INCR
    (75) IncDecStmt -> . Expression DECR
    (73) ExpressionStmt -> . Expression
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (253) ReadFileExp -> . READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (254) WriteFileExp -> . WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (255) CloseFileExp -> . CLOSEFILE LPAREN Expression RPAREN
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LBRACE          shift and go to state 47
    SEMI            shift and go to state 20
    ID              shift and go to state 342
    NULL            shift and go to state 142
    READFILE        shift and go to state 147
    WRITEFILE       shift and go to state 149
    CLOSEFILE       shift and go to state 150
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Block                          shift and go to state 335
    Condition                      shift and go to state 336
    ForClause                      shift and go to state 337
    Expression                     shift and go to state 338
    terminator                     shift and go to state 339
    InitStmt                       shift and go to state 340
    Term1                          shift and go to state 151
    SimpleStmt                     shift and go to state 341
    Term2                          shift and go to state 152
    Assignment                     shift and go to state 117
    ShortVarDecl                   shift and go to state 118
    IncDecStmt                     shift and go to state 119
    ExpressionStmt                 shift and go to state 120
    Term3                          shift and go to state 153
    ExpressionList                 shift and go to state 122
    ReadFileExp                    shift and go to state 139
    WriteFileExp                   shift and go to state 140
    CloseFileExp                   shift and go to state 141
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 290

    (138) DeferStmt -> DEFER PrimaryExpr Arguments .
    (187) PrimaryExpr -> PrimaryExpr Arguments .

    newline         reduce using rule 138 (DeferStmt -> DEFER PrimaryExpr Arguments .)
    SEMI            reduce using rule 138 (DeferStmt -> DEFER PrimaryExpr Arguments .)
    RBRACE          reduce using rule 138 (DeferStmt -> DEFER PrimaryExpr Arguments .)
    CASE            reduce using rule 138 (DeferStmt -> DEFER PrimaryExpr Arguments .)
    DEFAULT         reduce using rule 138 (DeferStmt -> DEFER PrimaryExpr Arguments .)
    LPAREN          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    PERIOD          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
    LBRACKET        reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)


state 291

    (245) Selector -> PERIOD RepeatNewline . ID

    ID              shift and go to state 343


state 292

    (246) Index -> LBRACKET RepeatNewline . Expression RBRACKET
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 344
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 293

    (247) Arguments -> LPAREN RepeatNewline . ExpressionList RPAREN
    (248) Arguments -> LPAREN RepeatNewline . RPAREN
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    RPAREN          shift and go to state 346
    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    ExpressionList                 shift and go to state 345
    Expression                     shift and go to state 196
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 294

    (148) ExpressionList -> Expression COMMA RepeatNewline . ExpressionList
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 196
    ExpressionList                 shift and go to state 347
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 295

    (149) Expression -> Expression LOR RepeatNewline . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Term1                          shift and go to state 348
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 296

    (96) ShortVarDecl -> ID AUTOASIGN RepeatNewline . Expression
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 349
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 297

    (114) ExprSwitchStmt -> SWITCH RepeatNewline Expression . LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE
    (149) Expression -> Expression . LOR RepeatNewline Term1

    LBRACE          shift and go to state 350
    LOR             shift and go to state 230


state 298

    (253) ReadFileExp -> READFILE LPAREN Expression . COMMA Expression COMMA Expression RPAREN
    (149) Expression -> Expression . LOR RepeatNewline Term1

    COMMA           shift and go to state 351
    LOR             shift and go to state 230


state 299

    (188) PrimaryExpr -> LPAREN RepeatNewline Expression . RPAREN
    (149) Expression -> Expression . LOR RepeatNewline Term1

    RPAREN          shift and go to state 352
    LOR             shift and go to state 230


state 300

    (254) WriteFileExp -> WRITEFILE LPAREN Expression . COMMA Expression COMMA Expression RPAREN
    (149) Expression -> Expression . LOR RepeatNewline Term1

    COMMA           shift and go to state 353
    LOR             shift and go to state 230


state 301

    (255) CloseFileExp -> CLOSEFILE LPAREN Expression . RPAREN
    (149) Expression -> Expression . LOR RepeatNewline Term1

    RPAREN          shift and go to state 354
    LOR             shift and go to state 230


state 302

    (151) Term1 -> Term1 LAND RepeatNewline . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Term2                          shift and go to state 355
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 303

    (153) Term2 -> Term2 Relop RepeatNewline . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Term3                          shift and go to state 356
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 304

    (161) Term3 -> Term3 PLUS RepeatNewline . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Term4                          shift and go to state 357
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 305

    (162) Term3 -> Term3 MINUS RepeatNewline . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Term4                          shift and go to state 358
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 306

    (163) Term3 -> Term3 OR RepeatNewline . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Term4                          shift and go to state 359
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 307

    (164) Term3 -> Term3 XOR RepeatNewline . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Term4                          shift and go to state 360
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 308

    (167) Term4 -> Term4 TIMES RepeatNewline . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Term5                          shift and go to state 361
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 309

    (168) Term4 -> Term4 DIVIDE RepeatNewline . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Term5                          shift and go to state 362
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 310

    (169) Term4 -> Term4 MODULO RepeatNewline . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Term5                          shift and go to state 363
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 311

    (170) Term4 -> Term4 LSHIFT RepeatNewline . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Term5                          shift and go to state 364
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 312

    (171) Term4 -> Term4 RSHIFT RepeatNewline . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Term5                          shift and go to state 365
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 313

    (172) Term4 -> Term4 AND RepeatNewline . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Term5                          shift and go to state 366
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 314

    (173) Term4 -> Term4 ANDNOT RepeatNewline . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Term5                          shift and go to state 367
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 315

    (178) UnaryExp -> UnaryOp RepeatNewline UnaryExp .

    TIMES           reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    DIVIDE          reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    MODULO          reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    LSHIFT          reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    RSHIFT          reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    AND             reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    ANDNOT          reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    PLUS            reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    MINUS           reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    OR              reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    XOR             reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    LT              reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    GT              reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    LE              reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    GE              reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    EQ              reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    NE              reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    LAND            reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    INCR            reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    DECR            reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    COMMA           reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    LOR             reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    newline         reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    SEMI            reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    RBRACE          reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    EQUALS          reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    TIMESEQUAL      reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    DIVEQUAL        reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    MODEQUAL        reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    PLUSEQUAL       reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    MINUSEQUAL      reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    LSHIFTEQUAL     reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    RSHIFTEQUAL     reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    ANDEQUAL        reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    OREQUAL         reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    XOREQUAL        reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    CASE            reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    DEFAULT         reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    $end            reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    LBRACE          reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    RPAREN          reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    RBRACKET        reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)
    COLON           reduce using rule 178 (UnaryExp -> UnaryOp RepeatNewline UnaryExp .)


state 316

    (236) LiteralValue -> LBRACE RepeatNewline . RBRACE
    (237) LiteralValue -> LBRACE RepeatNewline . ElementList RBRACE
    (238) ElementList -> . KeyedElement RepeatKeyedElement
    (241) KeyedElement -> . Element
    (242) Element -> . BasicLit
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER

    RBRACE          shift and go to state 368
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174

    ElementList                    shift and go to state 369
    KeyedElement                   shift and go to state 370
    Element                        shift and go to state 371
    BasicLit                       shift and go to state 372
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169

state 317

    (228) StructType -> STRUCT M RepeatNewline LBRACE . RepeatNewline RepeatFieldDecl RBRACE
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    ID              reduce using rule 258 (empty -> .)
    RBRACE          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 373
    empty                          shift and go to state 5

state 318

    (234) ArrayType -> LBRACKET RepeatNewline ArrayLength RBRACKET . Types
    (219) Types -> . Mytypes
    (220) Types -> . TypeLit
    (221) Types -> . OperandName
    (202) Mytypes -> . BOOL
    (203) Mytypes -> . BYTE
    (204) Mytypes -> . INT
    (205) Mytypes -> . UINT8
    (206) Mytypes -> . UINT16
    (207) Mytypes -> . UINT32
    (208) Mytypes -> . UINT64
    (209) Mytypes -> . INT8
    (210) Mytypes -> . INT16
    (211) Mytypes -> . INT32
    (212) Mytypes -> . INT64
    (213) Mytypes -> . UINT
    (214) Mytypes -> . FLOAT32
    (215) Mytypes -> . FLOAT64
    (216) Mytypes -> . UINTPTR
    (217) Mytypes -> . STRING
    (218) Mytypes -> . ERROR
    (222) TypeLit -> . StructType
    (223) TypeLit -> . ArrayType
    (224) TypeLit -> . PointerType
    (225) TypeLit -> . SliceType
    (243) OperandName -> . ID
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (227) PointerType -> . TIMES Types
    (226) SliceType -> . LBRACKET RBRACKET Types

    BOOL            shift and go to state 64
    BYTE            shift and go to state 65
    INT             shift and go to state 66
    UINT8           shift and go to state 67
    UINT16          shift and go to state 68
    UINT32          shift and go to state 69
    UINT64          shift and go to state 70
    INT8            shift and go to state 71
    INT16           shift and go to state 72
    INT32           shift and go to state 73
    INT64           shift and go to state 74
    UINT            shift and go to state 75
    FLOAT32         shift and go to state 76
    FLOAT64         shift and go to state 77
    UINTPTR         shift and go to state 78
    STRING          shift and go to state 79
    ERROR           shift and go to state 80
    ID              shift and go to state 60
    STRUCT          shift and go to state 85
    LBRACKET        shift and go to state 86
    TIMES           shift and go to state 87

    Types                          shift and go to state 374
    Mytypes                        shift and go to state 61
    TypeLit                        shift and go to state 62
    OperandName                    shift and go to state 63
    StructType                     shift and go to state 81
    ArrayType                      shift and go to state 82
    PointerType                    shift and go to state 83
    SliceType                      shift and go to state 84

state 319

    (51) VarSpec -> IdentifierList Types EQUALS RepeatNewline . ExpressionList
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    ExpressionList                 shift and go to state 375
    Expression                     shift and go to state 196
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 320

    (58) Parameters -> LPAREN RepeatNewline RPAREN .

    BOOL            reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    BYTE            reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    INT             reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    UINT8           reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    UINT16          reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    UINT32          reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    UINT64          reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    INT8            reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    INT16           reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    INT32           reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    INT64           reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    UINT            reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    FLOAT32         reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    FLOAT64         reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    UINTPTR         reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    STRING          reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    ERROR           reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    ID              reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    STRUCT          reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    LBRACKET        reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    TIMES           reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    LBRACE          reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    newline         reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    SEMI            reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)
    $end            reduce using rule 58 (Parameters -> LPAREN RepeatNewline RPAREN .)


state 321

    (59) Parameters -> LPAREN RepeatNewline ParameterList . RPAREN

    RPAREN          shift and go to state 376


state 322

    (60) ParameterList -> ParameterDecl . RepeatParameterDecl
    (61) RepeatParameterDecl -> . COMMA RepeatNewline ParameterDecl RepeatParameterDecl
    (62) RepeatParameterDecl -> . empty
    (258) empty -> .

    COMMA           shift and go to state 378
    RPAREN          reduce using rule 258 (empty -> .)

    RepeatParameterDecl            shift and go to state 377
    empty                          shift and go to state 379

state 323

    (63) ParameterDecl -> ID . Types
    (243) OperandName -> ID .
    (219) Types -> . Mytypes
    (220) Types -> . TypeLit
    (221) Types -> . OperandName
    (202) Mytypes -> . BOOL
    (203) Mytypes -> . BYTE
    (204) Mytypes -> . INT
    (205) Mytypes -> . UINT8
    (206) Mytypes -> . UINT16
    (207) Mytypes -> . UINT32
    (208) Mytypes -> . UINT64
    (209) Mytypes -> . INT8
    (210) Mytypes -> . INT16
    (211) Mytypes -> . INT32
    (212) Mytypes -> . INT64
    (213) Mytypes -> . UINT
    (214) Mytypes -> . FLOAT32
    (215) Mytypes -> . FLOAT64
    (216) Mytypes -> . UINTPTR
    (217) Mytypes -> . STRING
    (218) Mytypes -> . ERROR
    (222) TypeLit -> . StructType
    (223) TypeLit -> . ArrayType
    (224) TypeLit -> . PointerType
    (225) TypeLit -> . SliceType
    (243) OperandName -> . ID
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (227) PointerType -> . TIMES Types
    (226) SliceType -> . LBRACKET RBRACKET Types

    COMMA           reduce using rule 243 (OperandName -> ID .)
    RPAREN          reduce using rule 243 (OperandName -> ID .)
    BOOL            shift and go to state 64
    BYTE            shift and go to state 65
    INT             shift and go to state 66
    UINT8           shift and go to state 67
    UINT16          shift and go to state 68
    UINT32          shift and go to state 69
    UINT64          shift and go to state 70
    INT8            shift and go to state 71
    INT16           shift and go to state 72
    INT32           shift and go to state 73
    INT64           shift and go to state 74
    UINT            shift and go to state 75
    FLOAT32         shift and go to state 76
    FLOAT64         shift and go to state 77
    UINTPTR         shift and go to state 78
    STRING          shift and go to state 79
    ERROR           shift and go to state 80
    ID              shift and go to state 60
    STRUCT          shift and go to state 85
    LBRACKET        shift and go to state 86
    TIMES           shift and go to state 87

    Types                          shift and go to state 380
    Mytypes                        shift and go to state 61
    TypeLit                        shift and go to state 62
    OperandName                    shift and go to state 63
    StructType                     shift and go to state 81
    ArrayType                      shift and go to state 82
    PointerType                    shift and go to state 83
    SliceType                      shift and go to state 84

state 324

    (64) ParameterDecl -> Types .

    COMMA           reduce using rule 64 (ParameterDecl -> Types .)
    RPAREN          reduce using rule 64 (ParameterDecl -> Types .)


state 325

    (67) LabeledStmt -> Label COLON RepeatNewline Statement .

    newline         reduce using rule 67 (LabeledStmt -> Label COLON RepeatNewline Statement .)
    SEMI            reduce using rule 67 (LabeledStmt -> Label COLON RepeatNewline Statement .)
    RBRACE          reduce using rule 67 (LabeledStmt -> Label COLON RepeatNewline Statement .)
    CASE            reduce using rule 67 (LabeledStmt -> Label COLON RepeatNewline Statement .)
    DEFAULT         reduce using rule 67 (LabeledStmt -> Label COLON RepeatNewline Statement .)


state 326

    (86) Assignment -> ExpressionList AssignOp RepeatNewline ExpressionList .

    newline         reduce using rule 86 (Assignment -> ExpressionList AssignOp RepeatNewline ExpressionList .)
    SEMI            reduce using rule 86 (Assignment -> ExpressionList AssignOp RepeatNewline ExpressionList .)
    RBRACE          reduce using rule 86 (Assignment -> ExpressionList AssignOp RepeatNewline ExpressionList .)
    CASE            reduce using rule 86 (Assignment -> ExpressionList AssignOp RepeatNewline ExpressionList .)
    DEFAULT         reduce using rule 86 (Assignment -> ExpressionList AssignOp RepeatNewline ExpressionList .)
    LBRACE          reduce using rule 86 (Assignment -> ExpressionList AssignOp RepeatNewline ExpressionList .)


state 327

    (87) Assignment -> ExpressionList EQUALS RepeatNewline ExpressionList .

    newline         reduce using rule 87 (Assignment -> ExpressionList EQUALS RepeatNewline ExpressionList .)
    SEMI            reduce using rule 87 (Assignment -> ExpressionList EQUALS RepeatNewline ExpressionList .)
    RBRACE          reduce using rule 87 (Assignment -> ExpressionList EQUALS RepeatNewline ExpressionList .)
    CASE            reduce using rule 87 (Assignment -> ExpressionList EQUALS RepeatNewline ExpressionList .)
    DEFAULT         reduce using rule 87 (Assignment -> ExpressionList EQUALS RepeatNewline ExpressionList .)
    LBRACE          reduce using rule 87 (Assignment -> ExpressionList EQUALS RepeatNewline ExpressionList .)


state 328

    (251) MallocExp -> MALLOC LPAREN . Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 381
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 329

    (256) SinExp -> SIN LPAREN . Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 382
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 330

    (257) CosExp -> COS LPAREN . Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 383
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 331

    (252) OpenFileExp -> OPENFILE LPAREN . Expression COMMA Expression COMMA Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 384
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 332

    (108) IfStmt -> IF IfExp Block EndIfMarker . ELSE ElseMarker Block
    (109) IfStmt -> IF IfExp Block EndIfMarker . ELSE IfStmt

    ELSE            shift and go to state 385


state 333

    (111) EndIfMarker -> empty .

    ELSE            reduce using rule 111 (EndIfMarker -> empty .)


state 334

    (106) IfExp -> IfMarker RepeatNewline Expression .
    (149) Expression -> Expression . LOR RepeatNewline Term1

    LBRACE          reduce using rule 106 (IfExp -> IfMarker RepeatNewline Expression .)
    LOR             shift and go to state 230


state 335

    (123) ForStmt -> FOR ForMarker RepeatNewline Block .

    newline         reduce using rule 123 (ForStmt -> FOR ForMarker RepeatNewline Block .)
    SEMI            reduce using rule 123 (ForStmt -> FOR ForMarker RepeatNewline Block .)
    RBRACE          reduce using rule 123 (ForStmt -> FOR ForMarker RepeatNewline Block .)
    CASE            reduce using rule 123 (ForStmt -> FOR ForMarker RepeatNewline Block .)
    DEFAULT         reduce using rule 123 (ForStmt -> FOR ForMarker RepeatNewline Block .)


state 336

    (124) ForStmt -> FOR ForMarker RepeatNewline Condition . Block
    (105) Block -> . LBRACE RepeatNewline StatementList RBRACE

    LBRACE          shift and go to state 47

    Block                          shift and go to state 386

state 337

    (125) ForStmt -> FOR ForMarker RepeatNewline ForClause . Block
    (105) Block -> . LBRACE RepeatNewline StatementList RBRACE

    LBRACE          shift and go to state 47

    Block                          shift and go to state 387

state 338

    (137) Condition -> Expression .
    (149) Expression -> Expression . LOR RepeatNewline Term1
    (74) IncDecStmt -> Expression . INCR
    (75) IncDecStmt -> Expression . DECR
    (73) ExpressionStmt -> Expression .
    (147) ExpressionList -> Expression .
    (148) ExpressionList -> Expression . COMMA RepeatNewline ExpressionList

    LBRACE          reduce using rule 137 (Condition -> Expression .)
    LOR             shift and go to state 230
    INCR            shift and go to state 227
    DECR            shift and go to state 228
    SEMI            reduce using rule 73 (ExpressionStmt -> Expression .)
    EQUALS          reduce using rule 147 (ExpressionList -> Expression .)
    TIMESEQUAL      reduce using rule 147 (ExpressionList -> Expression .)
    DIVEQUAL        reduce using rule 147 (ExpressionList -> Expression .)
    MODEQUAL        reduce using rule 147 (ExpressionList -> Expression .)
    PLUSEQUAL       reduce using rule 147 (ExpressionList -> Expression .)
    MINUSEQUAL      reduce using rule 147 (ExpressionList -> Expression .)
    LSHIFTEQUAL     reduce using rule 147 (ExpressionList -> Expression .)
    RSHIFTEQUAL     reduce using rule 147 (ExpressionList -> Expression .)
    ANDEQUAL        reduce using rule 147 (ExpressionList -> Expression .)
    OREQUAL         reduce using rule 147 (ExpressionList -> Expression .)
    XOREQUAL        reduce using rule 147 (ExpressionList -> Expression .)
    COMMA           shift and go to state 229


state 339

    (127) ForClause -> terminator . terminator
    (129) ForClause -> terminator . Condition terminator
    (130) ForClause -> terminator . terminator PostStmt
    (133) ForClause -> terminator . Condition terminator PostStmt
    (259) terminator -> . SEMI
    (137) Condition -> . Expression
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    SEMI            shift and go to state 20
    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    terminator                     shift and go to state 388
    Condition                      shift and go to state 389
    Expression                     shift and go to state 390
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 340

    (128) ForClause -> InitStmt . terminator terminator
    (131) ForClause -> InitStmt . terminator Condition terminator
    (132) ForClause -> InitStmt . terminator terminator PostStmt
    (134) ForClause -> InitStmt . terminator Condition terminator PostStmt
    (259) terminator -> . SEMI

    SEMI            shift and go to state 20

    terminator                     shift and go to state 391

state 341

    (135) InitStmt -> SimpleStmt .

    SEMI            reduce using rule 135 (InitStmt -> SimpleStmt .)


state 342

    (96) ShortVarDecl -> ID . AUTOASIGN RepeatNewline Expression
    (244) OperandName2 -> ID .

    AUTOASIGN       shift and go to state 232
    PERIOD          reduce using rule 244 (OperandName2 -> ID .)
    LBRACKET        reduce using rule 244 (OperandName2 -> ID .)
    LPAREN          reduce using rule 244 (OperandName2 -> ID .)
    TIMES           reduce using rule 244 (OperandName2 -> ID .)
    DIVIDE          reduce using rule 244 (OperandName2 -> ID .)
    MODULO          reduce using rule 244 (OperandName2 -> ID .)
    LSHIFT          reduce using rule 244 (OperandName2 -> ID .)
    RSHIFT          reduce using rule 244 (OperandName2 -> ID .)
    AND             reduce using rule 244 (OperandName2 -> ID .)
    ANDNOT          reduce using rule 244 (OperandName2 -> ID .)
    PLUS            reduce using rule 244 (OperandName2 -> ID .)
    MINUS           reduce using rule 244 (OperandName2 -> ID .)
    OR              reduce using rule 244 (OperandName2 -> ID .)
    XOR             reduce using rule 244 (OperandName2 -> ID .)
    LT              reduce using rule 244 (OperandName2 -> ID .)
    GT              reduce using rule 244 (OperandName2 -> ID .)
    LE              reduce using rule 244 (OperandName2 -> ID .)
    GE              reduce using rule 244 (OperandName2 -> ID .)
    EQ              reduce using rule 244 (OperandName2 -> ID .)
    NE              reduce using rule 244 (OperandName2 -> ID .)
    LAND            reduce using rule 244 (OperandName2 -> ID .)
    LOR             reduce using rule 244 (OperandName2 -> ID .)
    INCR            reduce using rule 244 (OperandName2 -> ID .)
    DECR            reduce using rule 244 (OperandName2 -> ID .)
    COMMA           reduce using rule 244 (OperandName2 -> ID .)
    LBRACE          reduce using rule 244 (OperandName2 -> ID .)
    SEMI            reduce using rule 244 (OperandName2 -> ID .)
    EQUALS          reduce using rule 244 (OperandName2 -> ID .)
    TIMESEQUAL      reduce using rule 244 (OperandName2 -> ID .)
    DIVEQUAL        reduce using rule 244 (OperandName2 -> ID .)
    MODEQUAL        reduce using rule 244 (OperandName2 -> ID .)
    PLUSEQUAL       reduce using rule 244 (OperandName2 -> ID .)
    MINUSEQUAL      reduce using rule 244 (OperandName2 -> ID .)
    LSHIFTEQUAL     reduce using rule 244 (OperandName2 -> ID .)
    RSHIFTEQUAL     reduce using rule 244 (OperandName2 -> ID .)
    ANDEQUAL        reduce using rule 244 (OperandName2 -> ID .)
    OREQUAL         reduce using rule 244 (OperandName2 -> ID .)
    XOREQUAL        reduce using rule 244 (OperandName2 -> ID .)


state 343

    (245) Selector -> PERIOD RepeatNewline ID .

    PERIOD          reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    LBRACKET        reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    LPAREN          reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    TIMES           reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    DIVIDE          reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    MODULO          reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    LSHIFT          reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    RSHIFT          reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    AND             reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    ANDNOT          reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    PLUS            reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    MINUS           reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    OR              reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    XOR             reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    LT              reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    GT              reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    LE              reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    GE              reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    EQ              reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    NE              reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    LAND            reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    INCR            reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    DECR            reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    COMMA           reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    LOR             reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    newline         reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    SEMI            reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    RBRACE          reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    EQUALS          reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    TIMESEQUAL      reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    DIVEQUAL        reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    MODEQUAL        reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    PLUSEQUAL       reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    MINUSEQUAL      reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    LSHIFTEQUAL     reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    RSHIFTEQUAL     reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    ANDEQUAL        reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    OREQUAL         reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    XOREQUAL        reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    CASE            reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    DEFAULT         reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    $end            reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    LBRACE          reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    RPAREN          reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    RBRACKET        reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)
    COLON           reduce using rule 245 (Selector -> PERIOD RepeatNewline ID .)


state 344

    (246) Index -> LBRACKET RepeatNewline Expression . RBRACKET
    (149) Expression -> Expression . LOR RepeatNewline Term1

    RBRACKET        shift and go to state 392
    LOR             shift and go to state 230


state 345

    (247) Arguments -> LPAREN RepeatNewline ExpressionList . RPAREN

    RPAREN          shift and go to state 393


state 346

    (248) Arguments -> LPAREN RepeatNewline RPAREN .

    PERIOD          reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    LBRACKET        reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    LPAREN          reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    TIMES           reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    DIVIDE          reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    MODULO          reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    LSHIFT          reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    RSHIFT          reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    AND             reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    ANDNOT          reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    PLUS            reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    MINUS           reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    OR              reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    XOR             reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    LT              reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    GT              reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    LE              reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    GE              reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    EQ              reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    NE              reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    LAND            reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    INCR            reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    DECR            reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    COMMA           reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    LOR             reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    newline         reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    SEMI            reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    RBRACE          reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    EQUALS          reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    TIMESEQUAL      reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    DIVEQUAL        reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    MODEQUAL        reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    PLUSEQUAL       reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    MINUSEQUAL      reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    LSHIFTEQUAL     reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    RSHIFTEQUAL     reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    ANDEQUAL        reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    OREQUAL         reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    XOREQUAL        reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    CASE            reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    DEFAULT         reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    $end            reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    LBRACE          reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    RPAREN          reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    RBRACKET        reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)
    COLON           reduce using rule 248 (Arguments -> LPAREN RepeatNewline RPAREN .)


state 347

    (148) ExpressionList -> Expression COMMA RepeatNewline ExpressionList .

    EQUALS          reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    TIMESEQUAL      reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    DIVEQUAL        reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    MODEQUAL        reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    PLUSEQUAL       reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    MINUSEQUAL      reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    LSHIFTEQUAL     reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    RSHIFTEQUAL     reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    ANDEQUAL        reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    OREQUAL         reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    XOREQUAL        reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    newline         reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    SEMI            reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    RBRACE          reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    CASE            reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    DEFAULT         reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    $end            reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    LBRACE          reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)
    RPAREN          reduce using rule 148 (ExpressionList -> Expression COMMA RepeatNewline ExpressionList .)


state 348

    (149) Expression -> Expression LOR RepeatNewline Term1 .
    (151) Term1 -> Term1 . LAND RepeatNewline Term2

    INCR            reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    DECR            reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    COMMA           reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    LOR             reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    newline         reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    SEMI            reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    RBRACE          reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    EQUALS          reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    TIMESEQUAL      reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    DIVEQUAL        reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    MODEQUAL        reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    PLUSEQUAL       reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    MINUSEQUAL      reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    LSHIFTEQUAL     reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    RSHIFTEQUAL     reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    ANDEQUAL        reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    OREQUAL         reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    XOREQUAL        reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    CASE            reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    DEFAULT         reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    $end            reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    LBRACE          reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    RPAREN          reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    RBRACKET        reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    COLON           reduce using rule 149 (Expression -> Expression LOR RepeatNewline Term1 .)
    LAND            shift and go to state 241


state 349

    (96) ShortVarDecl -> ID AUTOASIGN RepeatNewline Expression .
    (149) Expression -> Expression . LOR RepeatNewline Term1

    newline         reduce using rule 96 (ShortVarDecl -> ID AUTOASIGN RepeatNewline Expression .)
    SEMI            reduce using rule 96 (ShortVarDecl -> ID AUTOASIGN RepeatNewline Expression .)
    RBRACE          reduce using rule 96 (ShortVarDecl -> ID AUTOASIGN RepeatNewline Expression .)
    CASE            reduce using rule 96 (ShortVarDecl -> ID AUTOASIGN RepeatNewline Expression .)
    DEFAULT         reduce using rule 96 (ShortVarDecl -> ID AUTOASIGN RepeatNewline Expression .)
    LBRACE          reduce using rule 96 (ShortVarDecl -> ID AUTOASIGN RepeatNewline Expression .)
    LOR             shift and go to state 230


state 350

    (114) ExprSwitchStmt -> SWITCH RepeatNewline Expression LBRACE . RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    CASE            reduce using rule 258 (empty -> .)
    DEFAULT         reduce using rule 258 (empty -> .)
    RBRACE          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 394
    empty                          shift and go to state 5

state 351

    (253) ReadFileExp -> READFILE LPAREN Expression COMMA . Expression COMMA Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 395
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 352

    (188) PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .

    PERIOD          reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    LBRACKET        reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    LPAREN          reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    TIMES           reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    DIVIDE          reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    MODULO          reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    LSHIFT          reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    RSHIFT          reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    AND             reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    ANDNOT          reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    PLUS            reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    MINUS           reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    OR              reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    XOR             reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    LT              reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    GT              reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    LE              reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    GE              reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    EQ              reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    NE              reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    LAND            reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    INCR            reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    DECR            reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    COMMA           reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    LOR             reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    newline         reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    SEMI            reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    RBRACE          reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    EQUALS          reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    TIMESEQUAL      reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    DIVEQUAL        reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    MODEQUAL        reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    PLUSEQUAL       reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    MINUSEQUAL      reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    LSHIFTEQUAL     reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    RSHIFTEQUAL     reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    ANDEQUAL        reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    OREQUAL         reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    XOREQUAL        reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    CASE            reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    DEFAULT         reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    $end            reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    LBRACE          reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    RPAREN          reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    RBRACKET        reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)
    COLON           reduce using rule 188 (PrimaryExpr -> LPAREN RepeatNewline Expression RPAREN .)


state 353

    (254) WriteFileExp -> WRITEFILE LPAREN Expression COMMA . Expression COMMA Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 396
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 354

    (255) CloseFileExp -> CLOSEFILE LPAREN Expression RPAREN .

    newline         reduce using rule 255 (CloseFileExp -> CLOSEFILE LPAREN Expression RPAREN .)
    SEMI            reduce using rule 255 (CloseFileExp -> CLOSEFILE LPAREN Expression RPAREN .)
    RBRACE          reduce using rule 255 (CloseFileExp -> CLOSEFILE LPAREN Expression RPAREN .)
    CASE            reduce using rule 255 (CloseFileExp -> CLOSEFILE LPAREN Expression RPAREN .)
    DEFAULT         reduce using rule 255 (CloseFileExp -> CLOSEFILE LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 255 (CloseFileExp -> CLOSEFILE LPAREN Expression RPAREN .)


state 355

    (151) Term1 -> Term1 LAND RepeatNewline Term2 .
    (153) Term2 -> Term2 . Relop RepeatNewline Term3
    (155) Relop -> . LT
    (156) Relop -> . GT
    (157) Relop -> . LE
    (158) Relop -> . GE
    (159) Relop -> . EQ
    (160) Relop -> . NE

    LAND            reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    INCR            reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    DECR            reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    COMMA           reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    LOR             reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    newline         reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    SEMI            reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    RBRACE          reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    EQUALS          reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    TIMESEQUAL      reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    DIVEQUAL        reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    MODEQUAL        reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    PLUSEQUAL       reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    MINUSEQUAL      reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    LSHIFTEQUAL     reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    RSHIFTEQUAL     reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    ANDEQUAL        reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    OREQUAL         reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    XOREQUAL        reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    CASE            reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    DEFAULT         reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    $end            reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    LBRACE          reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    RPAREN          reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    RBRACKET        reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    COLON           reduce using rule 151 (Term1 -> Term1 LAND RepeatNewline Term2 .)
    LT              shift and go to state 243
    GT              shift and go to state 244
    LE              shift and go to state 245
    GE              shift and go to state 246
    EQ              shift and go to state 247
    NE              shift and go to state 248

    Relop                          shift and go to state 242

state 356

    (153) Term2 -> Term2 Relop RepeatNewline Term3 .
    (161) Term3 -> Term3 . PLUS RepeatNewline Term4
    (162) Term3 -> Term3 . MINUS RepeatNewline Term4
    (163) Term3 -> Term3 . OR RepeatNewline Term4
    (164) Term3 -> Term3 . XOR RepeatNewline Term4

    LT              reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    GT              reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    LE              reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    GE              reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    EQ              reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    NE              reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    LAND            reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    INCR            reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    DECR            reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    COMMA           reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    LOR             reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    newline         reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    SEMI            reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    RBRACE          reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    EQUALS          reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    TIMESEQUAL      reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    DIVEQUAL        reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    MODEQUAL        reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    PLUSEQUAL       reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    MINUSEQUAL      reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    LSHIFTEQUAL     reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    RSHIFTEQUAL     reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    ANDEQUAL        reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    OREQUAL         reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    XOREQUAL        reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    CASE            reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    DEFAULT         reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    $end            reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    LBRACE          reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    RPAREN          reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    RBRACKET        reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    COLON           reduce using rule 153 (Term2 -> Term2 Relop RepeatNewline Term3 .)
    PLUS            shift and go to state 249
    MINUS           shift and go to state 250
    OR              shift and go to state 251
    XOR             shift and go to state 252


state 357

    (161) Term3 -> Term3 PLUS RepeatNewline Term4 .
    (167) Term4 -> Term4 . TIMES RepeatNewline Term5
    (168) Term4 -> Term4 . DIVIDE RepeatNewline Term5
    (169) Term4 -> Term4 . MODULO RepeatNewline Term5
    (170) Term4 -> Term4 . LSHIFT RepeatNewline Term5
    (171) Term4 -> Term4 . RSHIFT RepeatNewline Term5
    (172) Term4 -> Term4 . AND RepeatNewline Term5
    (173) Term4 -> Term4 . ANDNOT RepeatNewline Term5

    PLUS            reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    MINUS           reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    OR              reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    XOR             reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    LT              reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    GT              reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    LE              reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    GE              reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    EQ              reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    NE              reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    LAND            reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    INCR            reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    DECR            reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    COMMA           reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    LOR             reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    newline         reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    SEMI            reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    RBRACE          reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    EQUALS          reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    TIMESEQUAL      reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    DIVEQUAL        reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    MODEQUAL        reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    PLUSEQUAL       reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    MINUSEQUAL      reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    LSHIFTEQUAL     reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    RSHIFTEQUAL     reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    ANDEQUAL        reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    OREQUAL         reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    XOREQUAL        reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    CASE            reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    DEFAULT         reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    $end            reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    LBRACE          reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    RPAREN          reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    RBRACKET        reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    COLON           reduce using rule 161 (Term3 -> Term3 PLUS RepeatNewline Term4 .)
    TIMES           shift and go to state 253
    DIVIDE          shift and go to state 254
    MODULO          shift and go to state 255
    LSHIFT          shift and go to state 256
    RSHIFT          shift and go to state 257
    AND             shift and go to state 258
    ANDNOT          shift and go to state 259


state 358

    (162) Term3 -> Term3 MINUS RepeatNewline Term4 .
    (167) Term4 -> Term4 . TIMES RepeatNewline Term5
    (168) Term4 -> Term4 . DIVIDE RepeatNewline Term5
    (169) Term4 -> Term4 . MODULO RepeatNewline Term5
    (170) Term4 -> Term4 . LSHIFT RepeatNewline Term5
    (171) Term4 -> Term4 . RSHIFT RepeatNewline Term5
    (172) Term4 -> Term4 . AND RepeatNewline Term5
    (173) Term4 -> Term4 . ANDNOT RepeatNewline Term5

    PLUS            reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    MINUS           reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    OR              reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    XOR             reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    LT              reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    GT              reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    LE              reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    GE              reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    EQ              reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    NE              reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    LAND            reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    INCR            reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    DECR            reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    COMMA           reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    LOR             reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    newline         reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    SEMI            reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    RBRACE          reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    EQUALS          reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    TIMESEQUAL      reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    DIVEQUAL        reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    MODEQUAL        reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    PLUSEQUAL       reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    MINUSEQUAL      reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    LSHIFTEQUAL     reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    RSHIFTEQUAL     reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    ANDEQUAL        reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    OREQUAL         reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    XOREQUAL        reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    CASE            reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    DEFAULT         reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    $end            reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    LBRACE          reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    RPAREN          reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    RBRACKET        reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    COLON           reduce using rule 162 (Term3 -> Term3 MINUS RepeatNewline Term4 .)
    TIMES           shift and go to state 253
    DIVIDE          shift and go to state 254
    MODULO          shift and go to state 255
    LSHIFT          shift and go to state 256
    RSHIFT          shift and go to state 257
    AND             shift and go to state 258
    ANDNOT          shift and go to state 259


state 359

    (163) Term3 -> Term3 OR RepeatNewline Term4 .
    (167) Term4 -> Term4 . TIMES RepeatNewline Term5
    (168) Term4 -> Term4 . DIVIDE RepeatNewline Term5
    (169) Term4 -> Term4 . MODULO RepeatNewline Term5
    (170) Term4 -> Term4 . LSHIFT RepeatNewline Term5
    (171) Term4 -> Term4 . RSHIFT RepeatNewline Term5
    (172) Term4 -> Term4 . AND RepeatNewline Term5
    (173) Term4 -> Term4 . ANDNOT RepeatNewline Term5

    PLUS            reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    MINUS           reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    OR              reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    XOR             reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    LT              reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    GT              reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    LE              reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    GE              reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    EQ              reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    NE              reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    LAND            reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    INCR            reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    DECR            reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    COMMA           reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    LOR             reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    newline         reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    SEMI            reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    RBRACE          reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    EQUALS          reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    TIMESEQUAL      reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    DIVEQUAL        reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    MODEQUAL        reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    PLUSEQUAL       reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    MINUSEQUAL      reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    LSHIFTEQUAL     reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    RSHIFTEQUAL     reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    ANDEQUAL        reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    OREQUAL         reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    XOREQUAL        reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    CASE            reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    DEFAULT         reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    $end            reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    LBRACE          reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    RPAREN          reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    RBRACKET        reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    COLON           reduce using rule 163 (Term3 -> Term3 OR RepeatNewline Term4 .)
    TIMES           shift and go to state 253
    DIVIDE          shift and go to state 254
    MODULO          shift and go to state 255
    LSHIFT          shift and go to state 256
    RSHIFT          shift and go to state 257
    AND             shift and go to state 258
    ANDNOT          shift and go to state 259


state 360

    (164) Term3 -> Term3 XOR RepeatNewline Term4 .
    (167) Term4 -> Term4 . TIMES RepeatNewline Term5
    (168) Term4 -> Term4 . DIVIDE RepeatNewline Term5
    (169) Term4 -> Term4 . MODULO RepeatNewline Term5
    (170) Term4 -> Term4 . LSHIFT RepeatNewline Term5
    (171) Term4 -> Term4 . RSHIFT RepeatNewline Term5
    (172) Term4 -> Term4 . AND RepeatNewline Term5
    (173) Term4 -> Term4 . ANDNOT RepeatNewline Term5

    PLUS            reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    MINUS           reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    OR              reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    XOR             reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    LT              reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    GT              reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    LE              reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    GE              reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    EQ              reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    NE              reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    LAND            reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    INCR            reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    DECR            reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    COMMA           reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    LOR             reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    newline         reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    SEMI            reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    RBRACE          reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    EQUALS          reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    TIMESEQUAL      reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    DIVEQUAL        reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    MODEQUAL        reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    PLUSEQUAL       reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    MINUSEQUAL      reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    LSHIFTEQUAL     reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    RSHIFTEQUAL     reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    ANDEQUAL        reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    OREQUAL         reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    XOREQUAL        reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    CASE            reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    DEFAULT         reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    $end            reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    LBRACE          reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    RPAREN          reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    RBRACKET        reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    COLON           reduce using rule 164 (Term3 -> Term3 XOR RepeatNewline Term4 .)
    TIMES           shift and go to state 253
    DIVIDE          shift and go to state 254
    MODULO          shift and go to state 255
    LSHIFT          shift and go to state 256
    RSHIFT          shift and go to state 257
    AND             shift and go to state 258
    ANDNOT          shift and go to state 259


state 361

    (167) Term4 -> Term4 TIMES RepeatNewline Term5 .

    TIMES           reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    DIVIDE          reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    MODULO          reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    LSHIFT          reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    RSHIFT          reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    AND             reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    ANDNOT          reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    PLUS            reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    MINUS           reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    OR              reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    XOR             reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    LT              reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    GT              reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    LE              reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    GE              reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    EQ              reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    NE              reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    LAND            reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    INCR            reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    DECR            reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    COMMA           reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    LOR             reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    newline         reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    SEMI            reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    RBRACE          reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    EQUALS          reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    TIMESEQUAL      reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    DIVEQUAL        reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    MODEQUAL        reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    PLUSEQUAL       reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    MINUSEQUAL      reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    LSHIFTEQUAL     reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    RSHIFTEQUAL     reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    ANDEQUAL        reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    OREQUAL         reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    XOREQUAL        reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    CASE            reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    DEFAULT         reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    $end            reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    LBRACE          reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    RPAREN          reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    RBRACKET        reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)
    COLON           reduce using rule 167 (Term4 -> Term4 TIMES RepeatNewline Term5 .)


state 362

    (168) Term4 -> Term4 DIVIDE RepeatNewline Term5 .

    TIMES           reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    DIVIDE          reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    MODULO          reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    LSHIFT          reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    RSHIFT          reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    AND             reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    ANDNOT          reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    PLUS            reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    MINUS           reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    OR              reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    XOR             reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    LT              reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    GT              reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    LE              reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    GE              reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    EQ              reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    NE              reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    LAND            reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    INCR            reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    DECR            reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    COMMA           reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    LOR             reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    newline         reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    SEMI            reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    RBRACE          reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    EQUALS          reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    TIMESEQUAL      reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    DIVEQUAL        reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    MODEQUAL        reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    PLUSEQUAL       reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    MINUSEQUAL      reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    LSHIFTEQUAL     reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    RSHIFTEQUAL     reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    ANDEQUAL        reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    OREQUAL         reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    XOREQUAL        reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    CASE            reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    DEFAULT         reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    $end            reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    LBRACE          reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    RPAREN          reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    RBRACKET        reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)
    COLON           reduce using rule 168 (Term4 -> Term4 DIVIDE RepeatNewline Term5 .)


state 363

    (169) Term4 -> Term4 MODULO RepeatNewline Term5 .

    TIMES           reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    DIVIDE          reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    MODULO          reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    LSHIFT          reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    RSHIFT          reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    AND             reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    ANDNOT          reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    PLUS            reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    MINUS           reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    OR              reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    XOR             reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    LT              reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    GT              reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    LE              reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    GE              reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    EQ              reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    NE              reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    LAND            reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    INCR            reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    DECR            reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    COMMA           reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    LOR             reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    newline         reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    SEMI            reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    RBRACE          reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    EQUALS          reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    TIMESEQUAL      reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    DIVEQUAL        reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    MODEQUAL        reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    PLUSEQUAL       reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    MINUSEQUAL      reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    LSHIFTEQUAL     reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    RSHIFTEQUAL     reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    ANDEQUAL        reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    OREQUAL         reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    XOREQUAL        reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    CASE            reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    DEFAULT         reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    $end            reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    LBRACE          reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    RPAREN          reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    RBRACKET        reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)
    COLON           reduce using rule 169 (Term4 -> Term4 MODULO RepeatNewline Term5 .)


state 364

    (170) Term4 -> Term4 LSHIFT RepeatNewline Term5 .

    TIMES           reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    DIVIDE          reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    MODULO          reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    LSHIFT          reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    RSHIFT          reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    AND             reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    ANDNOT          reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    PLUS            reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    MINUS           reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    OR              reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    XOR             reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    LT              reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    GT              reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    LE              reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    GE              reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    EQ              reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    NE              reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    LAND            reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    INCR            reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    DECR            reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    COMMA           reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    LOR             reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    newline         reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    SEMI            reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    RBRACE          reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    EQUALS          reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    TIMESEQUAL      reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    DIVEQUAL        reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    MODEQUAL        reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    PLUSEQUAL       reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    MINUSEQUAL      reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    LSHIFTEQUAL     reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    RSHIFTEQUAL     reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    ANDEQUAL        reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    OREQUAL         reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    XOREQUAL        reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    CASE            reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    DEFAULT         reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    $end            reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    LBRACE          reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    RPAREN          reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    RBRACKET        reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)
    COLON           reduce using rule 170 (Term4 -> Term4 LSHIFT RepeatNewline Term5 .)


state 365

    (171) Term4 -> Term4 RSHIFT RepeatNewline Term5 .

    TIMES           reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    DIVIDE          reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    MODULO          reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    LSHIFT          reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    RSHIFT          reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    AND             reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    ANDNOT          reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    PLUS            reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    MINUS           reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    OR              reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    XOR             reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    LT              reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    GT              reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    LE              reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    GE              reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    EQ              reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    NE              reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    LAND            reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    INCR            reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    DECR            reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    COMMA           reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    LOR             reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    newline         reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    SEMI            reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    RBRACE          reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    EQUALS          reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    TIMESEQUAL      reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    DIVEQUAL        reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    MODEQUAL        reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    PLUSEQUAL       reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    MINUSEQUAL      reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    LSHIFTEQUAL     reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    RSHIFTEQUAL     reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    ANDEQUAL        reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    OREQUAL         reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    XOREQUAL        reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    CASE            reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    DEFAULT         reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    $end            reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    LBRACE          reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    RPAREN          reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    RBRACKET        reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)
    COLON           reduce using rule 171 (Term4 -> Term4 RSHIFT RepeatNewline Term5 .)


state 366

    (172) Term4 -> Term4 AND RepeatNewline Term5 .

    TIMES           reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    DIVIDE          reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    MODULO          reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    LSHIFT          reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    RSHIFT          reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    AND             reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    ANDNOT          reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    PLUS            reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    MINUS           reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    OR              reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    XOR             reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    LT              reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    GT              reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    LE              reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    GE              reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    EQ              reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    NE              reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    LAND            reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    INCR            reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    DECR            reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    COMMA           reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    LOR             reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    newline         reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    SEMI            reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    RBRACE          reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    EQUALS          reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    TIMESEQUAL      reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    DIVEQUAL        reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    MODEQUAL        reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    PLUSEQUAL       reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    MINUSEQUAL      reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    LSHIFTEQUAL     reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    RSHIFTEQUAL     reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    ANDEQUAL        reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    OREQUAL         reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    XOREQUAL        reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    CASE            reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    DEFAULT         reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    $end            reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    LBRACE          reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    RPAREN          reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    RBRACKET        reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)
    COLON           reduce using rule 172 (Term4 -> Term4 AND RepeatNewline Term5 .)


state 367

    (173) Term4 -> Term4 ANDNOT RepeatNewline Term5 .

    TIMES           reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    DIVIDE          reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    MODULO          reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    LSHIFT          reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    RSHIFT          reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    AND             reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    ANDNOT          reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    PLUS            reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    MINUS           reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    OR              reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    XOR             reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    LT              reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    GT              reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    LE              reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    GE              reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    EQ              reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    NE              reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    LAND            reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    INCR            reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    DECR            reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    COMMA           reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    LOR             reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    newline         reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    SEMI            reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    RBRACE          reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    EQUALS          reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    TIMESEQUAL      reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    DIVEQUAL        reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    MODEQUAL        reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    PLUSEQUAL       reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    MINUSEQUAL      reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    LSHIFTEQUAL     reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    RSHIFTEQUAL     reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    ANDEQUAL        reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    OREQUAL         reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    XOREQUAL        reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    CASE            reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    DEFAULT         reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    $end            reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    LBRACE          reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    RPAREN          reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    RBRACKET        reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)
    COLON           reduce using rule 173 (Term4 -> Term4 ANDNOT RepeatNewline Term5 .)


state 368

    (236) LiteralValue -> LBRACE RepeatNewline RBRACE .

    TIMES           reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    DIVIDE          reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    MODULO          reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    LSHIFT          reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    RSHIFT          reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    AND             reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    ANDNOT          reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    PLUS            reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    MINUS           reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    OR              reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    XOR             reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    LT              reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    GT              reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    LE              reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    GE              reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    EQ              reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    NE              reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    LAND            reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    INCR            reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    DECR            reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    COMMA           reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    LOR             reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    newline         reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    SEMI            reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    RBRACE          reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    EQUALS          reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    TIMESEQUAL      reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    DIVEQUAL        reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    MODEQUAL        reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    PLUSEQUAL       reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    MINUSEQUAL      reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    LSHIFTEQUAL     reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    RSHIFTEQUAL     reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    ANDEQUAL        reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    OREQUAL         reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    XOREQUAL        reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    CASE            reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    DEFAULT         reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    $end            reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    LBRACE          reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    RPAREN          reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    RBRACKET        reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)
    COLON           reduce using rule 236 (LiteralValue -> LBRACE RepeatNewline RBRACE .)


state 369

    (237) LiteralValue -> LBRACE RepeatNewline ElementList . RBRACE

    RBRACE          shift and go to state 397


state 370

    (238) ElementList -> KeyedElement . RepeatKeyedElement
    (239) RepeatKeyedElement -> . COMMA RepeatNewline KeyedElement RepeatKeyedElement
    (240) RepeatKeyedElement -> . empty
    (258) empty -> .

    COMMA           shift and go to state 399
    RBRACE          reduce using rule 258 (empty -> .)

    RepeatKeyedElement             shift and go to state 398
    empty                          shift and go to state 400

state 371

    (241) KeyedElement -> Element .

    COMMA           reduce using rule 241 (KeyedElement -> Element .)
    RBRACE          reduce using rule 241 (KeyedElement -> Element .)


state 372

    (242) Element -> BasicLit .

    COMMA           reduce using rule 242 (Element -> BasicLit .)
    RBRACE          reduce using rule 242 (Element -> BasicLit .)


state 373

    (228) StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline . RepeatFieldDecl RBRACE
    (230) RepeatFieldDecl -> . FieldDecl StatementEnd RepeatFieldDecl
    (231) RepeatFieldDecl -> . FieldDecl
    (232) RepeatFieldDecl -> . empty
    (233) FieldDecl -> . IdentifierList Types
    (258) empty -> .
    (249) IdentifierList -> . ID
    (250) IdentifierList -> . IdentifierList COMMA RepeatNewline ID

    RBRACE          reduce using rule 258 (empty -> .)
    ID              shift and go to state 50

    RepeatFieldDecl                shift and go to state 401
    FieldDecl                      shift and go to state 402
    empty                          shift and go to state 403
    IdentifierList                 shift and go to state 404

state 374

    (234) ArrayType -> LBRACKET RepeatNewline ArrayLength RBRACKET Types .

    EQUALS          reduce using rule 234 (ArrayType -> LBRACKET RepeatNewline ArrayLength RBRACKET Types .)
    newline         reduce using rule 234 (ArrayType -> LBRACKET RepeatNewline ArrayLength RBRACKET Types .)
    SEMI            reduce using rule 234 (ArrayType -> LBRACKET RepeatNewline ArrayLength RBRACKET Types .)
    $end            reduce using rule 234 (ArrayType -> LBRACKET RepeatNewline ArrayLength RBRACKET Types .)
    RBRACE          reduce using rule 234 (ArrayType -> LBRACKET RepeatNewline ArrayLength RBRACKET Types .)
    CASE            reduce using rule 234 (ArrayType -> LBRACKET RepeatNewline ArrayLength RBRACKET Types .)
    DEFAULT         reduce using rule 234 (ArrayType -> LBRACKET RepeatNewline ArrayLength RBRACKET Types .)
    LBRACE          reduce using rule 234 (ArrayType -> LBRACKET RepeatNewline ArrayLength RBRACKET Types .)
    COMMA           reduce using rule 234 (ArrayType -> LBRACKET RepeatNewline ArrayLength RBRACKET Types .)
    RPAREN          reduce using rule 234 (ArrayType -> LBRACKET RepeatNewline ArrayLength RBRACKET Types .)


state 375

    (51) VarSpec -> IdentifierList Types EQUALS RepeatNewline ExpressionList .

    newline         reduce using rule 51 (VarSpec -> IdentifierList Types EQUALS RepeatNewline ExpressionList .)
    SEMI            reduce using rule 51 (VarSpec -> IdentifierList Types EQUALS RepeatNewline ExpressionList .)
    $end            reduce using rule 51 (VarSpec -> IdentifierList Types EQUALS RepeatNewline ExpressionList .)
    RBRACE          reduce using rule 51 (VarSpec -> IdentifierList Types EQUALS RepeatNewline ExpressionList .)
    CASE            reduce using rule 51 (VarSpec -> IdentifierList Types EQUALS RepeatNewline ExpressionList .)
    DEFAULT         reduce using rule 51 (VarSpec -> IdentifierList Types EQUALS RepeatNewline ExpressionList .)


state 376

    (59) Parameters -> LPAREN RepeatNewline ParameterList RPAREN .

    BOOL            reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    BYTE            reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    INT             reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    UINT8           reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    UINT16          reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    UINT32          reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    UINT64          reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    INT8            reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    INT16           reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    INT32           reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    INT64           reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    UINT            reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    FLOAT32         reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    FLOAT64         reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    UINTPTR         reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    STRING          reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    ERROR           reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    ID              reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    STRUCT          reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    LBRACKET        reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    TIMES           reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    LBRACE          reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    newline         reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    SEMI            reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)
    $end            reduce using rule 59 (Parameters -> LPAREN RepeatNewline ParameterList RPAREN .)


state 377

    (60) ParameterList -> ParameterDecl RepeatParameterDecl .

    RPAREN          reduce using rule 60 (ParameterList -> ParameterDecl RepeatParameterDecl .)


state 378

    (61) RepeatParameterDecl -> COMMA . RepeatNewline ParameterDecl RepeatParameterDecl
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    ID              reduce using rule 258 (empty -> .)
    BOOL            reduce using rule 258 (empty -> .)
    BYTE            reduce using rule 258 (empty -> .)
    INT             reduce using rule 258 (empty -> .)
    UINT8           reduce using rule 258 (empty -> .)
    UINT16          reduce using rule 258 (empty -> .)
    UINT32          reduce using rule 258 (empty -> .)
    UINT64          reduce using rule 258 (empty -> .)
    INT8            reduce using rule 258 (empty -> .)
    INT16           reduce using rule 258 (empty -> .)
    INT32           reduce using rule 258 (empty -> .)
    INT64           reduce using rule 258 (empty -> .)
    UINT            reduce using rule 258 (empty -> .)
    FLOAT32         reduce using rule 258 (empty -> .)
    FLOAT64         reduce using rule 258 (empty -> .)
    UINTPTR         reduce using rule 258 (empty -> .)
    STRING          reduce using rule 258 (empty -> .)
    ERROR           reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 405
    empty                          shift and go to state 5

state 379

    (62) RepeatParameterDecl -> empty .

    RPAREN          reduce using rule 62 (RepeatParameterDecl -> empty .)


state 380

    (63) ParameterDecl -> ID Types .

    COMMA           reduce using rule 63 (ParameterDecl -> ID Types .)
    RPAREN          reduce using rule 63 (ParameterDecl -> ID Types .)


state 381

    (251) MallocExp -> MALLOC LPAREN Expression . RPAREN
    (149) Expression -> Expression . LOR RepeatNewline Term1

    RPAREN          shift and go to state 406
    LOR             shift and go to state 230


state 382

    (256) SinExp -> SIN LPAREN Expression . RPAREN
    (149) Expression -> Expression . LOR RepeatNewline Term1

    RPAREN          shift and go to state 407
    LOR             shift and go to state 230


state 383

    (257) CosExp -> COS LPAREN Expression . RPAREN
    (149) Expression -> Expression . LOR RepeatNewline Term1

    RPAREN          shift and go to state 408
    LOR             shift and go to state 230


state 384

    (252) OpenFileExp -> OPENFILE LPAREN Expression . COMMA Expression COMMA Expression RPAREN
    (149) Expression -> Expression . LOR RepeatNewline Term1

    COMMA           shift and go to state 409
    LOR             shift and go to state 230


state 385

    (108) IfStmt -> IF IfExp Block EndIfMarker ELSE . ElseMarker Block
    (109) IfStmt -> IF IfExp Block EndIfMarker ELSE . IfStmt
    (112) ElseMarker -> . empty
    (107) IfStmt -> . IF IfExp Block
    (108) IfStmt -> . IF IfExp Block EndIfMarker ELSE ElseMarker Block
    (109) IfStmt -> . IF IfExp Block EndIfMarker ELSE IfStmt
    (258) empty -> .

    IF              shift and go to state 127
    LBRACE          reduce using rule 258 (empty -> .)

    ElseMarker                     shift and go to state 410
    IfStmt                         shift and go to state 411
    empty                          shift and go to state 412

state 386

    (124) ForStmt -> FOR ForMarker RepeatNewline Condition Block .

    newline         reduce using rule 124 (ForStmt -> FOR ForMarker RepeatNewline Condition Block .)
    SEMI            reduce using rule 124 (ForStmt -> FOR ForMarker RepeatNewline Condition Block .)
    RBRACE          reduce using rule 124 (ForStmt -> FOR ForMarker RepeatNewline Condition Block .)
    CASE            reduce using rule 124 (ForStmt -> FOR ForMarker RepeatNewline Condition Block .)
    DEFAULT         reduce using rule 124 (ForStmt -> FOR ForMarker RepeatNewline Condition Block .)


state 387

    (125) ForStmt -> FOR ForMarker RepeatNewline ForClause Block .

    newline         reduce using rule 125 (ForStmt -> FOR ForMarker RepeatNewline ForClause Block .)
    SEMI            reduce using rule 125 (ForStmt -> FOR ForMarker RepeatNewline ForClause Block .)
    RBRACE          reduce using rule 125 (ForStmt -> FOR ForMarker RepeatNewline ForClause Block .)
    CASE            reduce using rule 125 (ForStmt -> FOR ForMarker RepeatNewline ForClause Block .)
    DEFAULT         reduce using rule 125 (ForStmt -> FOR ForMarker RepeatNewline ForClause Block .)


state 388

    (127) ForClause -> terminator terminator .
    (130) ForClause -> terminator terminator . PostStmt
    (136) PostStmt -> . SimpleStmt
    (69) SimpleStmt -> . Assignment
    (70) SimpleStmt -> . ShortVarDecl
    (71) SimpleStmt -> . IncDecStmt
    (72) SimpleStmt -> . ExpressionStmt
    (86) Assignment -> . ExpressionList AssignOp RepeatNewline ExpressionList
    (87) Assignment -> . ExpressionList EQUALS RepeatNewline ExpressionList
    (88) Assignment -> . ExpressionList EQUALS MallocExp
    (89) Assignment -> . ExpressionList EQUALS SinExp
    (90) Assignment -> . ExpressionList EQUALS CosExp
    (91) Assignment -> . ExpressionList EQUALS OpenFileExp
    (92) Assignment -> . ReadFileExp
    (93) Assignment -> . WriteFileExp
    (94) Assignment -> . CloseFileExp
    (95) Assignment -> . ExpressionList EQUALS NULL
    (96) ShortVarDecl -> . ID AUTOASIGN RepeatNewline Expression
    (74) IncDecStmt -> . Expression INCR
    (75) IncDecStmt -> . Expression DECR
    (73) ExpressionStmt -> . Expression
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (253) ReadFileExp -> . READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (254) WriteFileExp -> . WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (255) CloseFileExp -> . CLOSEFILE LPAREN Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LBRACE          reduce using rule 127 (ForClause -> terminator terminator .)
    ID              shift and go to state 342
    READFILE        shift and go to state 147
    WRITEFILE       shift and go to state 149
    CLOSEFILE       shift and go to state 150
    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    PostStmt                       shift and go to state 413
    SimpleStmt                     shift and go to state 414
    Assignment                     shift and go to state 117
    ShortVarDecl                   shift and go to state 118
    IncDecStmt                     shift and go to state 119
    ExpressionStmt                 shift and go to state 120
    ExpressionList                 shift and go to state 122
    ReadFileExp                    shift and go to state 139
    WriteFileExp                   shift and go to state 140
    CloseFileExp                   shift and go to state 141
    Expression                     shift and go to state 136
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 389

    (129) ForClause -> terminator Condition . terminator
    (133) ForClause -> terminator Condition . terminator PostStmt
    (259) terminator -> . SEMI

    SEMI            shift and go to state 20

    terminator                     shift and go to state 415

state 390

    (137) Condition -> Expression .
    (149) Expression -> Expression . LOR RepeatNewline Term1

    SEMI            reduce using rule 137 (Condition -> Expression .)
    LOR             shift and go to state 230


state 391

    (128) ForClause -> InitStmt terminator . terminator
    (131) ForClause -> InitStmt terminator . Condition terminator
    (132) ForClause -> InitStmt terminator . terminator PostStmt
    (134) ForClause -> InitStmt terminator . Condition terminator PostStmt
    (259) terminator -> . SEMI
    (137) Condition -> . Expression
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    SEMI            shift and go to state 20
    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    terminator                     shift and go to state 416
    Condition                      shift and go to state 417
    Expression                     shift and go to state 390
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 392

    (246) Index -> LBRACKET RepeatNewline Expression RBRACKET .

    PERIOD          reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    LBRACKET        reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    LPAREN          reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    TIMES           reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    DIVIDE          reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    MODULO          reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    LSHIFT          reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    RSHIFT          reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    AND             reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    ANDNOT          reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    PLUS            reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    MINUS           reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    OR              reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    XOR             reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    LT              reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    GT              reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    LE              reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    GE              reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    EQ              reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    NE              reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    LAND            reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    INCR            reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    DECR            reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    COMMA           reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    LOR             reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    newline         reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    SEMI            reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    RBRACE          reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    EQUALS          reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    TIMESEQUAL      reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    DIVEQUAL        reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    MODEQUAL        reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    PLUSEQUAL       reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    MINUSEQUAL      reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    LSHIFTEQUAL     reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    RSHIFTEQUAL     reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    ANDEQUAL        reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    OREQUAL         reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    XOREQUAL        reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    CASE            reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    DEFAULT         reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    $end            reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    LBRACE          reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    RPAREN          reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    RBRACKET        reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)
    COLON           reduce using rule 246 (Index -> LBRACKET RepeatNewline Expression RBRACKET .)


state 393

    (247) Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .

    PERIOD          reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    LBRACKET        reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    LPAREN          reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    TIMES           reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    DIVIDE          reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    MODULO          reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    LSHIFT          reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    RSHIFT          reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    AND             reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    ANDNOT          reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    PLUS            reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    MINUS           reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    OR              reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    XOR             reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    LT              reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    GT              reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    LE              reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    GE              reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    EQ              reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    NE              reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    LAND            reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    INCR            reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    DECR            reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    COMMA           reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    LOR             reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    newline         reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    SEMI            reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    RBRACE          reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    EQUALS          reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    TIMESEQUAL      reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    DIVEQUAL        reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    MODEQUAL        reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    PLUSEQUAL       reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    MINUSEQUAL      reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    LSHIFTEQUAL     reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    RSHIFTEQUAL     reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    ANDEQUAL        reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    OREQUAL         reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    XOREQUAL        reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    CASE            reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    DEFAULT         reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    $end            reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    LBRACE          reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    RPAREN          reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    RBRACKET        reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)
    COLON           reduce using rule 247 (Arguments -> LPAREN RepeatNewline ExpressionList RPAREN .)


state 394

    (114) ExprSwitchStmt -> SWITCH RepeatNewline Expression LBRACE RepeatNewline . Exp_Inh RepeatExprCaseClause RBRACE
    (115) Exp_Inh -> . empty
    (258) empty -> .

    CASE            reduce using rule 258 (empty -> .)
    DEFAULT         reduce using rule 258 (empty -> .)
    RBRACE          reduce using rule 258 (empty -> .)

    Exp_Inh                        shift and go to state 418
    empty                          shift and go to state 419

state 395

    (253) ReadFileExp -> READFILE LPAREN Expression COMMA Expression . COMMA Expression RPAREN
    (149) Expression -> Expression . LOR RepeatNewline Term1

    COMMA           shift and go to state 420
    LOR             shift and go to state 230


state 396

    (254) WriteFileExp -> WRITEFILE LPAREN Expression COMMA Expression . COMMA Expression RPAREN
    (149) Expression -> Expression . LOR RepeatNewline Term1

    COMMA           shift and go to state 421
    LOR             shift and go to state 230


state 397

    (237) LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .

    TIMES           reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    DIVIDE          reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    MODULO          reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    LSHIFT          reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    RSHIFT          reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    AND             reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    ANDNOT          reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    PLUS            reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    MINUS           reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    OR              reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    XOR             reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    LT              reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    GT              reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    LE              reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    GE              reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    EQ              reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    NE              reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    LAND            reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    INCR            reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    DECR            reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    COMMA           reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    LOR             reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    newline         reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    SEMI            reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    RBRACE          reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    EQUALS          reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    TIMESEQUAL      reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    DIVEQUAL        reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    MODEQUAL        reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    PLUSEQUAL       reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    MINUSEQUAL      reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    LSHIFTEQUAL     reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    RSHIFTEQUAL     reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    ANDEQUAL        reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    OREQUAL         reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    XOREQUAL        reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    CASE            reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    DEFAULT         reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    $end            reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    LBRACE          reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    RPAREN          reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    RBRACKET        reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)
    COLON           reduce using rule 237 (LiteralValue -> LBRACE RepeatNewline ElementList RBRACE .)


state 398

    (238) ElementList -> KeyedElement RepeatKeyedElement .

    RBRACE          reduce using rule 238 (ElementList -> KeyedElement RepeatKeyedElement .)


state 399

    (239) RepeatKeyedElement -> COMMA . RepeatNewline KeyedElement RepeatKeyedElement
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 422
    empty                          shift and go to state 5

state 400

    (240) RepeatKeyedElement -> empty .

    RBRACE          reduce using rule 240 (RepeatKeyedElement -> empty .)


state 401

    (228) StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl . RBRACE

    RBRACE          shift and go to state 423


state 402

    (230) RepeatFieldDecl -> FieldDecl . StatementEnd RepeatFieldDecl
    (231) RepeatFieldDecl -> FieldDecl .
    (260) StatementEnd -> . terminator StatementEnd
    (261) StatementEnd -> . newline StatementEnd
    (262) StatementEnd -> . terminator
    (263) StatementEnd -> . newline
    (259) terminator -> . SEMI

    RBRACE          reduce using rule 231 (RepeatFieldDecl -> FieldDecl .)
    newline         shift and go to state 19
    SEMI            shift and go to state 20

    StatementEnd                   shift and go to state 424
    terminator                     shift and go to state 18

state 403

    (232) RepeatFieldDecl -> empty .

    RBRACE          reduce using rule 232 (RepeatFieldDecl -> empty .)


state 404

    (233) FieldDecl -> IdentifierList . Types
    (250) IdentifierList -> IdentifierList . COMMA RepeatNewline ID
    (219) Types -> . Mytypes
    (220) Types -> . TypeLit
    (221) Types -> . OperandName
    (202) Mytypes -> . BOOL
    (203) Mytypes -> . BYTE
    (204) Mytypes -> . INT
    (205) Mytypes -> . UINT8
    (206) Mytypes -> . UINT16
    (207) Mytypes -> . UINT32
    (208) Mytypes -> . UINT64
    (209) Mytypes -> . INT8
    (210) Mytypes -> . INT16
    (211) Mytypes -> . INT32
    (212) Mytypes -> . INT64
    (213) Mytypes -> . UINT
    (214) Mytypes -> . FLOAT32
    (215) Mytypes -> . FLOAT64
    (216) Mytypes -> . UINTPTR
    (217) Mytypes -> . STRING
    (218) Mytypes -> . ERROR
    (222) TypeLit -> . StructType
    (223) TypeLit -> . ArrayType
    (224) TypeLit -> . PointerType
    (225) TypeLit -> . SliceType
    (243) OperandName -> . ID
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (227) PointerType -> . TIMES Types
    (226) SliceType -> . LBRACKET RBRACKET Types

    COMMA           shift and go to state 59
    BOOL            shift and go to state 64
    BYTE            shift and go to state 65
    INT             shift and go to state 66
    UINT8           shift and go to state 67
    UINT16          shift and go to state 68
    UINT32          shift and go to state 69
    UINT64          shift and go to state 70
    INT8            shift and go to state 71
    INT16           shift and go to state 72
    INT32           shift and go to state 73
    INT64           shift and go to state 74
    UINT            shift and go to state 75
    FLOAT32         shift and go to state 76
    FLOAT64         shift and go to state 77
    UINTPTR         shift and go to state 78
    STRING          shift and go to state 79
    ERROR           shift and go to state 80
    ID              shift and go to state 60
    STRUCT          shift and go to state 85
    LBRACKET        shift and go to state 86
    TIMES           shift and go to state 87

    Types                          shift and go to state 425
    Mytypes                        shift and go to state 61
    TypeLit                        shift and go to state 62
    OperandName                    shift and go to state 63
    StructType                     shift and go to state 81
    ArrayType                      shift and go to state 82
    PointerType                    shift and go to state 83
    SliceType                      shift and go to state 84

state 405

    (61) RepeatParameterDecl -> COMMA RepeatNewline . ParameterDecl RepeatParameterDecl
    (63) ParameterDecl -> . ID Types
    (64) ParameterDecl -> . Types
    (219) Types -> . Mytypes
    (220) Types -> . TypeLit
    (221) Types -> . OperandName
    (202) Mytypes -> . BOOL
    (203) Mytypes -> . BYTE
    (204) Mytypes -> . INT
    (205) Mytypes -> . UINT8
    (206) Mytypes -> . UINT16
    (207) Mytypes -> . UINT32
    (208) Mytypes -> . UINT64
    (209) Mytypes -> . INT8
    (210) Mytypes -> . INT16
    (211) Mytypes -> . INT32
    (212) Mytypes -> . INT64
    (213) Mytypes -> . UINT
    (214) Mytypes -> . FLOAT32
    (215) Mytypes -> . FLOAT64
    (216) Mytypes -> . UINTPTR
    (217) Mytypes -> . STRING
    (218) Mytypes -> . ERROR
    (222) TypeLit -> . StructType
    (223) TypeLit -> . ArrayType
    (224) TypeLit -> . PointerType
    (225) TypeLit -> . SliceType
    (243) OperandName -> . ID
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (227) PointerType -> . TIMES Types
    (226) SliceType -> . LBRACKET RBRACKET Types

    ID              shift and go to state 323
    BOOL            shift and go to state 64
    BYTE            shift and go to state 65
    INT             shift and go to state 66
    UINT8           shift and go to state 67
    UINT16          shift and go to state 68
    UINT32          shift and go to state 69
    UINT64          shift and go to state 70
    INT8            shift and go to state 71
    INT16           shift and go to state 72
    INT32           shift and go to state 73
    INT64           shift and go to state 74
    UINT            shift and go to state 75
    FLOAT32         shift and go to state 76
    FLOAT64         shift and go to state 77
    UINTPTR         shift and go to state 78
    STRING          shift and go to state 79
    ERROR           shift and go to state 80
    STRUCT          shift and go to state 85
    LBRACKET        shift and go to state 86
    TIMES           shift and go to state 87

    ParameterDecl                  shift and go to state 426
    Types                          shift and go to state 324
    Mytypes                        shift and go to state 61
    TypeLit                        shift and go to state 62
    OperandName                    shift and go to state 63
    StructType                     shift and go to state 81
    ArrayType                      shift and go to state 82
    PointerType                    shift and go to state 83
    SliceType                      shift and go to state 84

state 406

    (251) MallocExp -> MALLOC LPAREN Expression RPAREN .

    newline         reduce using rule 251 (MallocExp -> MALLOC LPAREN Expression RPAREN .)
    SEMI            reduce using rule 251 (MallocExp -> MALLOC LPAREN Expression RPAREN .)
    RBRACE          reduce using rule 251 (MallocExp -> MALLOC LPAREN Expression RPAREN .)
    CASE            reduce using rule 251 (MallocExp -> MALLOC LPAREN Expression RPAREN .)
    DEFAULT         reduce using rule 251 (MallocExp -> MALLOC LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 251 (MallocExp -> MALLOC LPAREN Expression RPAREN .)


state 407

    (256) SinExp -> SIN LPAREN Expression RPAREN .

    newline         reduce using rule 256 (SinExp -> SIN LPAREN Expression RPAREN .)
    SEMI            reduce using rule 256 (SinExp -> SIN LPAREN Expression RPAREN .)
    RBRACE          reduce using rule 256 (SinExp -> SIN LPAREN Expression RPAREN .)
    CASE            reduce using rule 256 (SinExp -> SIN LPAREN Expression RPAREN .)
    DEFAULT         reduce using rule 256 (SinExp -> SIN LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 256 (SinExp -> SIN LPAREN Expression RPAREN .)


state 408

    (257) CosExp -> COS LPAREN Expression RPAREN .

    newline         reduce using rule 257 (CosExp -> COS LPAREN Expression RPAREN .)
    SEMI            reduce using rule 257 (CosExp -> COS LPAREN Expression RPAREN .)
    RBRACE          reduce using rule 257 (CosExp -> COS LPAREN Expression RPAREN .)
    CASE            reduce using rule 257 (CosExp -> COS LPAREN Expression RPAREN .)
    DEFAULT         reduce using rule 257 (CosExp -> COS LPAREN Expression RPAREN .)
    LBRACE          reduce using rule 257 (CosExp -> COS LPAREN Expression RPAREN .)


state 409

    (252) OpenFileExp -> OPENFILE LPAREN Expression COMMA . Expression COMMA Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 427
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 410

    (108) IfStmt -> IF IfExp Block EndIfMarker ELSE ElseMarker . Block
    (105) Block -> . LBRACE RepeatNewline StatementList RBRACE

    LBRACE          shift and go to state 47

    Block                          shift and go to state 428

state 411

    (109) IfStmt -> IF IfExp Block EndIfMarker ELSE IfStmt .

    newline         reduce using rule 109 (IfStmt -> IF IfExp Block EndIfMarker ELSE IfStmt .)
    SEMI            reduce using rule 109 (IfStmt -> IF IfExp Block EndIfMarker ELSE IfStmt .)
    RBRACE          reduce using rule 109 (IfStmt -> IF IfExp Block EndIfMarker ELSE IfStmt .)
    CASE            reduce using rule 109 (IfStmt -> IF IfExp Block EndIfMarker ELSE IfStmt .)
    DEFAULT         reduce using rule 109 (IfStmt -> IF IfExp Block EndIfMarker ELSE IfStmt .)


state 412

    (112) ElseMarker -> empty .

    LBRACE          reduce using rule 112 (ElseMarker -> empty .)


state 413

    (130) ForClause -> terminator terminator PostStmt .

    LBRACE          reduce using rule 130 (ForClause -> terminator terminator PostStmt .)


state 414

    (136) PostStmt -> SimpleStmt .

    LBRACE          reduce using rule 136 (PostStmt -> SimpleStmt .)


state 415

    (129) ForClause -> terminator Condition terminator .
    (133) ForClause -> terminator Condition terminator . PostStmt
    (136) PostStmt -> . SimpleStmt
    (69) SimpleStmt -> . Assignment
    (70) SimpleStmt -> . ShortVarDecl
    (71) SimpleStmt -> . IncDecStmt
    (72) SimpleStmt -> . ExpressionStmt
    (86) Assignment -> . ExpressionList AssignOp RepeatNewline ExpressionList
    (87) Assignment -> . ExpressionList EQUALS RepeatNewline ExpressionList
    (88) Assignment -> . ExpressionList EQUALS MallocExp
    (89) Assignment -> . ExpressionList EQUALS SinExp
    (90) Assignment -> . ExpressionList EQUALS CosExp
    (91) Assignment -> . ExpressionList EQUALS OpenFileExp
    (92) Assignment -> . ReadFileExp
    (93) Assignment -> . WriteFileExp
    (94) Assignment -> . CloseFileExp
    (95) Assignment -> . ExpressionList EQUALS NULL
    (96) ShortVarDecl -> . ID AUTOASIGN RepeatNewline Expression
    (74) IncDecStmt -> . Expression INCR
    (75) IncDecStmt -> . Expression DECR
    (73) ExpressionStmt -> . Expression
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (253) ReadFileExp -> . READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (254) WriteFileExp -> . WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (255) CloseFileExp -> . CLOSEFILE LPAREN Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LBRACE          reduce using rule 129 (ForClause -> terminator Condition terminator .)
    ID              shift and go to state 342
    READFILE        shift and go to state 147
    WRITEFILE       shift and go to state 149
    CLOSEFILE       shift and go to state 150
    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    PostStmt                       shift and go to state 429
    SimpleStmt                     shift and go to state 414
    Assignment                     shift and go to state 117
    ShortVarDecl                   shift and go to state 118
    IncDecStmt                     shift and go to state 119
    ExpressionStmt                 shift and go to state 120
    ExpressionList                 shift and go to state 122
    ReadFileExp                    shift and go to state 139
    WriteFileExp                   shift and go to state 140
    CloseFileExp                   shift and go to state 141
    Expression                     shift and go to state 136
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 416

    (128) ForClause -> InitStmt terminator terminator .
    (132) ForClause -> InitStmt terminator terminator . PostStmt
    (136) PostStmt -> . SimpleStmt
    (69) SimpleStmt -> . Assignment
    (70) SimpleStmt -> . ShortVarDecl
    (71) SimpleStmt -> . IncDecStmt
    (72) SimpleStmt -> . ExpressionStmt
    (86) Assignment -> . ExpressionList AssignOp RepeatNewline ExpressionList
    (87) Assignment -> . ExpressionList EQUALS RepeatNewline ExpressionList
    (88) Assignment -> . ExpressionList EQUALS MallocExp
    (89) Assignment -> . ExpressionList EQUALS SinExp
    (90) Assignment -> . ExpressionList EQUALS CosExp
    (91) Assignment -> . ExpressionList EQUALS OpenFileExp
    (92) Assignment -> . ReadFileExp
    (93) Assignment -> . WriteFileExp
    (94) Assignment -> . CloseFileExp
    (95) Assignment -> . ExpressionList EQUALS NULL
    (96) ShortVarDecl -> . ID AUTOASIGN RepeatNewline Expression
    (74) IncDecStmt -> . Expression INCR
    (75) IncDecStmt -> . Expression DECR
    (73) ExpressionStmt -> . Expression
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (253) ReadFileExp -> . READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (254) WriteFileExp -> . WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (255) CloseFileExp -> . CLOSEFILE LPAREN Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LBRACE          reduce using rule 128 (ForClause -> InitStmt terminator terminator .)
    ID              shift and go to state 342
    READFILE        shift and go to state 147
    WRITEFILE       shift and go to state 149
    CLOSEFILE       shift and go to state 150
    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    PostStmt                       shift and go to state 430
    SimpleStmt                     shift and go to state 414
    Assignment                     shift and go to state 117
    ShortVarDecl                   shift and go to state 118
    IncDecStmt                     shift and go to state 119
    ExpressionStmt                 shift and go to state 120
    ExpressionList                 shift and go to state 122
    ReadFileExp                    shift and go to state 139
    WriteFileExp                   shift and go to state 140
    CloseFileExp                   shift and go to state 141
    Expression                     shift and go to state 136
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 417

    (131) ForClause -> InitStmt terminator Condition . terminator
    (134) ForClause -> InitStmt terminator Condition . terminator PostStmt
    (259) terminator -> . SEMI

    SEMI            shift and go to state 20

    terminator                     shift and go to state 431

state 418

    (114) ExprSwitchStmt -> SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh . RepeatExprCaseClause RBRACE
    (116) RepeatExprCaseClause -> . ExprCaseClause RepeatExprCaseClause
    (117) RepeatExprCaseClause -> . empty
    (118) ExprCaseClause -> . ExprSwitchCase COLON RepeatNewline StatementList
    (258) empty -> .
    (119) ExprSwitchCase -> . CASE CaseMarker RepeatNewline Expression
    (120) ExprSwitchCase -> . DEFAULT DefaultMarker RepeatNewline

    RBRACE          reduce using rule 258 (empty -> .)
    CASE            shift and go to state 436
    DEFAULT         shift and go to state 437

    RepeatExprCaseClause           shift and go to state 432
    ExprCaseClause                 shift and go to state 433
    empty                          shift and go to state 434
    ExprSwitchCase                 shift and go to state 435

state 419

    (115) Exp_Inh -> empty .

    CASE            reduce using rule 115 (Exp_Inh -> empty .)
    DEFAULT         reduce using rule 115 (Exp_Inh -> empty .)
    RBRACE          reduce using rule 115 (Exp_Inh -> empty .)


state 420

    (253) ReadFileExp -> READFILE LPAREN Expression COMMA Expression COMMA . Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 438
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 421

    (254) WriteFileExp -> WRITEFILE LPAREN Expression COMMA Expression COMMA . Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 439
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 422

    (239) RepeatKeyedElement -> COMMA RepeatNewline . KeyedElement RepeatKeyedElement
    (241) KeyedElement -> . Element
    (242) Element -> . BasicLit
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER

    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174

    KeyedElement                   shift and go to state 440
    Element                        shift and go to state 371
    BasicLit                       shift and go to state 372
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169

state 423

    (228) StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE .

    EQUALS          reduce using rule 228 (StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE .)
    newline         reduce using rule 228 (StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE .)
    SEMI            reduce using rule 228 (StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE .)
    $end            reduce using rule 228 (StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE .)
    RBRACE          reduce using rule 228 (StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE .)
    CASE            reduce using rule 228 (StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE .)
    DEFAULT         reduce using rule 228 (StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE .)
    LBRACE          reduce using rule 228 (StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE .)
    COMMA           reduce using rule 228 (StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE .)
    RPAREN          reduce using rule 228 (StructType -> STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE .)


state 424

    (230) RepeatFieldDecl -> FieldDecl StatementEnd . RepeatFieldDecl
    (230) RepeatFieldDecl -> . FieldDecl StatementEnd RepeatFieldDecl
    (231) RepeatFieldDecl -> . FieldDecl
    (232) RepeatFieldDecl -> . empty
    (233) FieldDecl -> . IdentifierList Types
    (258) empty -> .
    (249) IdentifierList -> . ID
    (250) IdentifierList -> . IdentifierList COMMA RepeatNewline ID

    RBRACE          reduce using rule 258 (empty -> .)
    ID              shift and go to state 50

    FieldDecl                      shift and go to state 402
    RepeatFieldDecl                shift and go to state 441
    empty                          shift and go to state 403
    IdentifierList                 shift and go to state 404

state 425

    (233) FieldDecl -> IdentifierList Types .

    newline         reduce using rule 233 (FieldDecl -> IdentifierList Types .)
    SEMI            reduce using rule 233 (FieldDecl -> IdentifierList Types .)
    RBRACE          reduce using rule 233 (FieldDecl -> IdentifierList Types .)


state 426

    (61) RepeatParameterDecl -> COMMA RepeatNewline ParameterDecl . RepeatParameterDecl
    (61) RepeatParameterDecl -> . COMMA RepeatNewline ParameterDecl RepeatParameterDecl
    (62) RepeatParameterDecl -> . empty
    (258) empty -> .

    COMMA           shift and go to state 378
    RPAREN          reduce using rule 258 (empty -> .)

    RepeatParameterDecl            shift and go to state 442
    empty                          shift and go to state 379

state 427

    (252) OpenFileExp -> OPENFILE LPAREN Expression COMMA Expression . COMMA Expression RPAREN
    (149) Expression -> Expression . LOR RepeatNewline Term1

    COMMA           shift and go to state 443
    LOR             shift and go to state 230


state 428

    (108) IfStmt -> IF IfExp Block EndIfMarker ELSE ElseMarker Block .

    newline         reduce using rule 108 (IfStmt -> IF IfExp Block EndIfMarker ELSE ElseMarker Block .)
    SEMI            reduce using rule 108 (IfStmt -> IF IfExp Block EndIfMarker ELSE ElseMarker Block .)
    RBRACE          reduce using rule 108 (IfStmt -> IF IfExp Block EndIfMarker ELSE ElseMarker Block .)
    CASE            reduce using rule 108 (IfStmt -> IF IfExp Block EndIfMarker ELSE ElseMarker Block .)
    DEFAULT         reduce using rule 108 (IfStmt -> IF IfExp Block EndIfMarker ELSE ElseMarker Block .)


state 429

    (133) ForClause -> terminator Condition terminator PostStmt .

    LBRACE          reduce using rule 133 (ForClause -> terminator Condition terminator PostStmt .)


state 430

    (132) ForClause -> InitStmt terminator terminator PostStmt .

    LBRACE          reduce using rule 132 (ForClause -> InitStmt terminator terminator PostStmt .)


state 431

    (131) ForClause -> InitStmt terminator Condition terminator .
    (134) ForClause -> InitStmt terminator Condition terminator . PostStmt
    (136) PostStmt -> . SimpleStmt
    (69) SimpleStmt -> . Assignment
    (70) SimpleStmt -> . ShortVarDecl
    (71) SimpleStmt -> . IncDecStmt
    (72) SimpleStmt -> . ExpressionStmt
    (86) Assignment -> . ExpressionList AssignOp RepeatNewline ExpressionList
    (87) Assignment -> . ExpressionList EQUALS RepeatNewline ExpressionList
    (88) Assignment -> . ExpressionList EQUALS MallocExp
    (89) Assignment -> . ExpressionList EQUALS SinExp
    (90) Assignment -> . ExpressionList EQUALS CosExp
    (91) Assignment -> . ExpressionList EQUALS OpenFileExp
    (92) Assignment -> . ReadFileExp
    (93) Assignment -> . WriteFileExp
    (94) Assignment -> . CloseFileExp
    (95) Assignment -> . ExpressionList EQUALS NULL
    (96) ShortVarDecl -> . ID AUTOASIGN RepeatNewline Expression
    (74) IncDecStmt -> . Expression INCR
    (75) IncDecStmt -> . Expression DECR
    (73) ExpressionStmt -> . Expression
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (253) ReadFileExp -> . READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (254) WriteFileExp -> . WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (255) CloseFileExp -> . CLOSEFILE LPAREN Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    LBRACE          reduce using rule 131 (ForClause -> InitStmt terminator Condition terminator .)
    ID              shift and go to state 342
    READFILE        shift and go to state 147
    WRITEFILE       shift and go to state 149
    CLOSEFILE       shift and go to state 150
    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    PostStmt                       shift and go to state 444
    SimpleStmt                     shift and go to state 414
    Assignment                     shift and go to state 117
    ShortVarDecl                   shift and go to state 118
    IncDecStmt                     shift and go to state 119
    ExpressionStmt                 shift and go to state 120
    ExpressionList                 shift and go to state 122
    ReadFileExp                    shift and go to state 139
    WriteFileExp                   shift and go to state 140
    CloseFileExp                   shift and go to state 141
    Expression                     shift and go to state 136
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 432

    (114) ExprSwitchStmt -> SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause . RBRACE

    RBRACE          shift and go to state 445


state 433

    (116) RepeatExprCaseClause -> ExprCaseClause . RepeatExprCaseClause
    (116) RepeatExprCaseClause -> . ExprCaseClause RepeatExprCaseClause
    (117) RepeatExprCaseClause -> . empty
    (118) ExprCaseClause -> . ExprSwitchCase COLON RepeatNewline StatementList
    (258) empty -> .
    (119) ExprSwitchCase -> . CASE CaseMarker RepeatNewline Expression
    (120) ExprSwitchCase -> . DEFAULT DefaultMarker RepeatNewline

    RBRACE          reduce using rule 258 (empty -> .)
    CASE            shift and go to state 436
    DEFAULT         shift and go to state 437

    ExprCaseClause                 shift and go to state 433
    RepeatExprCaseClause           shift and go to state 446
    empty                          shift and go to state 434
    ExprSwitchCase                 shift and go to state 435

state 434

    (117) RepeatExprCaseClause -> empty .

    RBRACE          reduce using rule 117 (RepeatExprCaseClause -> empty .)


state 435

    (118) ExprCaseClause -> ExprSwitchCase . COLON RepeatNewline StatementList

    COLON           shift and go to state 447


state 436

    (119) ExprSwitchCase -> CASE . CaseMarker RepeatNewline Expression
    (121) CaseMarker -> . empty
    (258) empty -> .

    newline         reduce using rule 258 (empty -> .)
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    CaseMarker                     shift and go to state 448
    empty                          shift and go to state 449

state 437

    (120) ExprSwitchCase -> DEFAULT . DefaultMarker RepeatNewline
    (122) DefaultMarker -> . empty
    (258) empty -> .

    newline         reduce using rule 258 (empty -> .)
    COLON           reduce using rule 258 (empty -> .)

    DefaultMarker                  shift and go to state 450
    empty                          shift and go to state 451

state 438

    (253) ReadFileExp -> READFILE LPAREN Expression COMMA Expression COMMA Expression . RPAREN
    (149) Expression -> Expression . LOR RepeatNewline Term1

    RPAREN          shift and go to state 452
    LOR             shift and go to state 230


state 439

    (254) WriteFileExp -> WRITEFILE LPAREN Expression COMMA Expression COMMA Expression . RPAREN
    (149) Expression -> Expression . LOR RepeatNewline Term1

    RPAREN          shift and go to state 453
    LOR             shift and go to state 230


state 440

    (239) RepeatKeyedElement -> COMMA RepeatNewline KeyedElement . RepeatKeyedElement
    (239) RepeatKeyedElement -> . COMMA RepeatNewline KeyedElement RepeatKeyedElement
    (240) RepeatKeyedElement -> . empty
    (258) empty -> .

    COMMA           shift and go to state 399
    RBRACE          reduce using rule 258 (empty -> .)

    RepeatKeyedElement             shift and go to state 454
    empty                          shift and go to state 400

state 441

    (230) RepeatFieldDecl -> FieldDecl StatementEnd RepeatFieldDecl .

    RBRACE          reduce using rule 230 (RepeatFieldDecl -> FieldDecl StatementEnd RepeatFieldDecl .)


state 442

    (61) RepeatParameterDecl -> COMMA RepeatNewline ParameterDecl RepeatParameterDecl .

    RPAREN          reduce using rule 61 (RepeatParameterDecl -> COMMA RepeatNewline ParameterDecl RepeatParameterDecl .)


state 443

    (252) OpenFileExp -> OPENFILE LPAREN Expression COMMA Expression COMMA . Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 455
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 444

    (134) ForClause -> InitStmt terminator Condition terminator PostStmt .

    LBRACE          reduce using rule 134 (ForClause -> InitStmt terminator Condition terminator PostStmt .)


state 445

    (114) ExprSwitchStmt -> SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE .

    newline         reduce using rule 114 (ExprSwitchStmt -> SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE .)
    SEMI            reduce using rule 114 (ExprSwitchStmt -> SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE .)
    RBRACE          reduce using rule 114 (ExprSwitchStmt -> SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE .)
    CASE            reduce using rule 114 (ExprSwitchStmt -> SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE .)
    DEFAULT         reduce using rule 114 (ExprSwitchStmt -> SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE .)


state 446

    (116) RepeatExprCaseClause -> ExprCaseClause RepeatExprCaseClause .

    RBRACE          reduce using rule 116 (RepeatExprCaseClause -> ExprCaseClause RepeatExprCaseClause .)


state 447

    (118) ExprCaseClause -> ExprSwitchCase COLON . RepeatNewline StatementList
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    RETURN          reduce using rule 258 (empty -> .)
    BREAK           reduce using rule 258 (empty -> .)
    CONTINUE        reduce using rule 258 (empty -> .)
    FALLTHROUGH     reduce using rule 258 (empty -> .)
    GOTO            reduce using rule 258 (empty -> .)
    LBRACE          reduce using rule 258 (empty -> .)
    IF              reduce using rule 258 (empty -> .)
    FOR             reduce using rule 258 (empty -> .)
    DEFER           reduce using rule 258 (empty -> .)
    SCANINT         reduce using rule 258 (empty -> .)
    SCANSTR         reduce using rule 258 (empty -> .)
    CONST           reduce using rule 258 (empty -> .)
    TYPE            reduce using rule 258 (empty -> .)
    VAR             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    SWITCH          reduce using rule 258 (empty -> .)
    PRINTINT        reduce using rule 258 (empty -> .)
    PRINTSTR        reduce using rule 258 (empty -> .)
    PRINTFLOAT      reduce using rule 258 (empty -> .)
    READFILE        reduce using rule 258 (empty -> .)
    WRITEFILE       reduce using rule 258 (empty -> .)
    CLOSEFILE       reduce using rule 258 (empty -> .)
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)
    CASE            reduce using rule 258 (empty -> .)
    DEFAULT         reduce using rule 258 (empty -> .)
    RBRACE          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 456
    empty                          shift and go to state 5

state 448

    (119) ExprSwitchCase -> CASE CaseMarker . RepeatNewline Expression
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    NULL            reduce using rule 258 (empty -> .)
    LPAREN          reduce using rule 258 (empty -> .)
    PLUS            reduce using rule 258 (empty -> .)
    MINUS           reduce using rule 258 (empty -> .)
    LNOT            reduce using rule 258 (empty -> .)
    TIMES           reduce using rule 258 (empty -> .)
    AND             reduce using rule 258 (empty -> .)
    ID              reduce using rule 258 (empty -> .)
    INTEGER         reduce using rule 258 (empty -> .)
    FLOAT           reduce using rule 258 (empty -> .)
    STRINGVAL       reduce using rule 258 (empty -> .)
    CHARACTER       reduce using rule 258 (empty -> .)
    LBRACKET        reduce using rule 258 (empty -> .)
    STRUCT          reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 457
    empty                          shift and go to state 5

state 449

    (121) CaseMarker -> empty .

    newline         reduce using rule 121 (CaseMarker -> empty .)
    NULL            reduce using rule 121 (CaseMarker -> empty .)
    LPAREN          reduce using rule 121 (CaseMarker -> empty .)
    PLUS            reduce using rule 121 (CaseMarker -> empty .)
    MINUS           reduce using rule 121 (CaseMarker -> empty .)
    LNOT            reduce using rule 121 (CaseMarker -> empty .)
    TIMES           reduce using rule 121 (CaseMarker -> empty .)
    AND             reduce using rule 121 (CaseMarker -> empty .)
    ID              reduce using rule 121 (CaseMarker -> empty .)
    INTEGER         reduce using rule 121 (CaseMarker -> empty .)
    FLOAT           reduce using rule 121 (CaseMarker -> empty .)
    STRINGVAL       reduce using rule 121 (CaseMarker -> empty .)
    CHARACTER       reduce using rule 121 (CaseMarker -> empty .)
    LBRACKET        reduce using rule 121 (CaseMarker -> empty .)
    STRUCT          reduce using rule 121 (CaseMarker -> empty .)


state 450

    (120) ExprSwitchCase -> DEFAULT DefaultMarker . RepeatNewline
    (264) RepeatNewline -> . newline RepeatNewline
    (265) RepeatNewline -> . empty
    (258) empty -> .

    newline         shift and go to state 4
    COLON           reduce using rule 258 (empty -> .)

    RepeatNewline                  shift and go to state 458
    empty                          shift and go to state 5

state 451

    (122) DefaultMarker -> empty .

    newline         reduce using rule 122 (DefaultMarker -> empty .)
    COLON           reduce using rule 122 (DefaultMarker -> empty .)


state 452

    (253) ReadFileExp -> READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .

    newline         reduce using rule 253 (ReadFileExp -> READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    SEMI            reduce using rule 253 (ReadFileExp -> READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    RBRACE          reduce using rule 253 (ReadFileExp -> READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    CASE            reduce using rule 253 (ReadFileExp -> READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    DEFAULT         reduce using rule 253 (ReadFileExp -> READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    LBRACE          reduce using rule 253 (ReadFileExp -> READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)


state 453

    (254) WriteFileExp -> WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .

    newline         reduce using rule 254 (WriteFileExp -> WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    SEMI            reduce using rule 254 (WriteFileExp -> WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    RBRACE          reduce using rule 254 (WriteFileExp -> WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    CASE            reduce using rule 254 (WriteFileExp -> WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    DEFAULT         reduce using rule 254 (WriteFileExp -> WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    LBRACE          reduce using rule 254 (WriteFileExp -> WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)


state 454

    (239) RepeatKeyedElement -> COMMA RepeatNewline KeyedElement RepeatKeyedElement .

    RBRACE          reduce using rule 239 (RepeatKeyedElement -> COMMA RepeatNewline KeyedElement RepeatKeyedElement .)


state 455

    (252) OpenFileExp -> OPENFILE LPAREN Expression COMMA Expression COMMA Expression . RPAREN
    (149) Expression -> Expression . LOR RepeatNewline Term1

    RPAREN          shift and go to state 459
    LOR             shift and go to state 230


state 456

    (118) ExprCaseClause -> ExprSwitchCase COLON RepeatNewline . StatementList
    (20) StatementList -> . Statement StatementEnd StatementList
    (21) StatementList -> . Statement
    (22) StatementList -> . empty
    (23) Statement -> . Declaration
    (24) Statement -> . LabeledStmt
    (25) Statement -> . SimpleStmt
    (26) Statement -> . ReturnStmt
    (27) Statement -> . BreakStmt
    (28) Statement -> . ContinueStmt
    (29) Statement -> . FallthroughStmt
    (30) Statement -> . GotoStmt
    (31) Statement -> . Block
    (32) Statement -> . IfStmt
    (33) Statement -> . SwitchStmt
    (34) Statement -> . ForStmt
    (35) Statement -> . DeferStmt
    (36) Statement -> . PrintStmt
    (37) Statement -> . ScanIntStmt
    (38) Statement -> . ScanStrStmt
    (258) empty -> .
    (39) Declaration -> . ConstDecl
    (40) Declaration -> . TypeDecl
    (41) Declaration -> . VarDecl
    (67) LabeledStmt -> . Label COLON RepeatNewline Statement
    (69) SimpleStmt -> . Assignment
    (70) SimpleStmt -> . ShortVarDecl
    (71) SimpleStmt -> . IncDecStmt
    (72) SimpleStmt -> . ExpressionStmt
    (97) ReturnStmt -> . RETURN
    (98) ReturnStmt -> . RETURN ExpressionList
    (100) BreakStmt -> . BREAK
    (101) BreakStmt -> . BREAK Label
    (102) ContinueStmt -> . CONTINUE
    (103) ContinueStmt -> . CONTINUE Label
    (99) FallthroughStmt -> . FALLTHROUGH
    (104) GotoStmt -> . GOTO Label
    (105) Block -> . LBRACE RepeatNewline StatementList RBRACE
    (107) IfStmt -> . IF IfExp Block
    (108) IfStmt -> . IF IfExp Block EndIfMarker ELSE ElseMarker Block
    (109) IfStmt -> . IF IfExp Block EndIfMarker ELSE IfStmt
    (113) SwitchStmt -> . ExprSwitchStmt
    (123) ForStmt -> . FOR ForMarker RepeatNewline Block
    (124) ForStmt -> . FOR ForMarker RepeatNewline Condition Block
    (125) ForStmt -> . FOR ForMarker RepeatNewline ForClause Block
    (138) DeferStmt -> . DEFER PrimaryExpr Arguments
    (139) PrintStmt -> . PrintIntStmt
    (140) PrintStmt -> . PrintStrStmt
    (141) PrintStmt -> . PrintFloatStmt
    (145) ScanIntStmt -> . SCANINT Expression
    (146) ScanStrStmt -> . SCANSTR Expression
    (42) ConstDecl -> . CONST ConstSpec
    (45) TypeDecl -> . TYPE RepeatNewline TypeSpec
    (49) VarDecl -> . VAR RepeatNewline VarSpec
    (68) Label -> . ID
    (86) Assignment -> . ExpressionList AssignOp RepeatNewline ExpressionList
    (87) Assignment -> . ExpressionList EQUALS RepeatNewline ExpressionList
    (88) Assignment -> . ExpressionList EQUALS MallocExp
    (89) Assignment -> . ExpressionList EQUALS SinExp
    (90) Assignment -> . ExpressionList EQUALS CosExp
    (91) Assignment -> . ExpressionList EQUALS OpenFileExp
    (92) Assignment -> . ReadFileExp
    (93) Assignment -> . WriteFileExp
    (94) Assignment -> . CloseFileExp
    (95) Assignment -> . ExpressionList EQUALS NULL
    (96) ShortVarDecl -> . ID AUTOASIGN RepeatNewline Expression
    (74) IncDecStmt -> . Expression INCR
    (75) IncDecStmt -> . Expression DECR
    (73) ExpressionStmt -> . Expression
    (114) ExprSwitchStmt -> . SWITCH RepeatNewline Expression LBRACE RepeatNewline Exp_Inh RepeatExprCaseClause RBRACE
    (142) PrintIntStmt -> . PRINTINT Expression
    (144) PrintStrStmt -> . PRINTSTR Expression
    (143) PrintFloatStmt -> . PRINTFLOAT Expression
    (147) ExpressionList -> . Expression
    (148) ExpressionList -> . Expression COMMA RepeatNewline ExpressionList
    (253) ReadFileExp -> . READFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (254) WriteFileExp -> . WRITEFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN
    (255) CloseFileExp -> . CLOSEFILE LPAREN Expression RPAREN
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    CASE            reduce using rule 258 (empty -> .)
    DEFAULT         reduce using rule 258 (empty -> .)
    RBRACE          reduce using rule 258 (empty -> .)
    RETURN          shift and go to state 121
    BREAK           shift and go to state 123
    CONTINUE        shift and go to state 124
    FALLTHROUGH     shift and go to state 125
    GOTO            shift and go to state 126
    LBRACE          shift and go to state 47
    IF              shift and go to state 127
    FOR             shift and go to state 129
    DEFER           shift and go to state 130
    SCANINT         shift and go to state 135
    SCANSTR         shift and go to state 137
    CONST           shift and go to state 35
    TYPE            shift and go to state 36
    VAR             shift and go to state 37
    ID              shift and go to state 138
    SWITCH          shift and go to state 143
    PRINTINT        shift and go to state 144
    PRINTSTR        shift and go to state 145
    PRINTFLOAT      shift and go to state 146
    READFILE        shift and go to state 147
    WRITEFILE       shift and go to state 149
    CLOSEFILE       shift and go to state 150
    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    StatementList                  shift and go to state 460
    Statement                      shift and go to state 98
    empty                          shift and go to state 99
    Declaration                    shift and go to state 100
    LabeledStmt                    shift and go to state 101
    SimpleStmt                     shift and go to state 102
    ReturnStmt                     shift and go to state 103
    BreakStmt                      shift and go to state 104
    ContinueStmt                   shift and go to state 105
    FallthroughStmt                shift and go to state 106
    GotoStmt                       shift and go to state 107
    Block                          shift and go to state 108
    IfStmt                         shift and go to state 109
    SwitchStmt                     shift and go to state 110
    ForStmt                        shift and go to state 111
    DeferStmt                      shift and go to state 112
    PrintStmt                      shift and go to state 113
    ScanIntStmt                    shift and go to state 114
    ScanStrStmt                    shift and go to state 115
    ConstDecl                      shift and go to state 31
    TypeDecl                       shift and go to state 32
    VarDecl                        shift and go to state 33
    Label                          shift and go to state 116
    Assignment                     shift and go to state 117
    ShortVarDecl                   shift and go to state 118
    IncDecStmt                     shift and go to state 119
    ExpressionStmt                 shift and go to state 120
    ExpressionList                 shift and go to state 122
    ExprSwitchStmt                 shift and go to state 128
    PrimaryExpr                    shift and go to state 131
    PrintIntStmt                   shift and go to state 132
    PrintStrStmt                   shift and go to state 133
    PrintFloatStmt                 shift and go to state 134
    Expression                     shift and go to state 136
    ReadFileExp                    shift and go to state 139
    WriteFileExp                   shift and go to state 140
    CloseFileExp                   shift and go to state 141
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 457

    (119) ExprSwitchCase -> CASE CaseMarker RepeatNewline . Expression
    (149) Expression -> . Expression LOR RepeatNewline Term1
    (150) Expression -> . Term1
    (151) Term1 -> . Term1 LAND RepeatNewline Term2
    (152) Term1 -> . Term2
    (153) Term2 -> . Term2 Relop RepeatNewline Term3
    (154) Term2 -> . Term3
    (161) Term3 -> . Term3 PLUS RepeatNewline Term4
    (162) Term3 -> . Term3 MINUS RepeatNewline Term4
    (163) Term3 -> . Term3 OR RepeatNewline Term4
    (164) Term3 -> . Term3 XOR RepeatNewline Term4
    (165) Term3 -> . NULL
    (166) Term3 -> . Term4
    (167) Term4 -> . Term4 TIMES RepeatNewline Term5
    (168) Term4 -> . Term4 DIVIDE RepeatNewline Term5
    (169) Term4 -> . Term4 MODULO RepeatNewline Term5
    (170) Term4 -> . Term4 LSHIFT RepeatNewline Term5
    (171) Term4 -> . Term4 RSHIFT RepeatNewline Term5
    (172) Term4 -> . Term4 AND RepeatNewline Term5
    (173) Term4 -> . Term4 ANDNOT RepeatNewline Term5
    (174) Term4 -> . Term5
    (175) Term5 -> . UnaryExp
    (176) UnaryExp -> . PrimaryExpr
    (177) UnaryExp -> . Literal
    (178) UnaryExp -> . UnaryOp RepeatNewline UnaryExp
    (184) PrimaryExpr -> . OperandName2
    (185) PrimaryExpr -> . PrimaryExpr Selector
    (186) PrimaryExpr -> . PrimaryExpr Index
    (187) PrimaryExpr -> . PrimaryExpr Arguments
    (188) PrimaryExpr -> . LPAREN RepeatNewline Expression RPAREN
    (189) Literal -> . BasicLit
    (190) Literal -> . CompositeLit
    (179) UnaryOp -> . PLUS
    (180) UnaryOp -> . MINUS
    (181) UnaryOp -> . LNOT
    (182) UnaryOp -> . TIMES
    (183) UnaryOp -> . AND
    (244) OperandName2 -> . ID
    (191) BasicLit -> . intLit
    (192) BasicLit -> . floatLit
    (193) BasicLit -> . stringLit
    (198) CompositeLit -> . LiteralType LiteralValue
    (194) intLit -> . INTEGER
    (195) floatLit -> . FLOAT
    (196) stringLit -> . STRINGVAL
    (197) stringLit -> . CHARACTER
    (199) LiteralType -> . ArrayType
    (200) LiteralType -> . StructType
    (201) LiteralType -> . SliceType
    (234) ArrayType -> . LBRACKET RepeatNewline ArrayLength RBRACKET Types
    (228) StructType -> . STRUCT M RepeatNewline LBRACE RepeatNewline RepeatFieldDecl RBRACE
    (226) SliceType -> . LBRACKET RBRACKET Types

    NULL            shift and go to state 142
    LPAREN          shift and go to state 148
    PLUS            shift and go to state 154
    MINUS           shift and go to state 156
    LNOT            shift and go to state 166
    TIMES           shift and go to state 157
    AND             shift and go to state 159
    ID              shift and go to state 197
    INTEGER         shift and go to state 171
    FLOAT           shift and go to state 172
    STRINGVAL       shift and go to state 173
    CHARACTER       shift and go to state 174
    LBRACKET        shift and go to state 86
    STRUCT          shift and go to state 85

    Expression                     shift and go to state 461
    Term1                          shift and go to state 151
    Term2                          shift and go to state 152
    Term3                          shift and go to state 153
    Term4                          shift and go to state 155
    Term5                          shift and go to state 158
    UnaryExp                       shift and go to state 160
    PrimaryExpr                    shift and go to state 131
    Literal                        shift and go to state 161
    UnaryOp                        shift and go to state 162
    OperandName2                   shift and go to state 163
    BasicLit                       shift and go to state 164
    CompositeLit                   shift and go to state 165
    intLit                         shift and go to state 167
    floatLit                       shift and go to state 168
    stringLit                      shift and go to state 169
    LiteralType                    shift and go to state 170
    ArrayType                      shift and go to state 175
    StructType                     shift and go to state 176
    SliceType                      shift and go to state 177

state 458

    (120) ExprSwitchCase -> DEFAULT DefaultMarker RepeatNewline .

    COLON           reduce using rule 120 (ExprSwitchCase -> DEFAULT DefaultMarker RepeatNewline .)


state 459

    (252) OpenFileExp -> OPENFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .

    newline         reduce using rule 252 (OpenFileExp -> OPENFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    SEMI            reduce using rule 252 (OpenFileExp -> OPENFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    RBRACE          reduce using rule 252 (OpenFileExp -> OPENFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    CASE            reduce using rule 252 (OpenFileExp -> OPENFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    DEFAULT         reduce using rule 252 (OpenFileExp -> OPENFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)
    LBRACE          reduce using rule 252 (OpenFileExp -> OPENFILE LPAREN Expression COMMA Expression COMMA Expression RPAREN .)


state 460

    (118) ExprCaseClause -> ExprSwitchCase COLON RepeatNewline StatementList .

    CASE            reduce using rule 118 (ExprCaseClause -> ExprSwitchCase COLON RepeatNewline StatementList .)
    DEFAULT         reduce using rule 118 (ExprCaseClause -> ExprSwitchCase COLON RepeatNewline StatementList .)
    RBRACE          reduce using rule 118 (ExprCaseClause -> ExprSwitchCase COLON RepeatNewline StatementList .)


state 461

    (119) ExprSwitchCase -> CASE CaseMarker RepeatNewline Expression .
    (149) Expression -> Expression . LOR RepeatNewline Term1

    COLON           reduce using rule 119 (ExprSwitchCase -> CASE CaseMarker RepeatNewline Expression .)
    LOR             shift and go to state 230

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NULL in state 199 resolved as shift
